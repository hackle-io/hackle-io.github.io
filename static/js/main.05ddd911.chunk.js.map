{"version":3,"sources":["locale/en.ts","pages/Experiment/ExperimentState.tsx","pages/Experiment/Experiment.tsx","pages/Event/Event.tsx","pages/Tutorial/Tutorial.tsx","components/Divider/EmptyDivider.tsx","pages/Experiment/ExperimentVariation.tsx","pages/Experiment/tabs/VariationTab.tsx","pages/Experiment/tabs/ResultTab.tsx","states/Feedback/Snackbar.ts","components/Snackbar/SuccessSnackbar.tsx","pages/Experiment/tabs/AllowlistTab.tsx","pages/Experiment/tabs/MetricTab.tsx","states/EnvProfile.ts","pages/Experiment/ExperimentDetail.tsx","pages/Login/Login.tsx","pages/Experiment/ExperimentsCreation.tsx","pages/Event/EventCreation.tsx","pages/index.ts","pages/Home/Home.tsx","pages/Setting/Setting.tsx","pages/Account/Account.tsx","pages/Developer/Developer.tsx","layouts/LeftSideBar.tsx","layouts/Header.tsx","layouts/MainFrame.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["name","account","logout","experiment_name","experiment_status","experiment_created","experiment_result","ExperimentState","type","ExperimentStateReady","ExperimentStateRunning","ExperimentStatePaused","ExperimentStateStopped","useStyles","makeStyles","theme","createStyles","status","typography","button","width","padding","spacing","textAlign","color","palette","common","white","borderRadius","ready","backgroundColor","grey","A100","running","success","light","paused","secondary","stopped","info","classes","Chip","size","label","className","root","flexGrow","createButtonWrap","marginBottom","margin","table","minWidth","createData","key","trafficAllocation","trafficGroup","createdAt","rows","eventName","description","backButton","marginRight","instructions","marginTop","EmptyDivider","style","divider","paper","text","buttonGroup","marginR","marginLeft","textField","gray","A200","distributionInput","variationKeys","ExperimentVariation","props","useState","variation","distribution","variations","setVariations","getNextVariationKey","find","some","v","getReBalanceDistribution","balancing","length","toFixed","TableContainer","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","row","Input","fullWidth","value","endAdornment","disabled","IconButton","edge","onClick","variationKey","newVariation","filter","f","removeVariation","RemoveCircleOutline","old","newVariations","o","AddCircleOutline","VariationTab","Grid","container","item","xs","Typography","variant","improvement","baseline","confidence","ResultTab","Divider","component","Paper","snackbarStates","atom","default","message","open","SuccessSnackbar","onClose","useSetRecoilState","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","Alert","severity","border","textArea","verticalAlign","AllowlistTab","saved","setSaved","users","textAreaValues","setTextAreaValues","onChangeHandler","index","event","target","trim","match","addUserList","split","addUser","values","forEach","push","includes","replace","onRemoveHandler","variationIndex","targetIndex","user","i","onRemoveByKeyCodeHandler","keyCode","console","log","pop","Button","alignItems","icon","Face","onDelete","TextareaAutosize","onKeyDown","onChange","MetricTab","FormControlLabel","control","Checkbox","envProfile","localStorage","getItem","setItem","envProfileState","start","main","dark","pause","AntTabs","withStyles","borderBottom","indicator","Tabs","AntTab","textTransform","fontWeight","fontWeightRegular","fontFamily","join","opacity","fontWeightMedium","selected","Tab","disableRipple","display","RoutingComponent","path","componentIcon","exact","this","routingComponent","home","history","AssignmentIcon","experiment","_props","startIcon","Add","Link","to","hover","scope","experimentNew","setName","setDescription","goBack","TextField","helperText","InputLabelProps","shrink","required","autoFocus","experimentDetail","setStatus","pauseTyping","setPauseTyping","setValue","pauseModalOpen","setPauseModalOpen","env","useRecoilValue","params","abTestStatus","suppressContentEditableWarning","contentEditable","onBlur","e","textContent","Stop","Archive","PlayCircleOutline","PauseCircleOutline","SkipNext","statusButton","Dialog","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","newValue","EventIcon","eventNew","placeholder","setting","SettingIcon","PersonIcon","tutorial","React","activeStep","setActiveStep","steps","Stepper","alternativeLabel","Step","StepLabel","stepIndex","getStepContent","prevActiveStep","LiveTvIcon","developers","DeveloperModeIcon","login","drawer","flexShrink","drawerHeader","justifyContent","drawerPaper","drawerContainer","overflow","sectionDesktop","breakpoints","up","accordionDevelopment","background","accordionProduction","primary","content","LeftSideBar","useRecoilState","setEnvProfile","isActive","window","location","pathname","Drawer","Accordion","AccordionSummary","expandIcon","ExpandMore","aria-controls","AccordionDetails","RadioGroup","Radio","List","SideBarListItem","pages","Icon","ListItem","ListItemIcon","ListItemText","grow","Header","anchorEl","setAnchorEl","isMenuOpen","Boolean","handleMenuClose","AppBar","position","Toolbar","currentTarget","AccountCircle","Menu","keepMounted","transformOrigin","MenuItem","MainFrame","CssBaseline","children","App","snackbar","setSnackbar","locale","messages","en","Object","page","render","Component","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.05ddd911.chunk.js","sourcesContent":["export default {\n  name: \"Hackle.io\",\n  account: \"Account\",\n  logout: \"logout\",\n  experiment_name: \"Name\",\n  experiment_status: \"Status\",\n  experiment_created: \"Created\",\n  experiment_result: \"Result\",\n}\n","import React, { PropsWithChildren } from \"react\"\nimport { Chip, createStyles } from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { ExecutionStatusType } from \"../../model/ExecutionStatusType\"\n\ninterface Props {\n  type: ExecutionStatusType\n}\n\nexport default function ExperimentState({ type }: PropsWithChildren<Props>) {\n  switch (type) {\n    case \"READY\":\n      return <ExperimentStateReady />\n    case \"RUNNING\":\n      return <ExperimentStateRunning />\n    case \"PAUSED\":\n      return <ExperimentStatePaused />\n    case \"STOPPED\":\n      return <ExperimentStateStopped />\n  }\n}\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    status: {\n      ...theme.typography.button,\n      width: \"110px\",\n      padding: theme.spacing(1),\n      textAlign: \"center\",\n      color: theme.palette.common.white,\n      borderRadius: 0,\n    },\n    ready: {\n      backgroundColor: theme.palette.grey.A100,\n    },\n    running: {\n      backgroundColor: theme.palette.success.light,\n    },\n    paused: {\n      backgroundColor: theme.palette.secondary.light,\n    },\n    stopped: {\n      backgroundColor: theme.palette.info.light,\n    },\n  })\n)\nexport function ExperimentStateReady() {\n  const classes = useStyles()\n  return <Chip size={\"small\"} label=\"Ready\" className={`${classes.status} ${classes.ready}`} />\n}\nexport function ExperimentStateRunning() {\n  const classes = useStyles()\n  return <Chip size={\"small\"} label=\"Running\" className={`${classes.status} ${classes.running}`} />\n}\nexport function ExperimentStatePaused() {\n  const classes = useStyles()\n  return <Chip size={\"small\"} label=\"Paused\" className={`${classes.status} ${classes.paused}`} />\n}\nexport function ExperimentStateStopped() {\n  const classes = useStyles()\n  return <Chip size={\"small\"} label=\"STOPPED\" className={`${classes.status} ${classes.stopped}`} />\n}\n","import React from \"react\"\nimport {\n  Button,\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n} from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { Link, RouteComponentProps } from \"react-router-dom\"\nimport { Add as AddIcon } from \"@material-ui/icons\"\nimport ExperimentState from \"./ExperimentState\"\nimport { ExecutionStatusType } from \"../../model/ExecutionStatusType\"\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  createButtonWrap: {\n    textAlign: \"right\",\n    marginBottom: \"16px\",\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  table: {\n    minWidth: 650,\n  },\n}))\n\nfunction createData(\n  name: string,\n  key: string,\n  trafficAllocation: number,\n  trafficGroup: string,\n  status: ExecutionStatusType,\n  createdAt: string\n) {\n  return { name, key, trafficAllocation, trafficGroup, status, createdAt }\n}\n\nconst rows = [\n  createData(\"Test Name Example\", \"5521\", 30, \"50/50\", \"READY\", \"2020-5-31\"),\n  createData(\"[2020.Q3] SRP 개편 2차 테스트\", \"1382\", 60, \"34/33/33\", \"RUNNING\", \"2020-5-31\"),\n  createData(\"[2020.Q3] SRP 개편 3차 테스트\", \"4431\", 60, \"34/33/33\", \"PAUSED\", \"2020-5-31\"),\n  createData(\"[2020.Q3] SRP 개편 4차 테스트\", \"4443\", 60, \"34/33/33\", \"STOPPED\", \"2020-5-31\"),\n]\nexport default function Experiment(_props: RouteComponentProps) {\n  const classes = useStyles()\n  return (\n    <div className={classes.root}>\n      <Grid container>\n        <Grid item xs={9}>\n          <Typography variant={\"h6\"}>A/B Test</Typography>\n          <Typography variant={\"caption\"}>Create an a/b test for product experimentation</Typography>\n        </Grid>\n        <Grid item xs={3}>\n          <div className={classes.createButtonWrap}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.button}\n              startIcon={<AddIcon />}\n              component={Link}\n              to={\"/experiments/new\"}\n            >\n              New\n            </Button>\n          </div>\n        </Grid>\n      </Grid>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell width={\"60%\"}>Name</TableCell>\n              <TableCell align=\"center\">Status</TableCell>\n              <TableCell align=\"center\">Created</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row) => (\n              <TableRow key={row.name} hover>\n                <TableCell component=\"th\" scope=\"row\">\n                  <Link to={`experiments/${row.key}/detail`}>{row.name}</Link>\n                  <br />({`#${row.key}`})\n                </TableCell>\n                <TableCell align=\"center\">\n                  <ExperimentState type={row.status}>{row.status}</ExperimentState>\n                </TableCell>\n                <TableCell align=\"center\">{row.createdAt}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  )\n}\n","import React from \"react\"\nimport {\n  Button,\n  createStyles,\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n} from \"@material-ui/core\"\nimport { Link } from \"react-router-dom\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { Add as AddIcon } from \"@material-ui/icons\"\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    createButtonWrap: {\n      textAlign: \"right\",\n      marginBottom: \"16px\",\n    },\n    table: {\n      minWidth: 650,\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n  })\n)\n\nfunction createData(eventName: string, description: string, createdAt: string) {\n  return { eventName, description, createdAt }\n}\n\nconst rows = [\n  createData(\"Payment Complete\", \"Event when finishing payment procedure\", \"2020-5-31\"),\n  createData(\"Try CheckOut\", \"Event that clicking ‘CheckOut’ button\", \"2020-4-23\"),\n  createData(\"Cart PV\", \"Entering Cart Page\", \"2020-4-23\"),\n]\n\nexport default function Event() {\n  const classes = useStyles()\n  return (\n    <div className={classes.root}>\n      <Grid container>\n        <Grid item xs={9}>\n          <Typography variant={\"h6\"}>Event</Typography>\n          <Typography variant={\"caption\"}>Create a event for tracking path of customers</Typography>\n        </Grid>\n        <Grid item xs={3}>\n          <div className={classes.createButtonWrap}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.button}\n              startIcon={<AddIcon />}\n              component={Link}\n              to={`/events/new`}\n            >\n              New\n            </Button>\n          </div>\n        </Grid>\n      </Grid>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Name</TableCell>\n              <TableCell align=\"center\">Created</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row) => (\n              <TableRow key={row.eventName}>\n                <TableCell>\n                  {row.eventName}\n                  <br />\n                  <span>{row.description}</span>\n                </TableCell>\n                <TableCell align=\"center\">{row.createdAt}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  )\n}\n","import React from \"react\"\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\"\nimport { Button, Step, StepLabel, Stepper, Typography } from \"@material-ui/core\"\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n    },\n    backButton: {\n      marginRight: theme.spacing(1),\n    },\n    instructions: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n  })\n)\n\nfunction getSteps() {\n  return [\"테스트 목표 정의(event, metric)\", \"SDK 연동 설정\", \"A/B Test 생성\"]\n}\n\nfunction getStepContent(stepIndex: number) {\n  switch (stepIndex) {\n    case 0:\n      return \"이벤트를 정의해보세요\"\n    case 1:\n      return \"SDK 연동 해보세요\"\n    case 2:\n      return \"A/B테스트 생성해보세요\"\n    default:\n      return \"Unknown stepIndex\"\n  }\n}\n\nexport default function Tutorial() {\n  const classes = useStyles()\n  const [activeStep, setActiveStep] = React.useState(0)\n  const steps = getSteps()\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1)\n  }\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1)\n  }\n\n  const handleReset = () => {\n    setActiveStep(0)\n  }\n\n  return (\n    <div className={classes.root}>\n      <Stepper activeStep={activeStep} alternativeLabel>\n        {steps.map((label) => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n      <div>\n        {activeStep === steps.length ? (\n          <div>\n            <Typography className={classes.instructions}>생성완료</Typography>\n            <Button onClick={handleReset}>Reset</Button>\n          </div>\n        ) : (\n          <div>\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\n            <div>\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.backButton}>\n                Back\n              </Button>\n              <Button variant=\"contained\" color=\"primary\" onClick={handleNext}>\n                {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\n              </Button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from \"react\"\n\ninterface Props {\n  size?: \"small\" | \"big\"\n}\nexport default function EmptyDivider({ size }: Props = { size: \"big\" }) {\n  const margin = size === \"small\" ? \"12px\" : \"24px\"\n  return <div style={{ margin: margin }} />\n}\n","import React, { useState } from \"react\"\nimport { IconButton, Input, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from \"@material-ui/core\"\nimport { AddCircleOutline, RemoveCircleOutline } from \"@material-ui/icons\"\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    divider: {\n      marginBottom: \"16px\",\n    },\n    paper: {\n      padding: theme.spacing(2),\n      color: theme.palette.text.secondary,\n    },\n    buttonGroup: {\n      textAlign: \"right\",\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    margin: {\n      margin: theme.spacing(1),\n    },\n    marginR: {\n      marginLeft: theme.spacing(0.5),\n      marginRight: theme.spacing(0.5),\n    },\n    textField: {\n      width: \"25ch\",\n    },\n    table: {\n      minWidth: \"650px\",\n    },\n    gray: {\n      color: theme.palette.grey.A200,\n    },\n    distributionInput: {\n      textAlign: \"right\",\n    },\n  })\n)\n\ninterface Props {}\n\nconst variationKeys = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\"]\n\nexport default function ExperimentVariation(props: Props) {\n  const classes = useStyles()\n\n  const [variations, setVariations] = useState([\n    { variation: \"A\", distribution: \"50\" },\n    { variation: \"B\", distribution: \"50\" },\n  ])\n\n  const addVariation = () => {\n    setVariations((old) => {\n      if (old.length >= variationKeys.length) return old\n      const newVariations = old.map((o) => {\n        return {\n          ...o,\n          distribution: getReBalanceDistribution(+1),\n        }\n      })\n      return [...newVariations, { variation: getNextVariationKey(), distribution: getReBalanceDistribution(+1) }]\n    })\n  }\n  const getNextVariationKey = (): string => {\n    const foundKey = variationKeys.find((key) => {\n      return !variations.some((v) => v.variation === key)\n    })\n    return foundKey!!\n  }\n\n  const getReBalanceDistribution = (balancing: number) => (100 / (variations.length + balancing)).toFixed(2)\n\n  const removeVariation = (variationKey: string) => {\n    const filtered = variations.filter((v) => v.variation !== variationKey)\n    const newVariation = filtered.map((f) => {\n      return { ...f, distribution: getReBalanceDistribution(-1) }\n    })\n    setVariations(newVariation)\n  }\n\n  return (\n    <>\n      <TableContainer>\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell width={\"10%\"} align=\"center\">\n                Variation\n              </TableCell>\n              <TableCell align=\"center\">\n                Description <span className={classes.gray}>(Optional)</span>\n              </TableCell>\n              <TableCell align=\"center\">Distribution</TableCell>\n              <TableCell align=\"center\" />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {variations.map((row) => (\n              <TableRow key={row.variation}>\n                <TableCell align={\"center\"}>{row.variation}</TableCell>\n                <TableCell>\n                  <Input fullWidth />\n                </TableCell>\n                <TableCell width={\"20%\"}>\n                  <Input value={row.distribution} style={{ textAlign: \"right\" }} endAdornment={\"%\"} disabled={true} />\n                </TableCell>\n                <TableCell width={\"10%\"}>\n                  {row.variation !== \"A\" && variations.length >= 3 && (\n                    <IconButton\n                      edge=\"end\"\n                      aria-label=\"remove\"\n                      color=\"secondary\"\n                      onClick={() => removeVariation(row.variation)}\n                    >\n                      <RemoveCircleOutline />\n                    </IconButton>\n                  )}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      {variations.length < variationKeys.length && (\n        <IconButton edge=\"end\" aria-label=\"remove\" color=\"primary\" onClick={addVariation}>\n          <AddCircleOutline />\n        </IconButton>\n      )}\n    </>\n  )\n}\n","import React from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { Grid, Typography } from \"@material-ui/core\"\nimport EmptyDivider from \"../../../components/Divider/EmptyDivider\"\nimport ExperimentVariation from \"../ExperimentVariation\"\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  createButtonWrap: {\n    textAlign: \"right\",\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}))\n\ninterface Props {}\n\nexport default function VariationTab(props: Props) {\n  const classes = useStyles()\n  return (\n    <div className={classes.root}>\n      <EmptyDivider size={\"small\"} />\n      <Grid container spacing={3}>\n        <Grid item xs={9}>\n          <Typography variant={\"h6\"}>Variation</Typography>\n          <Typography variant={\"caption\"}>\n            Manually assign users into running variations using the allowlist below.\n          </Typography>\n        </Grid>\n        <Grid item xs={3} />\n        <Grid item xs={10}>\n          <ExperimentVariation />\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport EmptyDivider from \"../../../components/Divider/EmptyDivider\"\nimport {\n  Divider,\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n} from \"@material-ui/core\"\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  createButtonWrap: {\n    textAlign: \"right\",\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  table: {\n    minWidth: 650,\n  },\n}))\n\ninterface Props {}\nconst rows = [\n  { variation: \"A\", value: 0.812, improvement: \"Baseline\", baseline: \"-\", confidence: [null, null] },\n  { variation: \"B\", value: 0.845, improvement: \"+4.06% (0.033)\", baseline: \"34%\", confidence: [-3.58, 6.91] },\n  { variation: \"C\", value: 0.898, improvement: \"+10.59% (0.086)\", baseline: \"68%\", confidence: [7.21, 13.45] },\n]\nexport default function ResultTab(props: Props) {\n  const classes = useStyles()\n  return (\n    <div className={classes.root}>\n      <EmptyDivider size={\"small\"} />\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Grid container spacing={3}>\n            <Grid item xs={8}>\n              <Typography variant={\"caption\"}>\n                Date Range: Start of A/B Test (May 30th, 2020) ~ June 15th, 2020\n              </Typography>\n            </Grid>\n            <Grid item xs={4}>\n              <Typography variant={\"caption\"}>Last Updated: 6/16/2020 00:00:00</Typography>\n            </Grid>\n          </Grid>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Divider />\n            </Grid>\n          </Grid>\n        </Grid>\n        {[\"Buyer Conversion\", \"Overall Payment Conversion\", \"Latency\", \"Gateway PV\"].map((eventName) => {\n          return (\n            <Grid item xs={12} key={eventName}>\n              <Typography variant={\"h6\"}>{eventName}</Typography>\n              <TableContainer component={Paper}>\n                <Table className={classes.table} aria-label=\"simple table\">\n                  <TableHead>\n                    <TableRow>\n                      <TableCell align=\"center\">Variation</TableCell>\n                      <TableCell align=\"center\">Value</TableCell>\n                      <TableCell align=\"center\">Improvement</TableCell>\n                      <TableCell align=\"center\">Chance to beat baseline</TableCell>\n                      <TableCell align=\"center\">Confidence Interval</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {rows.map((row) => (\n                      <TableRow key={row.variation}>\n                        <TableCell align=\"center\">{row.variation}</TableCell>\n                        <TableCell align=\"center\">{row.value}</TableCell>\n                        <TableCell align=\"center\">{row.improvement}</TableCell>\n                        <TableCell align=\"center\">{row.baseline}</TableCell>\n                        <TableCell align=\"center\">\n                          {row.confidence[0]} {row.confidence[1]}\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </Grid>\n          )\n        })}\n      </Grid>\n    </div>\n  )\n}\n","import { atom } from \"recoil/dist\"\n\nexport const snackbarStates = atom<{ message: string; open: boolean }>({\n  key: \"snackbarStates\",\n  default: {\n    message: \"\",\n    open: false,\n  },\n})\n","import React from \"react\"\nimport { Snackbar } from \"@material-ui/core\"\nimport { Alert } from \"@material-ui/lab\"\nimport { useSetRecoilState } from \"recoil/dist\"\nimport { snackbarStates } from \"../../states/Feedback/Snackbar\"\n\ninterface Props {\n  open: boolean\n  message: string\n  onClose(): void\n}\nexport default function SuccessSnackbar({ open, message, onClose }: Props) {\n  useSetRecoilState(snackbarStates)\n  return (\n    <Snackbar\n      autoHideDuration={3000}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={open}\n      onClose={onClose}\n    >\n      <Alert severity=\"success\">{message}</Alert>\n    </Snackbar>\n  )\n}\n","import React, { ChangeEvent, useState } from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport EmptyDivider from \"../../../components/Divider/EmptyDivider\"\nimport { Button, Chip, Grid, TextareaAutosize, Typography } from \"@material-ui/core\"\nimport { Face as FaceIcon } from \"@material-ui/icons\"\nimport SuccessSnackbar from \"../../../components/Snackbar/SuccessSnackbar\"\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  margin: {\n    margin: theme.spacing(0.5),\n  },\n  createButtonWrap: {\n    textAlign: \"right\",\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  variation: {\n    border: \"1px solid #aaa\",\n  },\n  textArea: {\n    verticalAlign: \"middle\",\n  },\n}))\n\ninterface Props {}\n\nexport default function AllowlistTab(props: Props) {\n  const classes = useStyles()\n  const [saved, setSaved] = useState(false)\n  const [variations, setVariations] = useState<{ key: string; users: string[] }[]>([\n    { key: \"A\", users: [] },\n    { key: \"B\", users: [] },\n  ])\n  const [textAreaValues, setTextAreaValues] = useState<string[]>([\"\", \"\"])\n\n  const onChangeHandler = (index: number) => (event: ChangeEvent<HTMLTextAreaElement>) => {\n    const value = event.target.value\n    if (value.trim() === \",\") return\n    const match = value.match(/,/g)\n    if (match && match.length >= 2) {\n      addUserList(\n        index,\n        value.split(\",\").map((v) => v.trim())\n      )\n    } else {\n      textAreaValues[index] = value.trim()\n      setTextAreaValues([...textAreaValues])\n      addUser(index, value)\n    }\n  }\n  const addUserList = (index: number, values: string[]) => {\n    variations[index].users = [...variations[index].users]\n    values.forEach((v) => {\n      variations[index].users.push(v)\n    })\n    setVariations([...variations])\n  }\n\n  const addUser = (index: number, value: string) => {\n    if (!value.includes(\",\")) return false\n\n    variations[index].users = [...variations[index].users, value.replace(\",\", \"\")]\n    setVariations([...variations])\n    textAreaValues[index] = \"\"\n    setTextAreaValues([...textAreaValues])\n  }\n\n  const onRemoveHandler = (variationIndex: number, targetIndex: number) => () => {\n    variations[variationIndex].users = variations[variationIndex].users.filter((user, i) => {\n      return targetIndex !== i\n    })\n    setVariations([...variations])\n  }\n\n  const onRemoveByKeyCodeHandler = (index: number) => ({ keyCode }: React.KeyboardEvent<HTMLTextAreaElement>) => {\n    console.log(index, textAreaValues[index])\n    if (keyCode !== 8) return\n    if (!!textAreaValues[index]) return\n    variations[index].users.pop()\n    setVariations([...variations])\n  }\n\n  const onClearHandler = (index: number) => () => {\n    variations[index].users = []\n    setVariations([...variations])\n  }\n\n  const save = () => {\n    variations.forEach((variation) => {\n      console.log(variation.key, variation.users)\n    })\n    setSaved(true)\n  }\n\n  const onCloseHandler = () => setSaved(false)\n\n  return (\n    <div className={classes.root}>\n      <EmptyDivider size={\"small\"} />\n      <Grid container spacing={3}>\n        <Grid item xs={9}>\n          <Typography variant={\"h6\"}>Allowlist</Typography>\n          <Typography variant={\"caption\"}>\n            Manually assign users into running variations using the whitelist below.\n          </Typography>\n        </Grid>\n        <Grid item xs={3}>\n          <div className={classes.createButtonWrap}>\n            <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={save}>\n              Save\n            </Button>\n          </div>\n        </Grid>\n        <Grid item xs={12}>\n          {variations.map(({ key, users }, variationIndex) => {\n            return (\n              <Grid container alignItems={\"flex-end\"} key={key}>\n                <Grid item xs={4}>\n                  <Typography variant={\"subtitle1\"}>Variation {key}</Typography>\n                </Grid>\n                <Grid item xs={8}>\n                  <div className={classes.createButtonWrap}>\n                    <span>{users.length} Users</span>\n                    <Button\n                      size={\"small\"}\n                      variant=\"outlined\"\n                      className={classes.button}\n                      onClick={onClearHandler(variationIndex)}\n                    >\n                      Clear\n                    </Button>\n                  </div>\n                </Grid>\n                <Grid item xs={12}>\n                  <div className={classes.variation}>\n                    {users.map((user, index) => (\n                      <Chip\n                        className={classes.margin}\n                        key={index}\n                        variant=\"outlined\"\n                        size=\"small\"\n                        label={user}\n                        icon={<FaceIcon />}\n                        onDelete={onRemoveHandler(variationIndex, index)}\n                      />\n                    ))}\n                    <TextareaAutosize\n                      onKeyDown={onRemoveByKeyCodeHandler(variationIndex)}\n                      onChange={onChangeHandler(variationIndex)}\n                      value={textAreaValues[variationIndex]}\n                      className={classes.textArea}\n                    />\n                  </div>\n                </Grid>\n              </Grid>\n            )\n          })}\n        </Grid>\n      </Grid>\n      <SuccessSnackbar open={saved} message={\"Saved successfully\"} onClose={onCloseHandler} />\n    </div>\n  )\n}\n","import React from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport EmptyDivider from \"../../../components/Divider/EmptyDivider\"\nimport { Button, Checkbox, FormControlLabel, Grid, Typography } from \"@material-ui/core\"\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  createButtonWrap: {\n    textAlign: \"right\",\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}))\n\ninterface Props {}\n\nexport default function MetricTab(props: Props) {\n  const classes = useStyles()\n  return (\n    <div className={classes.root}>\n      <EmptyDivider size={\"small\"} />\n      <Grid container spacing={3}>\n        <Grid item xs={9}>\n          <Typography variant={\"h6\"}>Metric</Typography>\n          <Typography variant={\"caption\"}>Create a metric for quantitative measurement.</Typography>\n        </Grid>\n        <Grid item xs={3}>\n          <div className={classes.createButtonWrap}>\n            <Button variant=\"contained\" color=\"primary\" className={classes.button}>\n              Save\n            </Button>\n          </div>\n        </Grid>\n        <Grid item xs={12}>\n          <FormControlLabel control={<Checkbox name=\"checkedA\" color=\"primary\" />} label=\"Buyer Conversion\" />\n          <FormControlLabel control={<Checkbox name=\"checkedB\" color=\"primary\" />} label=\"Overall Payment Conversion\" />\n          <FormControlLabel control={<Checkbox name=\"checkedC\" color=\"primary\" />} label=\"Latency\" />\n          <FormControlLabel control={<Checkbox name=\"checkedB\" color=\"primary\" />} label=\"Gateway PV\" />\n        </Grid>\n        <Grid item xs={3} />\n        <Grid item xs={9}></Grid>\n      </Grid>\n    </div>\n  )\n}\n","import { atom } from \"recoil\"\nexport type EnvType = \"production\" | \"development\"\nlet envProfile = localStorage.getItem(\"envProfile\") as EnvType\nif (!envProfile) {\n  localStorage.setItem(\"envProfile\", \"production\")\n  envProfile = \"production\"\n}\nexport const envProfileState = atom<EnvType>({\n  key: \"envProfile\",\n  default: envProfile,\n})\n","import React, { useState } from \"react\"\nimport { RouteComponentProps } from \"react-router-dom\"\nimport { createStyles, makeStyles, withStyles } from \"@material-ui/core/styles\"\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Grid,\n  IconButton,\n  Paper,\n  Tab,\n  Tabs,\n  TextField,\n  Typography,\n} from \"@material-ui/core\"\nimport { Archive, PauseCircleOutline, PlayCircleOutline, SkipNext, Stop } from \"@material-ui/icons\"\nimport { ABTestStatusType, ExecutionStatusType } from \"../../model/ExecutionStatusType\"\nimport EmptyDivider from \"../../components/Divider/EmptyDivider\"\nimport VariationTab from \"./tabs/VariationTab\"\nimport ExperimentState from \"./ExperimentState\"\nimport ResultTab from \"./tabs/ResultTab\"\nimport AllowlistTab from \"./tabs/AllowlistTab\"\nimport MetricTab from \"./tabs/MetricTab\"\nimport { useRecoilValue } from \"recoil/dist\"\nimport { envProfileState } from \"../../states/EnvProfile\"\nimport { Alert } from \"@material-ui/lab\"\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      color: theme.palette.text.secondary,\n    },\n    buttonGroup: {\n      textAlign: \"right\",\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    start: {\n      padding: 0,\n      marginLeft: 8,\n      marginRight: 8,\n      color: theme.palette.success.main,\n      \"&:hover\": {\n        color: theme.palette.success.dark,\n      },\n    },\n    pause: {\n      padding: 0,\n      marginLeft: 8,\n      marginRight: 8,\n    },\n  })\n)\n\nconst AntTabs = withStyles({\n  root: {\n    borderBottom: \"1px solid #e8e8e8\",\n  },\n  indicator: {\n    backgroundColor: \"#1890ff\",\n  },\n})(Tabs)\n\ninterface StyledTabProps {\n  label: string\n}\n\nconst AntTab = withStyles((theme) =>\n  createStyles({\n    root: {\n      textTransform: \"none\",\n      minWidth: 72,\n      fontWeight: theme.typography.fontWeightRegular,\n      marginRight: theme.spacing(4),\n      fontFamily: [\n        \"-apple-system\",\n        \"BlinkMacSystemFont\",\n        '\"Segoe UI\"',\n        \"Roboto\",\n        '\"Helvetica Neue\"',\n        \"Arial\",\n        \"sans-serif\",\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n      ].join(\",\"),\n      \"&:hover\": {\n        color: \"#40a9ff\",\n        opacity: 1,\n      },\n      \"&$selected\": {\n        color: \"#1890ff\",\n        fontWeight: theme.typography.fontWeightMedium,\n      },\n      \"&:focus\": {\n        color: \"#40a9ff\",\n      },\n    },\n    selected: {},\n  })\n)((props: StyledTabProps) => <Tab disableRipple {...props} />)\n\ninterface Props {\n  key: string\n}\n\nexport default function ExperimentDetail({ match }: RouteComponentProps<Props>) {\n  const [status, setStatus] = useState<ExecutionStatusType>(\"READY\")\n  const [pauseTyping, setPauseTyping] = useState(\"\")\n  const [value, setValue] = useState(0)\n  const [pauseModalOpen, setPauseModalOpen] = useState(false)\n  const env = useRecoilValue(envProfileState)\n  //TODO\n  const [abTestStatus] = useState<ABTestStatusType>(match.params.key === \"5521\" ? \"DRAFT\" : \"EXECUTED\")\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue)\n  }\n\n  const start = () => setStatus(\"RUNNING\")\n  const pause = () => {\n    setStatus(\"PAUSED\")\n    setPauseModalOpen(false)\n  }\n\n  const statusButton = () => {\n    switch (status) {\n      case \"READY\":\n        return (\n          <IconButton edge=\"end\" aria-label=\"start\" color=\"primary\" onClick={start} className={classes.start}>\n            <PlayCircleOutline />\n          </IconButton>\n        )\n      case \"RUNNING\":\n        return (\n          <IconButton\n            edge=\"end\"\n            aria-label=\"pause\"\n            color=\"secondary\"\n            onClick={() => setPauseModalOpen(true)}\n            className={classes.pause}\n          >\n            <PauseCircleOutline />\n          </IconButton>\n        )\n      case \"PAUSED\":\n        return (\n          <IconButton edge=\"end\" aria-label=\"pause\" color=\"primary\" onClick={start} className={classes.start}>\n            <SkipNext />\n          </IconButton>\n        )\n    }\n  }\n  const classes = useStyles()\n  const { params } = match\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <Grid container spacing={3}>\n              <Grid item xs={7}>\n                <Typography variant={\"subtitle1\"}>{`#${params.key}`}</Typography>\n                <Typography\n                  suppressContentEditableWarning={true}\n                  variant={\"h5\"}\n                  contentEditable={true}\n                  onBlur={(e) => {\n                    //TODO\n                    console.log(e.target.textContent)\n                  }}\n                >\n                  Recommendation logic v2\n                </Typography>\n                <Typography\n                  suppressContentEditableWarning={true}\n                  variant={\"subtitle1\"}\n                  contentEditable={true}\n                  onBlur={(e) => {\n                    //TODO\n                    console.log(e.target.textContent)\n                  }}\n                >\n                  A/B Test Description is\n                </Typography>\n              </Grid>\n              <Grid item xs={5}>\n                <div className={classes.buttonGroup}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"default\"\n                    className={classes.button}\n                    startIcon={<Stop />}\n                    onClick={() => {}}\n                  >\n                    Complete\n                  </Button>\n                  <Button\n                    variant=\"contained\"\n                    color=\"default\"\n                    className={classes.button}\n                    startIcon={<Archive />}\n                    onClick={() => {}}\n                  >\n                    Archive\n                  </Button>\n                </div>\n              </Grid>\n              <Grid item xs={8}>\n                <Grid container spacing={3}>\n                  <Grid item xs={3}>\n                    <Typography variant={\"subtitle2\"}>Status</Typography>\n                  </Grid>\n                  <Grid item xs={9}>\n                    <ExperimentState type={status} />\n                    {statusButton()}\n                    <Dialog\n                      open={pauseModalOpen}\n                      onClose={() => setPauseModalOpen(false)}\n                      aria-labelledby=\"form-dialog-title\"\n                    >\n                      <DialogTitle id=\"form-dialog-title\">Pause this a/b test?</DialogTitle>\n                      <DialogContent>\n                        <DialogContentText>This will pause the Recommendation logic v2 in the {env}</DialogContentText>\n                        {env === \"production\" && (\n                          <Alert severity=\"warning\">\n                            After pausing a/b test in the production environment, every users will not be allocated into\n                            any variations.\n                          </Alert>\n                        )}\n                        <EmptyDivider />\n                        <DialogContentText>Type the environment name or a/b test key to confirm.</DialogContentText>\n                        <TextField\n                          margin=\"dense\"\n                          id=\"name\"\n                          value={pauseTyping}\n                          onChange={(v) => setPauseTyping(v.target.value)}\n                          label={env}\n                          type=\"text\"\n                        />\n                      </DialogContent>\n                      <DialogActions>\n                        <Button onClick={() => setPauseModalOpen(false)} color=\"primary\">\n                          Cancel\n                        </Button>\n                        <Button disabled={pauseTyping !== env} onClick={pause} color=\"primary\">\n                          Pause\n                        </Button>\n                      </DialogActions>\n                    </Dialog>\n                  </Grid>\n                  <Grid item xs={3}>\n                    <Typography variant={\"subtitle2\"}>Traffic Allocation</Typography>\n                  </Grid>\n                  <Grid item xs={9}>\n                    0%\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item xs={4} />\n              <Grid item xs={8}></Grid>\n              <Grid item xs={4} />\n            </Grid>\n            <EmptyDivider />\n            <AntTabs value={value} onChange={handleChange} aria-label=\"ant example\">\n              <AntTab label={abTestStatus === \"DRAFT\" ? \"Metric\" : \"Result\"} />\n              <AntTab label=\"Allowlist\" />\n              <AntTab label=\"Variation\" />\n            </AntTabs>\n            {value === 0 && abTestStatus === \"DRAFT\" && <MetricTab />}\n            {value === 0 && abTestStatus === \"EXECUTED\" && <ResultTab />}\n            {value === 1 && <AllowlistTab />}\n            {value === 2 && <VariationTab />}\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from \"react\"\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      display: \"flex\",\n    },\n  })\n)\ninterface Props {}\n\nexport default function Login(props: Props) {\n  const classes = useStyles()\n\n  return <div className={classes.root}>Login</div>\n}\n","import React, { ChangeEvent, useState } from \"react\"\nimport { Button, Grid, Paper, TextField, Typography } from \"@material-ui/core\"\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\"\nimport { RouteComponentProps } from \"react-router-dom\"\nimport EmptyDivider from \"../../components/Divider/EmptyDivider\"\nimport ExperimentVariation from \"./ExperimentVariation\"\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    divider: {\n      marginBottom: \"16px\",\n    },\n    paper: {\n      padding: theme.spacing(2),\n      color: theme.palette.text.secondary,\n    },\n    buttonGroup: {\n      textAlign: \"right\",\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    margin: {\n      margin: theme.spacing(1),\n    },\n    textField: {\n      width: \"25ch\",\n    },\n    table: {\n      minWidth: \"650px\",\n    },\n    gray: {\n      color: theme.palette.grey.A200,\n    },\n    distributionInput: {\n      textAlign: \"right\",\n    },\n  })\n)\nconst nameMaxLength = 128\nconst descriptionMaxLength = 512\nexport default function ExperimentsCreation(props: RouteComponentProps) {\n  const classes = useStyles()\n\n  const [name, setName] = useState(\"\")\n  const [description, setDescription] = useState(\"\")\n  const goBack = () => {\n    // @ts-ignore\n    props.history.goBack()\n  }\n  const create = () => {\n    goBack()\n  }\n  const changeName = (event: ChangeEvent<HTMLInputElement>) => {\n    const value = event.target.value\n    if (nameMaxLength < value.length) return\n    setName(value)\n  }\n  const changeDescription = (event: ChangeEvent<HTMLInputElement>) => {\n    const value = event.target.value\n    if (descriptionMaxLength < value.length) return\n    setDescription(value)\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container>\n        <Grid item xs={12}>\n          <Typography variant={\"h6\"}>Create new A/B Test</Typography>\n          <Typography variant={\"caption\"}>&nbsp;</Typography>\n        </Grid>\n      </Grid>\n      <div className={classes.divider} />\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <Grid container spacing={3}>\n              <Grid item xs={9}>\n                <TextField\n                  label=\"Name\"\n                  style={{ margin: 8 }}\n                  helperText={`${name.length}/128`}\n                  fullWidth\n                  margin=\"normal\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  value={name}\n                  required={true}\n                  autoFocus={true}\n                  onChange={changeName}\n                />\n                <TextField\n                  label=\"Description (Optional)\"\n                  style={{ margin: 8 }}\n                  helperText={`${description.length}/512`}\n                  fullWidth\n                  margin=\"normal\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  value={description}\n                  onChange={changeDescription}\n                />\n              </Grid>\n            </Grid>\n            <EmptyDivider />\n            <Grid container spacing={3}>\n              <Grid item xs={10}>\n                <ExperimentVariation />\n              </Grid>\n            </Grid>\n            <EmptyDivider />\n            <div className={classes.buttonGroup}>\n              <Button variant=\"contained\" color=\"default\" className={classes.button} onClick={goBack}>\n                Cancel\n              </Button>\n              <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={create}>\n                Create\n              </Button>\n            </div>\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React, { ChangeEvent, useState } from \"react\"\nimport { Button, Grid, Paper, TextField, Typography } from \"@material-ui/core\"\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\"\nimport { RouteComponentProps } from \"react-router-dom\"\nimport EmptyDivider from \"../../components/Divider/EmptyDivider\"\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      color: theme.palette.text.secondary,\n    },\n    divider: {\n      marginBottom: \"16px\",\n    },\n    buttonGroup: {\n      textAlign: \"right\",\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    margin: {\n      margin: theme.spacing(1),\n    },\n    textField: {\n      width: \"25ch\",\n    },\n  })\n)\n\nconst nameMaxLength = 50\nconst descriptionMaxLength = 200\nexport default function EventCreation(props: RouteComponentProps) {\n  const classes = useStyles()\n  const [name, setName] = useState(\"\")\n  const [description, setDescription] = useState(\"\")\n  const changeName = (event: ChangeEvent<HTMLInputElement>) => {\n    const value = event.target.value\n    if (nameMaxLength < value.length) return\n    setName(value)\n  }\n  const changeDescription = (event: ChangeEvent<HTMLInputElement>) => {\n    const value = event.target.value\n    if (descriptionMaxLength < value.length) return\n    setDescription(value)\n  }\n  return (\n    <div className={classes.root}>\n      <Grid container>\n        <Grid item xs={12}>\n          <Typography variant={\"h6\"}>Create new event</Typography>\n          <Typography variant={\"caption\"}>&nbsp;</Typography>\n        </Grid>\n      </Grid>\n      <div className={classes.divider} />\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <Grid container spacing={3}>\n              <Grid item xs={9}>\n                <TextField\n                  label=\"Name\"\n                  style={{ margin: 8 }}\n                  helperText={`${name.length}/128`}\n                  fullWidth\n                  margin=\"normal\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  value={name}\n                  required={true}\n                  autoFocus={true}\n                  placeholder={\"Proceed to payment\"}\n                  onChange={changeName}\n                />\n                <TextField\n                  label=\"Description (Optional)\"\n                  style={{ margin: 8 }}\n                  helperText={`${description.length}/512`}\n                  fullWidth\n                  margin=\"normal\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  value={description}\n                  placeholder={\"Click 'payment' button\"}\n                  onChange={changeDescription}\n                />\n              </Grid>\n            </Grid>\n            <EmptyDivider />\n            <div className={classes.buttonGroup}>\n              <Button\n                variant=\"contained\"\n                color=\"default\"\n                className={classes.button}\n                onClick={() => {\n                  // @ts-ignore\n                  props.history.goBack()\n                }}\n              >\n                Cancel\n              </Button>\n              <Button variant=\"contained\" color=\"primary\" className={classes.button}>\n                Create\n              </Button>\n            </div>\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from \"react\"\nimport {\n  LiveTv as LiveTvIcon,\n  Person as PersonIcon,\n  DeveloperMode as DeveloperModeIcon,\n  Event as EventIcon,\n  Settings as SettingIcon,\n  Assignment as AssignmentIcon,\n} from \"@material-ui/icons\"\nimport Experiment from \"./Experiment/Experiment\"\nimport Account from \"./Account/Account\"\nimport Event from \"./Event/Event\"\nimport Setting from \"./Setting/Setting\"\nimport Tutorial from \"./Tutorial/Tutorial\"\nimport Developer from \"./Developer/Developer\"\nimport ExperimentDetail from \"./Experiment/ExperimentDetail\"\nimport Login from \"./Login/Login\"\nimport Home from \"./Home/Home\"\nimport ExperimentsCreation from \"./Experiment/ExperimentsCreation\"\nimport EventCreation from \"./Event/EventCreation\"\n\nexport class RoutingComponent<T> {\n  text: string\n  path: string\n  component: T\n  componentIcon: React.ComponentType\n  exact: boolean\n\n  constructor(text: string, path: string, component: T, componentIcon: React.ComponentType, exact = false) {\n    this.text = text\n    this.path = path\n    this.component = component\n    this.componentIcon = componentIcon\n    this.exact = exact\n  }\n}\n\nexport interface RoutingComponentMap<T> {\n  [key: string]: RoutingComponent<T>\n}\nconst routingComponent = {\n  home: new RoutingComponent(\"Experiment\", \"/\", Home, AssignmentIcon, true),\n  experiment: new RoutingComponent(\"A/B Test\", \"/experiments\", Experiment, AssignmentIcon, true),\n  experimentNew: new RoutingComponent(\n    \"Create new A/B Test\",\n    \"/experiments/new\",\n    ExperimentsCreation,\n    AssignmentIcon,\n    true\n  ),\n  experimentDetail: new RoutingComponent(\n    \"ExperimentDetail\",\n    \"/experiments/:key/detail\",\n    ExperimentDetail,\n    AssignmentIcon\n  ),\n  event: new RoutingComponent(\"Event\", \"/events\", Event, EventIcon, true),\n  eventNew: new RoutingComponent(\"Create new event\", \"/events/new\", EventCreation, EventIcon, true),\n  setting: new RoutingComponent(\"Setting\", \"/settings\", Setting, SettingIcon),\n  account: new RoutingComponent(\"Account\", \"/accounts\", Account, PersonIcon),\n  tutorial: new RoutingComponent(\"Tutorial\", \"/tutorials\", Tutorial, LiveTvIcon),\n  developers: new RoutingComponent(\"Developers\", \"/developers\", Developer, DeveloperModeIcon),\n}\nexport const login = new RoutingComponent(\"Login\", \"/login\", Login, DeveloperModeIcon)\nexport default routingComponent\n","import React from \"react\"\nimport { RouteComponentProps } from \"react-router-dom\"\n\ninterface Props {}\n\nexport default function Home(props: RouteComponentProps) {\n  props.history.replace(\"/experiments\")\n  return <div />\n}\n","import React from \"react\"\nimport { Grid } from \"@material-ui/core\"\n\nexport default function Setting() {\n  return (\n    <div>\n      <Grid container>\n        <Grid item xs={9}></Grid>\n        <Grid item xs={3}></Grid>\n      </Grid>\n      Setting\n    </div>\n  )\n}\n","import React from \"react\"\n\nexport default function Account() {\n  return <div>Account</div>\n}\n","import React from \"react\"\n\nexport default function Developer() {\n  return <div>Developer</div>\n}\n","import React from \"react\"\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  createStyles,\n  Divider,\n  Drawer,\n  FormControlLabel,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Radio,\n  RadioGroup,\n  Typography,\n} from \"@material-ui/core\"\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\"\nimport pages, { RoutingComponent } from \"../pages\"\nimport { Link } from \"react-router-dom\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { useRecoilState } from \"recoil/dist\"\nimport { envProfileState, EnvType } from \"../states/EnvProfile\"\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerHeader: {\n      display: \"flex\",\n      alignItems: \"center\",\n      padding: theme.spacing(0, 1),\n      justifyContent: \"flex-end\",\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    drawerContainer: {\n      overflow: \"auto\",\n    },\n    sectionDesktop: {\n      [theme.breakpoints.up(\"md\")]: {\n        display: \"flex\",\n      },\n    },\n    accordionDevelopment: {\n      backgroundColor: theme.palette.background.default,\n    },\n    accordionProduction: {\n      backgroundColor: theme.palette.primary.dark,\n      color: theme.palette.common.white,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n  })\n)\n\nexport default function LeftSideBar() {\n  const classes = useStyles()\n  const [envProfile, setEnvProfile] = useRecoilState(envProfileState)\n\n  const isActive = (value: string): boolean => {\n    return window.location.pathname.includes(value)\n  }\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    localStorage.setItem(\"envProfile\", \"production\")\n    setEnvProfile(event.target.value as EnvType)\n  }\n\n  // @ts-ignore\n  return (\n    <Drawer\n      className={classes.drawer}\n      variant=\"permanent\"\n      classes={{\n        paper: classes.drawerPaper,\n      }}\n    >\n      <Accordion>\n        <AccordionSummary\n          className={`${envProfile === \"production\" ? classes.accordionProduction : classes.accordionDevelopment}`}\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography variant=\"body1\">\n            Default Workspace\n            <Typography variant=\"body2\">{envProfile}</Typography>\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <RadioGroup aria-label=\"profile\" name=\"profile\" value={envProfile} onChange={handleChange}>\n            <FormControlLabel value=\"production\" control={<Radio />} label=\"Production\" />\n            <FormControlLabel value=\"development\" control={<Radio />} label=\"Development\" />\n          </RadioGroup>\n        </AccordionDetails>\n      </Accordion>\n      <div className={classes.drawerContainer}>\n        <List>\n          <SideBarListItem\n            selected={isActive(pages.experiment.path)}\n            to={`/experiments`}\n            routingComponent={pages.experiment}\n          />\n          <SideBarListItem selected={isActive(pages.event.path)} to={`/events`} routingComponent={pages.event} />\n          <br />\n          <Divider />\n          <br />\n          <SideBarListItem selected={isActive(pages.setting.path)} to={`/settings`} routingComponent={pages.setting} />\n          <SideBarListItem\n            selected={isActive(pages.tutorial.path)}\n            to={`/tutorials`}\n            routingComponent={pages.tutorial}\n          />\n          <SideBarListItem\n            selected={isActive(pages.developers.path)}\n            to={`/developers`}\n            routingComponent={pages.developers}\n          />\n        </List>\n      </div>\n    </Drawer>\n  )\n}\n\nfunction SideBarListItem({\n  routingComponent,\n  to,\n  disabled,\n  selected,\n}: {\n  routingComponent: RoutingComponent<any>\n  to: string\n  disabled?: boolean\n  selected?: boolean\n}) {\n  const Icon = routingComponent.componentIcon\n\n  return (\n    <ListItem selected={selected} disabled={disabled} button component={Link} to={to}>\n      <ListItemIcon>\n        <Icon />\n      </ListItemIcon>\n      <ListItemText primary={routingComponent.text} />\n    </ListItem>\n  )\n}\n","import React, { useState } from \"react\"\nimport { FormattedMessage } from \"react-intl\"\nimport { AppBar, createStyles, IconButton, Menu, MenuItem, Toolbar } from \"@material-ui/core\"\nimport { AccountCircle } from \"@material-ui/icons\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n    },\n    grow: {\n      flexGrow: 1,\n    },\n    sectionDesktop: {\n      [theme.breakpoints.up(\"md\")]: {\n        display: \"flex\",\n      },\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n  })\n)\n\nexport default function Header() {\n  const classes = useStyles()\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null)\n  const isMenuOpen = Boolean(anchorEl)\n  const handleProfileMenuOpen = (e: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(e.currentTarget)\n  }\n  const handleMenuClose = () => {\n    setAnchorEl(null)\n  }\n\n  return (\n    <AppBar color={\"inherit\"} position=\"fixed\">\n      <Toolbar>\n        <div className={classes.grow} />\n        <IconButton edge=\"end\" aria-label=\"account of current user\" color=\"inherit\" onClick={handleProfileMenuOpen}>\n          <AccountCircle />\n        </IconButton>\n      </Toolbar>\n      <Menu\n        anchorEl={anchorEl}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n        id={\"primary-search-account-menu\"}\n        keepMounted\n        transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n        open={isMenuOpen}\n        onClose={handleMenuClose}\n      >\n        {/*<MenuItem onClick={handleMenuClose} component={Link} to={\"/account\"}>*/}\n        {/*  <FormattedMessage id=\"account\" />*/}\n        {/*</MenuItem>*/}\n        <MenuItem onClick={handleMenuClose}>\n          <FormattedMessage id=\"logout\" />\n        </MenuItem>\n      </Menu>\n    </AppBar>\n  )\n}\n","import React, { PropsWithChildren } from \"react\"\nimport { createStyles, CssBaseline, Toolbar } from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport LeftSideBar from \"./LeftSideBar\"\nimport Header from \"./Header\"\nimport { RouteComponentProps } from \"react-router-dom\"\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n  })\n)\n\nexport default function MainFrame(props: PropsWithChildren<RouteComponentProps>) {\n  const classes = useStyles()\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Header />\n      <LeftSideBar />\n      <main className={classes.content}>\n        <Toolbar />\n        <>{props.children}</>\n      </main>\n    </div>\n  )\n}\n","import React from \"react\"\nimport \"./App.css\"\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\"\nimport { IntlProvider } from \"react-intl\"\nimport { en } from \"./locale\"\nimport pages, { login } from \"./pages\"\nimport MainFrame from \"./layouts/MainFrame\"\nimport SuccessSnackbar from \"./components/Snackbar/SuccessSnackbar\"\nimport { snackbarStates } from \"./states/Feedback/Snackbar\"\nimport { useRecoilState } from \"recoil/dist\"\n\nconst defaultLang = \"en\"\nlet authenticated: boolean | null = true\n\nfunction App() {\n  const [snackbar, setSnackbar] = useRecoilState(snackbarStates)\n  const handleSnackBarClose = () => setSnackbar({ message: \"\", open: false })\n  return (\n    <IntlProvider locale={defaultLang} messages={en}>\n      <Router>\n        <Switch>\n          {authenticated === null ? (\n            <div>인증 확인중</div>\n          ) : authenticated ? (\n            <>\n              {Object.values(pages).map((page, i) => {\n                return (\n                  <Route\n                    path={page.path}\n                    exact={page.exact}\n                    render={(props) => {\n                      const Component = page.component\n                      return (\n                        <MainFrame {...props}>\n                          <Component {...props} />\n                        </MainFrame>\n                      )\n                    }}\n                    key={i}\n                  />\n                )\n              })}\n              <Route path={login.path} exact={login.exact} component={login.component} />\n            </>\n          ) : (\n            <>\n              <Route path={\"/login\"} render={login.component} />\n              <Redirect path=\"*\" to=\"/\" />\n            </>\n          )}\n        </Switch>\n      </Router>\n      <SuccessSnackbar open={snackbar.open} message={snackbar.message} onClose={handleSnackBarClose} />\n    </IntlProvider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\")\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\nimport { RecoilRoot } from \"recoil/dist\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <App />\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}