{"version":3,"sources":["locale/en.ts","pages/Experiment/ExperimentState.tsx","states/Feedback/Snackbar.ts","pages/Experiment/Experiment.tsx","states/EnvProfile.ts","pages/Event/Event.tsx","pages/Tutorial/Tutorial.tsx","pages/Experiment/ExperimentDetail.tsx","pages/Login/Login.tsx","components/Divider/EmptyDivider.tsx","pages/Experiment/ExperimentsCreation.tsx","pages/Event/EventCreation.tsx","pages/index.ts","pages/Home/Home.tsx","pages/Setting/Setting.tsx","pages/Account/Account.tsx","pages/Developer/Developer.tsx","layouts/LeftSideBar.tsx","layouts/Header.tsx","layouts/MainFrame.tsx","components/Snackbar/SuccessSnackbar.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["name","account","logout","experiment_name","experiment_status","experiment_created","experiment_result","ExperimentState","type","ExperimentStateReady","ExperimentStateRunning","ExperimentStatePaused","ExperimentStateStopped","useStyles","makeStyles","theme","createStyles","status","typography","button","width","padding","spacing","textAlign","color","palette","common","white","borderRadius","ready","backgroundColor","grey","A100","running","success","light","paused","secondary","stopped","info","classes","Chip","size","label","className","snackbarStates","atom","key","default","message","open","root","flexGrow","createButtonWrap","marginBottom","margin","table","minWidth","createData","trafficAllocation","trafficGroup","createdAt","rows","envProfile","localStorage","getItem","setItem","envProfileState","eventName","description","backButton","marginRight","instructions","marginTop","paper","text","buttonGroup","main","dark","display","EmptyDivider","style","divider","marginR","marginLeft","textField","gray","A200","distributionInput","RoutingComponent","path","component","componentIcon","exact","this","routingComponent","home","props","history","replace","AssignmentIcon","experiment","useState","useSetRecoilState","useRecoilValue","Grid","container","item","xs","Typography","variant","Button","startIcon","Add","Link","to","TableContainer","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","row","hover","scope","experimentNew","variation","distribution","variations","setVariations","setName","setDescription","goBack","variationKeys","getNextVariationKey","find","some","v","getReBalanceDistribution","balancing","length","toFixed","TextField","helperText","fullWidth","InputLabelProps","shrink","value","required","autoFocus","onChange","event","target","Input","endAdornment","disabled","IconButton","edge","onClick","variationKey","newVariation","filter","f","removeVariation","RemoveCircleOutline","old","newVariations","o","AddCircleOutline","experimentDetail","match","anchorEl","setAnchorEl","setStatus","isMenuOpen","Boolean","handleMenuClose","renderMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","onClose","MenuItem","params","PlayArrow","Stop","Settings","e","currentTarget","EventIcon","eventNew","placeholder","setting","SettingIcon","PersonIcon","tutorial","React","activeStep","setActiveStep","steps","Stepper","alternativeLabel","Step","StepLabel","stepIndex","getStepContent","prevActiveStep","LiveTvIcon","developers","DeveloperModeIcon","login","drawer","flexShrink","drawerHeader","alignItems","justifyContent","drawerPaper","drawerContainer","overflow","sectionDesktop","breakpoints","up","accordionDevelopment","background","accordionProduction","primary","content","LeftSideBar","useRecoilState","setEnvProfile","isActive","window","location","pathname","includes","Drawer","Accordion","AccordionSummary","expandIcon","ExpandMore","aria-controls","AccordionDetails","RadioGroup","FormControlLabel","control","Radio","List","SideBarListItem","selected","pages","Divider","Icon","ListItem","ListItemIcon","ListItemText","grow","Header","AppBar","position","Toolbar","AccountCircle","MainFrame","CssBaseline","children","SuccessSnackbar","Snackbar","autoHideDuration","Alert","severity","App","snackbar","setSnackbar","locale","messages","en","Object","values","page","i","render","Component","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.0af2d0f4.chunk.js","sourcesContent":["export default {\n  name: \"Hackle.io\",\n  account: \"Account\",\n  logout: \"logout\",\n  experiment_name: \"Name\",\n  experiment_status: \"Status\",\n  experiment_created: \"Created\",\n  experiment_result: \"Result\",\n}\n","import React, { PropsWithChildren } from \"react\"\nimport { Chip, createStyles } from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { ExperimentStatusType } from \"../../model/ExperimentStatusType\"\n\ninterface Props {\n  type: ExperimentStatusType\n}\n\nexport default function ExperimentState({ type }: PropsWithChildren<Props>) {\n  switch (type) {\n    case \"READY\":\n      return <ExperimentStateReady />\n    case \"RUNNING\":\n      return <ExperimentStateRunning />\n    case \"PAUSED\":\n      return <ExperimentStatePaused />\n    case \"STOPPED\":\n      return <ExperimentStateStopped />\n  }\n}\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    status: {\n      ...theme.typography.button,\n      width: \"110px\",\n      padding: theme.spacing(1),\n      textAlign: \"center\",\n      color: theme.palette.common.white,\n      borderRadius: 0\n    },\n    ready: {\n      backgroundColor: theme.palette.grey.A100,\n    },\n    running: {\n      backgroundColor: theme.palette.success.light,\n    },\n    paused: {\n      backgroundColor: theme.palette.secondary.light,\n    },\n    stopped: {\n      backgroundColor: theme.palette.info.light,\n    },\n  })\n)\nexport function ExperimentStateReady() {\n  const classes = useStyles()\n  return <Chip size={\"small\"} label=\"Ready\" className={`${classes.status} ${classes.ready}`} />\n}\nexport function ExperimentStateRunning() {\n  const classes = useStyles()\n  return <Chip size={\"small\"} label=\"Running\" className={`${classes.status} ${classes.running}`} />\n}\nexport function ExperimentStatePaused() {\n  const classes = useStyles()\n  return <Chip size={\"small\"} label=\"Paused\" className={`${classes.status} ${classes.paused}`} />\n}\nexport function ExperimentStateStopped() {\n  const classes = useStyles()\n  return <Chip size={\"small\"} label=\"STOPPED\" className={`${classes.status} ${classes.stopped}`} />\n}\n","import {atom} from \"recoil/dist\";\n\nexport const snackbarStates = atom<{message: string;open: boolean}>({\n  key: \"snackbarStates\",\n  default: {\n    message: \"\",\n    open: false\n  }\n})","import React, { useState } from \"react\"\nimport {\n  Button,\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n} from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { Link, RouteComponentProps } from \"react-router-dom\"\nimport { Add as AddIcon } from \"@material-ui/icons\"\nimport ExperimentState from \"./ExperimentState\"\nimport { ExperimentStatusType } from \"../../model/ExperimentStatusType\"\nimport ExperimentsCreation from \"./ExperimentsCreation\"\nimport {useRecoilValue, useSetRecoilState} from \"recoil/dist\";\nimport {snackbarStates} from \"../../states/Feedback/Snackbar\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  createButtonWrap: {\n    textAlign: \"right\",\n    marginBottom: \"16px\",\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  table: {\n    minWidth: 650,\n  },\n}))\n\nfunction createData(\n  name: string,\n  key: string,\n  trafficAllocation: number,\n  trafficGroup: string,\n  status: ExperimentStatusType,\n  createdAt: string\n) {\n  return { name, key, trafficAllocation, trafficGroup, status, createdAt }\n}\n\nconst rows = [\n  createData(\"Test Name Example\", \"5521\", 30, \"50/50\", \"READY\", \"2020-5-31\"),\n  createData(\"[2020.Q3] SRP 개편 2차 테스트\", \"1382\", 60, \"34/33/33\", \"RUNNING\", \"2020-5-31\"),\n  createData(\"[2020.Q3] SRP 개편 3차 테스트\", \"4431\", 60, \"34/33/33\", \"PAUSED\", \"2020-5-31\"),\n  createData(\"[2020.Q3] SRP 개편 4차 테스트\", \"4443\", 60, \"34/33/33\", \"STOPPED\", \"2020-5-31\"),\n]\ntype ViewType = \"CREATE_VIEW\" | \"LIST_VIEW\" | \"DETAIL_VIEW\"\nexport default function Experiment(props: RouteComponentProps) {\n  const classes = useStyles()\n  const [view, setView] = useState<ViewType>(\"LIST_VIEW\")\n  const setSnackbar = useSetRecoilState(snackbarStates)\n  const snackbar = useRecoilValue(snackbarStates)\n  const createSuccess = () => {\n    setSnackbar({\n      message: \"Success\",\n      open: true\n    });\n    setInterval(() => {\n      console.log(snackbar)\n    }, 1000)\n\n    setView(\"LIST_VIEW\")\n  }\n  return (\n    <div className={classes.root}>\n      <Grid container>\n        <Grid item xs={9}>\n          <Typography variant={\"h6\"}>A/B Test</Typography>\n          <Typography variant={\"caption\"}>Create an a/b test for product experimentation</Typography>\n        </Grid>\n        <Grid item xs={3}>\n          <div className={classes.createButtonWrap}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.button}\n              startIcon={<AddIcon />}\n              component={Link}\n              to={\"/experiments/new\"}\n            >\n              New\n            </Button>\n          </div>\n        </Grid>\n      </Grid>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell width={\"60%\"}>Name</TableCell>\n              <TableCell align=\"center\">Status</TableCell>\n              <TableCell align=\"center\">Created</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row) => (\n              <TableRow key={row.name} hover>\n                <TableCell component=\"th\" scope=\"row\">\n                  <Link to={`experiments/detail/${row.key}`}>{row.name}</Link>\n                  <br />({`#${row.key}`})\n                </TableCell>\n                <TableCell align=\"center\">\n                  <ExperimentState type={row.status}>{row.status}</ExperimentState>\n                </TableCell>\n                <TableCell align=\"center\">{row.createdAt}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  )\n}\n","import { atom } from \"recoil\"\nexport type EnvType = \"production\" | \"development\"\nlet envProfile = localStorage.getItem(\"envProfile\") as EnvType\nif (!envProfile) {\n  localStorage.setItem(\"envProfile\", \"production\")\n  envProfile = \"production\"\n}\nexport const envProfileState = atom<EnvType>({\n  key: \"envProfile\",\n  default: envProfile,\n})\n","import React from \"react\"\nimport {\n  Button,\n  createStyles,\n  Grid,\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n} from \"@material-ui/core\"\nimport { Link } from \"react-router-dom\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { Add as AddIcon, Edit } from \"@material-ui/icons\"\nimport { useRecoilValue } from \"recoil/dist\"\nimport { envProfileState } from \"../../states/EnvProfile\"\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    createButtonWrap: {\n      textAlign: \"right\",\n      marginBottom: \"16px\",\n    },\n    table: {\n      minWidth: 650,\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n  })\n)\n\nfunction createData(eventName: string, description: string, createdAt: string) {\n  return { eventName, description, createdAt }\n}\n\nconst rows = [\n  createData(\"Payment Complete\", \"Event when finishing payment procedure\", \"2020-5-31\"),\n  createData(\"Try CheckOut\", \"Event that clicking ‘CheckOut’ button\", \"2020-4-23\"),\n  createData(\"Cart PV\", \"Entering Cart Page\", \"2020-4-23\"),\n]\n\nexport default function Event() {\n  const classes = useStyles()\n  const env = useRecoilValue(envProfileState)\n  return (\n    <div className={classes.root}>\n      <Grid container>\n        <Grid item xs={9}>\n          <Typography variant={\"h6\"}>Event</Typography>\n          <Typography variant={\"caption\"}>Create a event for tracking path of customers</Typography>\n        </Grid>\n        <Grid item xs={3}>\n          <div className={classes.createButtonWrap}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.button}\n              startIcon={<AddIcon />}\n              component={Link}\n              to={`/events/new`}\n            >\n              New\n            </Button>\n          </div>\n        </Grid>\n      </Grid>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Name</TableCell>\n              <TableCell align=\"center\">Created</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row) => (\n              <TableRow key={row.eventName}>\n                <TableCell>\n                  {row.eventName}\n                  <br />\n                  <span>{row.description}</span>\n                </TableCell>\n                <TableCell align=\"center\">{row.createdAt}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  )\n}\n","import React from \"react\"\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\"\nimport { Button, Step, StepLabel, Stepper, Typography } from \"@material-ui/core\"\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n    },\n    backButton: {\n      marginRight: theme.spacing(1),\n    },\n    instructions: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n  })\n)\n\nfunction getSteps() {\n  return [\"테스트 목표 정의(event, metric)\", \"SDK 연동 설정\", \"A/B Test 생성\"]\n}\n\nfunction getStepContent(stepIndex: number) {\n  switch (stepIndex) {\n    case 0:\n      return \"이벤트를 정의해보세요\"\n    case 1:\n      return \"SDK 연동 해보세요\"\n    case 2:\n      return \"A/B테스트 생성해보세요\"\n    default:\n      return \"Unknown stepIndex\"\n  }\n}\n\nexport default function Tutorial() {\n  const classes = useStyles()\n  const [activeStep, setActiveStep] = React.useState(0)\n  const steps = getSteps()\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1)\n  }\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1)\n  }\n\n  const handleReset = () => {\n    setActiveStep(0)\n  }\n\n  return (\n    <div className={classes.root}>\n      <Stepper activeStep={activeStep} alternativeLabel>\n        {steps.map((label) => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n      <div>\n        {activeStep === steps.length ? (\n          <div>\n            <Typography className={classes.instructions}>생성완료</Typography>\n            <Button onClick={handleReset}>Reset</Button>\n          </div>\n        ) : (\n          <div>\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\n            <div>\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.backButton}>\n                Back\n              </Button>\n              <Button variant=\"contained\" color=\"primary\" onClick={handleNext}>\n                {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\n              </Button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React, { useState } from \"react\"\nimport { RouteComponentProps } from \"react-router-dom\"\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\"\nimport { Button, Grid, Menu, MenuItem, Paper, Typography } from \"@material-ui/core\"\nimport { PlayArrow, Settings, Stop } from \"@material-ui/icons\"\nimport { ExperimentStatusType } from \"../../model/ExperimentStatusType\"\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      color: theme.palette.text.secondary,\n    },\n    buttonGroup: {\n      textAlign: \"right\",\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    success: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.success.main,\n      \"&:hover\": {\n        backgroundColor: theme.palette.success.dark,\n      },\n    },\n  })\n)\n\ninterface Props {\n  key: string\n}\n\nexport default function ExperimentDetail({ match }: RouteComponentProps<Props>) {\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null)\n  const [status, setStatus] = useState<ExperimentStatusType>(\"READY\")\n  const isMenuOpen = Boolean(anchorEl)\n  const handleProfileMenuOpen = (e: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(e.currentTarget)\n  }\n  const handleMenuClose = () => {\n    setAnchorEl(null)\n  }\n  const start = () => setStatus(\"RUNNING\")\n  const pause = () => setStatus(\"READY\")\n\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={\"primary-search-account-menu\"}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Setting</MenuItem>\n      <MenuItem onClick={handleMenuClose}>Traffic Allocation</MenuItem>\n      <MenuItem onClick={handleMenuClose}>Whitelist</MenuItem>\n      <MenuItem onClick={handleMenuClose}>Complete (Select a winner)</MenuItem>\n    </Menu>\n  )\n  const classes = useStyles()\n  const { params } = match\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <Typography variant={\"h4\"}>Test Key: {`#${params.key}`}</Typography>\n            <div className={classes.buttonGroup}>\n              {status === \"READY\" ? (\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.success}\n                  startIcon={<PlayArrow />}\n                  onClick={start}\n                >\n                  Start\n                </Button>\n              ) : (\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  className={classes.button}\n                  startIcon={<Stop />}\n                  onClick={pause}\n                >\n                  Pause\n                </Button>\n              )}\n\n              <Button\n                variant=\"contained\"\n                color=\"default\"\n                className={classes.button}\n                startIcon={<Settings />}\n                onClick={handleProfileMenuOpen}\n              >\n                Edit\n              </Button>\n            </div>\n          </Paper>\n        </Grid>\n        <Grid item xs={6}>\n          <Paper className={classes.paper}>xs=6</Paper>\n        </Grid>\n        <Grid item xs={6}>\n          <Paper className={classes.paper}>xs=6</Paper>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>xs=3</Paper>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>xs=3</Paper>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>xs=3</Paper>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>xs=3</Paper>\n        </Grid>\n      </Grid>\n      {renderMenu}\n    </div>\n  )\n}\n","import React from \"react\"\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      display: \"flex\",\n    },\n  })\n)\ninterface Props {}\n\nexport default function Login(props: Props) {\n  const classes = useStyles()\n\n  return <div className={classes.root}>Login</div>\n}\n","import React from \"react\"\n\nexport default function EmptyDivider() {\n  return (\n    <div style={{margin: \"24px\"}} />\n  )\n}","import React, {ChangeEvent, useState} from \"react\"\nimport {\n  Button,\n  FormHelperText,\n  Grid,\n  OutlinedInput,\n  Paper,\n  Table, TableBody, TableCell, TableContainer,\n  TableHead, TableRow,\n  TextField,\n  Typography,\n  FormControl, Input, IconButton, Chip\n} from \"@material-ui/core\"\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\"\nimport { useRecoilValue } from \"recoil/dist\"\nimport {envProfileState, EnvType} from \"../../states/EnvProfile\"\nimport {Link, RouteComponentProps} from \"react-router-dom\"\nimport EmptyDivider from \"../../components/Divider/EmptyDivider\";\nimport ExperimentState from \"./ExperimentState\";\nimport {AccountCircle, AddCircleOutline, RemoveCircleOutline} from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    divider: {\n      marginBottom: \"16px\"\n    },\n    paper: {\n      padding: theme.spacing(2),\n      color: theme.palette.text.secondary,\n    },\n    buttonGroup: {\n      textAlign: \"right\",\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    margin: {\n      margin: theme.spacing(1),\n    },\n    marginR: {\n      marginLeft: theme.spacing(0.5),\n      marginRight: theme.spacing(0.5)\n    },\n    textField: {\n      width: \"25ch\",\n    },\n    table: {\n      minWidth: \"650px\"\n    },\n    gray: {\n      color: theme.palette.grey.A200\n    },\n    distributionInput: {\n      textAlign: \"right\"\n    }\n  })\n)\nconst nameMaxLength = 128\nconst descriptionMaxLength = 512\nexport default function ExperimentsCreation(props: RouteComponentProps) {\n  const classes = useStyles()\n  const env = useRecoilValue(envProfileState)\n  const [variations, setVariations] = useState([{variation: 'A', distribution: '50'}, {variation: 'B', distribution: '50'}])\n  const [name, setName] = useState(\"\")\n  const [description, setDescription] = useState(\"\")\n  const [envBadges, setEnvBadges] = useState([\"primary\", \"development\"])\n  const goBack = () => {\n    // @ts-ignore\n    props.history.goBack()\n  }\n  const create = () => {\n    goBack();\n  }\n  const changeName = (event: ChangeEvent<HTMLInputElement>) => {\n    const value = event.target.value\n    if (nameMaxLength < value.length) return\n    setName(value)\n  }\n  const changeDescription = (event: ChangeEvent<HTMLInputElement>) => {\n    const value = event.target.value\n    if (descriptionMaxLength < value.length) return\n    setDescription(value)\n  }\n\n  const variationKeys = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\"]\n  const addVariation = () => {\n    setVariations((old) => {\n      if (old.length >= variationKeys.length) return old\n      const newVariations = old.map(o => {\n        return {\n          ...o,\n          distribution: getReBalanceDistribution(+1)\n        }\n      })\n      return [...newVariations, {variation: getNextVariationKey(), distribution: getReBalanceDistribution(+1)}]\n    })\n  }\n  const getNextVariationKey = (): string => {\n    const foundKey = variationKeys.find(key => {\n      return !variations.some(v => v.variation === key)\n    })\n    return foundKey!!\n  }\n\n  const removeVariation = (variationKey: string) => {\n    const filtered = variations.filter(v => v.variation !== variationKey)\n    const newVariation = filtered.map(f => {\n      return {...f, distribution: getReBalanceDistribution(-1)}\n    })\n    setVariations(newVariation)\n  }\n\n  const getReBalanceDistribution = (balancing: number) => (100 / (variations.length + balancing)).toFixed(2)\n\n  return (\n    <div className={classes.root}>\n      <Grid container>\n        <Grid item xs={12}>\n          <Typography variant={\"h6\"}>\n            Create new A/B Test\n          </Typography>\n          <Typography variant={\"caption\"}>\n            <Chip size={\"small\"} className={classes.marginR} label=\"Production\" variant={\"outlined\"} color=\"primary\" />\n            <Chip size={\"small\"} className={classes.marginR} label=\"Development\" variant={\"outlined\"} color=\"default\" />\n          </Typography>\n        </Grid>\n      </Grid>\n      <div className={classes.divider} />\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <Grid container spacing={3}>\n              <Grid item xs={9}>\n                <TextField\n                  label=\"Name\"\n                  style={{ margin: 8 }}\n                  helperText={`${name.length}/128`}\n                  fullWidth\n                  margin=\"normal\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  value={name}\n                  required={true}\n                  autoFocus={true}\n                  onChange={changeName}\n                />\n                <TextField\n                  label=\"Description (Optional)\"\n                  style={{ margin: 8 }}\n                  helperText={`${description.length}/512`}\n                  fullWidth\n                  margin=\"normal\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  value={description}\n                  onChange={changeDescription}\n                />\n              </Grid>\n            </Grid>\n            <EmptyDivider />\n            <Grid container spacing={3}>\n              <Grid item xs={10}>\n                <TableContainer>\n                  <Table aria-label=\"simple table\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell width={\"10%\"} align=\"center\">Variation</TableCell>\n                        <TableCell align=\"center\">Description <span className={classes.gray}>(Optional)</span></TableCell>\n                        <TableCell align=\"center\">Distribution</TableCell>\n                        <TableCell align=\"center\" />\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {variations.map((row) => (\n                        <TableRow key={row.variation}>\n                          <TableCell align={\"center\"}>\n                            {row.variation}\n                          </TableCell>\n                          <TableCell>\n                            <Input fullWidth />\n                          </TableCell>\n                          <TableCell width={\"20%\"}>\n                            <Input value={row.distribution} style={{textAlign: \"right\"}} endAdornment={\"%\"} disabled={true} />\n                          </TableCell>\n                          <TableCell width={\"10%\"}>\n                            {(row.variation !== \"A\" && variations.length >= 3) && (\n                              <IconButton edge=\"end\" aria-label=\"remove\" color=\"secondary\" onClick={() => removeVariation(row.variation)}>\n                                <RemoveCircleOutline />\n                              </IconButton>\n                            )}\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n                {variations.length < variationKeys.length && (\n                  <IconButton edge=\"end\" aria-label=\"remove\" color=\"primary\" onClick={addVariation}>\n                    <AddCircleOutline />\n                  </IconButton>\n                )}\n              </Grid>\n            </Grid>\n            <EmptyDivider />\n            <div className={classes.buttonGroup}>\n              <Button variant=\"contained\" color=\"default\" className={classes.button} onClick={goBack}>\n                Cancel\n              </Button>\n              <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={create}>\n                Create\n              </Button>\n            </div>\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React, {ChangeEvent, useState} from \"react\"\nimport {Button, Chip, FormHelperText, Grid, OutlinedInput, Paper, TextField, Typography} from \"@material-ui/core\"\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\"\nimport { RouteComponentProps } from \"react-router-dom\"\nimport EmptyDivider from \"../../components/Divider/EmptyDivider\";\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      color: theme.palette.text.secondary,\n    },\n    divider: {\n      marginBottom: \"16px\"\n    },\n    buttonGroup: {\n      textAlign: \"right\",\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    margin: {\n      margin: theme.spacing(1),\n    },\n    marginR: {\n      marginRight: theme.spacing(0.5)\n    },\n    textField: {\n      width: \"25ch\",\n    },\n  })\n)\n\ninterface State {\n  eventName: string\n}\nconst nameMaxLength = 50\nconst descriptionMaxLength = 200\nexport default function EventCreation(props: RouteComponentProps) {\n  const classes = useStyles()\n  const [name, setName] = useState(\"\")\n  const [description, setDescription] = useState(\"\")\n  const changeName = (event: ChangeEvent<HTMLInputElement>) => {\n    const value = event.target.value\n    if (nameMaxLength < value.length) return\n    setName(value)\n  }\n  const changeDescription = (event: ChangeEvent<HTMLInputElement>) => {\n    const value = event.target.value\n    if (descriptionMaxLength < value.length) return\n    setDescription(value)\n  }\n  return (\n    <div className={classes.root}>\n      <Grid container>\n        <Grid item xs={12}>\n          <Typography variant={\"h6\"}>\n            Create new event\n          </Typography>\n          <Typography variant={\"caption\"}>\n            <Chip size={\"small\"} className={classes.marginR} label=\"Production\" variant={\"outlined\"} color=\"primary\" />\n            <Chip size={\"small\"} className={classes.marginR} label=\"Development\" variant={\"outlined\"} color=\"default\" />\n          </Typography>\n        </Grid>\n      </Grid>\n      <div className={classes.divider} />\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <Grid container spacing={3}>\n              <Grid item xs={9}>\n                <TextField\n                  label=\"Name\"\n                  style={{ margin: 8 }}\n                  helperText={`${name.length}/128`}\n                  fullWidth\n                  margin=\"normal\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  value={name}\n                  required={true}\n                  autoFocus={true}\n                  placeholder={\"Proceed to payment\"}\n                  onChange={changeName}\n                />\n                <TextField\n                  label=\"Description (Optional)\"\n                  style={{ margin: 8 }}\n                  helperText={`${description.length}/512`}\n                  fullWidth\n                  margin=\"normal\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  value={description}\n                  placeholder={\"Click 'payment' button\"}\n                  onChange={changeDescription}\n                />\n              </Grid>\n            </Grid>\n            <EmptyDivider />\n            <div className={classes.buttonGroup}>\n              <Button\n                variant=\"contained\"\n                color=\"default\"\n                className={classes.button}\n                onClick={() => {\n                  // @ts-ignore\n                  props.history.goBack()\n                }}\n              >\n                Cancel\n              </Button>\n              <Button variant=\"contained\" color=\"primary\" className={classes.button}>\n                Create\n              </Button>\n            </div>\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from \"react\"\nimport {\n  LiveTv as LiveTvIcon,\n  Person as PersonIcon,\n  DeveloperMode as DeveloperModeIcon,\n  Event as EventIcon,\n  Settings as SettingIcon,\n  Assignment as AssignmentIcon,\n} from \"@material-ui/icons\"\nimport Experiment from \"./Experiment/Experiment\"\nimport Account from \"./Account/Account\"\nimport Event from \"./Event/Event\"\nimport Setting from \"./Setting/Setting\"\nimport Tutorial from \"./Tutorial/Tutorial\"\nimport Developer from \"./Developer/Developer\"\nimport ExperimentDetail from \"./Experiment/ExperimentDetail\"\nimport Login from \"./Login/Login\"\nimport Home from \"./Home/Home\"\nimport ExperimentsCreation from \"./Experiment/ExperimentsCreation\";\nimport EventCreation from \"./Event/EventCreation\";\n\nexport class RoutingComponent<T> {\n  text: string\n  path: string\n  component: T\n  componentIcon: React.ComponentType\n  exact: boolean\n\n  constructor(text: string, path: string, component: T, componentIcon: React.ComponentType, exact = false) {\n    this.text = text\n    this.path = path\n    this.component = component\n    this.componentIcon = componentIcon\n    this.exact = exact\n  }\n}\n\nexport interface RoutingComponentMap<T> {\n  [key: string]: RoutingComponent<T>\n}\nconst routingComponent = {\n  home: new RoutingComponent(\"Experiment\", \"/\", Home, AssignmentIcon, true),\n  experiment: new RoutingComponent(\"A/B Test\", \"/experiments\", Experiment, AssignmentIcon, true),\n  experimentNew: new RoutingComponent(\"Create new A/B Test\", \"/experiments/new\", ExperimentsCreation, AssignmentIcon, true),\n  experimentDetail: new RoutingComponent(\n    \"ExperimentDetail\",\n    \"/experiments/detail/:key\",\n    ExperimentDetail,\n    AssignmentIcon\n  ),\n  event: new RoutingComponent(\"Event\", \"/events\", Event, EventIcon, true),\n  eventNew: new RoutingComponent(\"Create new event\", \"/events/new\", EventCreation, EventIcon, true),\n  setting: new RoutingComponent(\"Setting\", \"/settings\", Setting, SettingIcon),\n  account: new RoutingComponent(\"Account\", \"/accounts\", Account, PersonIcon),\n  tutorial: new RoutingComponent(\"Tutorial\", \"/tutorials\", Tutorial, LiveTvIcon),\n  developers: new RoutingComponent(\"Developers\", \"/developers\", Developer, DeveloperModeIcon),\n}\nexport const login = new RoutingComponent(\"Login\", \"/login\", Login, DeveloperModeIcon)\nexport default routingComponent\n","import React from \"react\"\nimport { RouteComponentProps } from \"react-router-dom\"\n\ninterface Props {}\n\nexport default function Home(props: RouteComponentProps) {\n  props.history.replace(\"/experiments\")\n  return <div />\n}\n","import React from \"react\"\nimport { Grid } from \"@material-ui/core\"\n\nexport default function Setting() {\n  return (\n    <div>\n      <Grid container>\n        <Grid item xs={9}></Grid>\n        <Grid item xs={3}></Grid>\n      </Grid>\n      Setting\n    </div>\n  )\n}\n","import React from \"react\"\n\nexport default function Account() {\n  return <div>Account</div>\n}\n","import React from \"react\"\n\nexport default function Developer() {\n  return <div>Developer</div>\n}\n","import React from \"react\"\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  createStyles,\n  Divider,\n  Drawer,\n  FormControlLabel,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Radio,\n  RadioGroup,\n  Typography,\n} from \"@material-ui/core\"\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\"\nimport pages, { RoutingComponent } from \"../pages\"\nimport { Link } from \"react-router-dom\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { useRecoilState } from \"recoil/dist\"\nimport { envProfileState, EnvType } from \"../states/EnvProfile\"\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerHeader: {\n      display: \"flex\",\n      alignItems: \"center\",\n      padding: theme.spacing(0, 1),\n      justifyContent: \"flex-end\",\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    drawerContainer: {\n      overflow: \"auto\",\n    },\n    sectionDesktop: {\n      [theme.breakpoints.up(\"md\")]: {\n        display: \"flex\",\n      },\n    },\n    accordionDevelopment: {\n      backgroundColor: theme.palette.background.default,\n    },\n    accordionProduction: {\n      backgroundColor: theme.palette.primary.dark,\n      color: theme.palette.common.white,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n  })\n)\n\nexport default function LeftSideBar() {\n  const classes = useStyles()\n  const [envProfile, setEnvProfile] = useRecoilState(envProfileState)\n\n  const isActive = (value: string): boolean => {\n    return window.location.pathname.includes(value)\n  }\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    localStorage.setItem(\"envProfile\", \"production\")\n    setEnvProfile(event.target.value as EnvType)\n  }\n\n  // @ts-ignore\n  return (\n    <Drawer\n      className={classes.drawer}\n      variant=\"permanent\"\n      classes={{\n        paper: classes.drawerPaper,\n      }}\n    >\n      <Accordion>\n        <AccordionSummary\n          className={`${envProfile === \"production\" ? classes.accordionProduction : classes.accordionDevelopment}`}\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography variant=\"body1\">\n            Default Workspace\n            <Typography variant=\"body2\">{envProfile}</Typography>\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <RadioGroup aria-label=\"profile\" name=\"profile\" value={envProfile} onChange={handleChange}>\n            <FormControlLabel value=\"production\" control={<Radio />} label=\"Production\" />\n            <FormControlLabel value=\"development\" control={<Radio />} label=\"Development\" />\n          </RadioGroup>\n        </AccordionDetails>\n      </Accordion>\n      <div className={classes.drawerContainer}>\n        <List>\n          <SideBarListItem\n            selected={isActive(pages.experiment.path)}\n            to={`/experiments`}\n            routingComponent={pages.experiment}\n          />\n          <SideBarListItem selected={isActive(pages.event.path)} to={`/events`} routingComponent={pages.event} />\n          <br />\n          <Divider />\n          <br />\n          <SideBarListItem selected={isActive(pages.setting.path)} to={`/settings`} routingComponent={pages.setting} />\n          <SideBarListItem\n            selected={isActive(pages.tutorial.path)}\n            to={`/tutorials`}\n            routingComponent={pages.tutorial}\n          />\n          <SideBarListItem\n            selected={isActive(pages.developers.path)}\n            to={`/developers`}\n            routingComponent={pages.developers}\n          />\n        </List>\n      </div>\n    </Drawer>\n  )\n}\n\nfunction SideBarListItem({\n  routingComponent,\n  to,\n  disabled,\n  selected,\n}: {\n  routingComponent: RoutingComponent<any>\n  to: string\n  disabled?: boolean\n  selected?: boolean\n}) {\n  const Icon = routingComponent.componentIcon\n\n  return (\n    <ListItem selected={selected} disabled={disabled} button component={Link} to={to}>\n      <ListItemIcon>\n        <Icon />\n      </ListItemIcon>\n      <ListItemText primary={routingComponent.text} />\n    </ListItem>\n  )\n}\n","import React, { useState } from \"react\"\nimport { FormattedMessage } from \"react-intl\"\nimport { AppBar, createStyles, IconButton, Menu, MenuItem, Toolbar } from \"@material-ui/core\"\nimport { AccountCircle } from \"@material-ui/icons\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n    },\n    grow: {\n      flexGrow: 1,\n    },\n    sectionDesktop: {\n      [theme.breakpoints.up(\"md\")]: {\n        display: \"flex\",\n      },\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n  })\n)\n\nexport default function Header() {\n  const classes = useStyles()\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null)\n  const isMenuOpen = Boolean(anchorEl)\n  const handleProfileMenuOpen = (e: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(e.currentTarget)\n  }\n  const handleMenuClose = () => {\n    setAnchorEl(null)\n  }\n\n  return (\n    <AppBar color={\"inherit\"} position=\"fixed\">\n      <Toolbar>\n        <div className={classes.grow} />\n        <IconButton edge=\"end\" aria-label=\"account of current user\" color=\"inherit\" onClick={handleProfileMenuOpen}>\n          <AccountCircle />\n        </IconButton>\n      </Toolbar>\n      <Menu\n        anchorEl={anchorEl}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n        id={\"primary-search-account-menu\"}\n        keepMounted\n        transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n        open={isMenuOpen}\n        onClose={handleMenuClose}\n      >\n        {/*<MenuItem onClick={handleMenuClose} component={Link} to={\"/account\"}>*/}\n        {/*  <FormattedMessage id=\"account\" />*/}\n        {/*</MenuItem>*/}\n        <MenuItem onClick={handleMenuClose}>\n          <FormattedMessage id=\"logout\" />\n        </MenuItem>\n      </Menu>\n    </AppBar>\n  )\n}\n","import React, { PropsWithChildren } from \"react\"\nimport { createStyles, CssBaseline, Toolbar } from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport LeftSideBar from \"./LeftSideBar\"\nimport Header from \"./Header\"\nimport { RouteComponentProps } from \"react-router-dom\"\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n  })\n)\n\nexport default function MainFrame(props: PropsWithChildren<RouteComponentProps>) {\n  const classes = useStyles()\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Header />\n      <LeftSideBar />\n      <main className={classes.content}>\n        <Toolbar />\n        <>{props.children}</>\n      </main>\n    </div>\n  )\n}\n","import React from \"react\"\nimport { Snackbar } from \"@material-ui/core\"\nimport {Alert} from \"@material-ui/lab\";\nimport {useSetRecoilState} from \"recoil/dist\";\nimport {snackbarStates} from \"../../states/Feedback/Snackbar\";\n\ninterface Props {\n  open: boolean\n  message: string\n  onClose(): void\n}\nexport default function SuccessSnackbar({ open, message, onClose }: Props) {\n  useSetRecoilState(snackbarStates)\n  return (\n    <Snackbar\n      autoHideDuration={3000}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={open}\n      onClose={onClose}\n    >\n      <Alert severity=\"success\">\n        {message}\n      </Alert>\n    </Snackbar>\n  )\n}\n","import React from \"react\"\nimport \"./App.css\"\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\"\nimport { IntlProvider } from \"react-intl\"\nimport { en } from \"./locale\"\nimport pages, { login } from \"./pages\"\nimport MainFrame from \"./layouts/MainFrame\"\nimport SuccessSnackbar from \"./components/Snackbar/SuccessSnackbar\";\nimport {snackbarStates} from \"./states/Feedback/Snackbar\";\nimport {useRecoilState} from \"recoil/dist\";\n\nconst defaultLang = \"en\"\nlet authenticated: boolean | null = true\n\nfunction App() {\n  const [snackbar, setSnackbar] = useRecoilState(snackbarStates)\n  const handleSnackBarClose = () => setSnackbar({message: \"\", open: false})\n  return (\n    <IntlProvider locale={defaultLang} messages={en}>\n      <Router>\n        <Switch>\n          {authenticated === null ? (\n            <div>인증 확인중</div>\n          ) : authenticated ? (\n            <>\n              {Object.values(pages).map((page, i) => {\n                return (\n                  <Route\n                    path={page.path}\n                    exact={page.exact}\n                    render={(props) => {\n                      const Component = page.component\n                      return (\n                        <MainFrame {...props}>\n                          <Component {...props} />\n                        </MainFrame>\n                      )\n                    }}\n                    key={i}\n                  />\n                )\n              })}\n              <Route path={login.path} exact={login.exact} component={login.component} />\n            </>\n          ) : (\n            <>\n              <Route path={\"/login\"} render={login.component} />\n              <Redirect path=\"*\" to=\"/\" />\n            </>\n          )}\n        </Switch>\n      </Router>\n      <SuccessSnackbar open={snackbar.open} message={snackbar.message} onClose={handleSnackBarClose} />\n    </IntlProvider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\")\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\nimport { RecoilRoot } from \"recoil/dist\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <App />\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}