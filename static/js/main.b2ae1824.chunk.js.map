{"version":3,"sources":["locale/en.ts","pages/Experiment/ExperimentState.tsx","states/EnvProfile.ts","pages/Experiment/ExperimentsCreation.tsx","components/Snackbar/TopRightSnackbar.tsx","pages/Experiment/Experiment.tsx","pages/Event/Event.tsx","pages/Metric/Metric.tsx","pages/Tutorial/Tutorial.tsx","pages/Experiment/ExperimentDetail.tsx","pages/Login/Login.tsx","pages/index.ts","pages/Home/Home.tsx","pages/Setting/Setting.tsx","pages/Account/Account.tsx","pages/Developer/Developer.tsx","layouts/LeftSideBar.tsx","layouts/Header.tsx","layouts/MainFrame.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["name","account","logout","experiment_name","experiment_status","experiment_created","experiment_result","ExperimentState","type","ExperimentStateReady","ExperimentStateRunning","ExperimentStatePaused","ExperimentStateStopped","useStyles","makeStyles","theme","createStyles","status","typography","button","width","padding","spacing","textAlign","color","palette","common","white","ready","backgroundColor","grey","A100","running","success","light","paused","stopped","info","classes","Chip","label","className","envProfile","localStorage","getItem","setItem","envProfileState","atom","key","default","root","flexGrow","paper","text","secondary","buttonGroup","margin","textField","ExperimentsCreation","props","prop","env","useRecoilValue","React","useState","amount","password","testName","testNameRange","showPassword","values","setValues","Grid","container","item","xs","Paper","Typography","variant","OutlinedInput","fullWidth","id","value","onChange","event","target","aria-describedby","inputProps","labelWidth","FormHelperText","length","Button","onClick","cancel","create","TopRightSnackbar","open","message","handleClose","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","createButtonWrap","marginBottom","table","minWidth","createData","trafficAllocation","trafficGroup","createdAt","rows","eventName","description","measurementTarget","measurementStandard","backButton","marginRight","instructions","marginTop","main","dark","display","RoutingComponent","path","component","componentIcon","exact","this","routingComponent","home","history","replace","AssignmentIcon","experiment","view","setView","createdAlertOpen","setCreatedAlertOpen","changeView","startIcon","Add","TableContainer","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","row","scope","to","Link","experimentDetail","match","anchorEl","setAnchorEl","setStatus","isMenuOpen","Boolean","handleMenuClose","renderMenu","Menu","keepMounted","transformOrigin","MenuItem","params","PlayArrow","Stop","Settings","e","currentTarget","metric","openEdit","setOpenEdit","openDelete","setOpenDelete","handleClickOpenEdit","handleCloseEdit","handleCloseDelete","IconButton","Edit","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","AssessmentIcon","EventIcon","setting","SettingIcon","PersonIcon","tutorial","activeStep","setActiveStep","steps","Stepper","alternativeLabel","Step","StepLabel","stepIndex","getStepContent","disabled","prevActiveStep","LiveTvIcon","developers","DeveloperModeIcon","login","drawer","flexShrink","drawerHeader","alignItems","justifyContent","drawerPaper","drawerContainer","overflow","sectionDesktop","breakpoints","up","accordionDevelopment","background","accordionProduction","primary","content","LeftSideBar","useRecoilState","setEnvProfile","isActive","window","location","pathname","Drawer","Accordion","AccordionSummary","expandIcon","ExpandMore","aria-controls","AccordionDetails","RadioGroup","FormControlLabel","control","Radio","List","SideBarListItem","selected","pages","Divider","Icon","ListItem","ListItemIcon","ListItemText","grow","Header","AppBar","position","Toolbar","edge","AccountCircle","MainFrame","CssBaseline","children","App","locale","messages","en","Object","page","i","render","Component","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.b2ae1824.chunk.js","sourcesContent":["export default {\n  name: \"Hackle.io\",\n  account: \"Account\",\n  logout: \"logout\",\n  experiment_name: \"Name\",\n  experiment_status: \"Status\",\n  experiment_created: \"Created\",\n  experiment_result: \"Result\",\n}\n","import React, { PropsWithChildren } from \"react\"\nimport { Chip, createStyles } from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { ExperimentStatusType } from \"../../model/ExperimentStatusType\"\n\ninterface Props {\n  type: ExperimentStatusType\n}\n\nexport default function ExperimentState({ type }: PropsWithChildren<Props>) {\n  switch (type) {\n    case \"READY\":\n      return <ExperimentStateReady />\n    case \"RUNNING\":\n      return <ExperimentStateRunning />\n    case \"PAUSED\":\n      return <ExperimentStatePaused />\n    case \"STOPPED\":\n      return <ExperimentStateStopped />\n  }\n}\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    status: {\n      ...theme.typography.button,\n      width: \"110px\",\n      padding: theme.spacing(1),\n      textAlign: \"center\",\n      color: theme.palette.common.white,\n    },\n    ready: {\n      backgroundColor: theme.palette.grey.A100,\n    },\n    running: {\n      backgroundColor: theme.palette.success.light,\n    },\n    paused: {\n      backgroundColor: \"pink\",\n    },\n    stopped: {\n      backgroundColor: theme.palette.info.light,\n    },\n  })\n)\nexport function ExperimentStateReady() {\n  const classes = useStyles()\n  return <Chip label=\"Ready\" className={`${classes.status} ${classes.ready}`} />\n}\nexport function ExperimentStateRunning() {\n  const classes = useStyles()\n  return <Chip label=\"Running\" className={`${classes.status} ${classes.running}`} />\n}\nexport function ExperimentStatePaused() {\n  const classes = useStyles()\n  return <Chip label=\"Paused\" className={`${classes.status} ${classes.paused}`} />\n}\nexport function ExperimentStateStopped() {\n  const classes = useStyles()\n  return <Chip label=\"STOPPED\" className={`${classes.status} ${classes.stopped}`} />\n}\n","import { atom } from \"recoil\"\nexport type envType = \"production\" | \"development\"\nlet envProfile = localStorage.getItem(\"envProfile\") as envType\nif (!envProfile) {\n  localStorage.setItem(\"envProfile\", \"production\")\n  envProfile = \"production\"\n}\nexport const envProfileState = atom<envType>({\n  key: \"envProfile\",\n  default: envProfile,\n})\n","import React, { useState } from \"react\"\nimport { Button, FormHelperText, Grid, OutlinedInput, Paper, Typography } from \"@material-ui/core\"\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\"\nimport { RouteComponentProps } from \"react-router-dom\"\nimport { useRecoilValue } from \"recoil/dist\"\nimport { envProfileState } from \"../../states/EnvProfile\"\nimport TopRightSnackbar from \"../../components/Snackbar/TopRightSnackbar\"\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      color: theme.palette.text.secondary,\n    },\n    buttonGroup: {\n      textAlign: \"right\",\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    margin: {\n      margin: theme.spacing(1),\n    },\n    textField: {\n      width: \"25ch\",\n    },\n  })\n)\n\ninterface State {\n  amount: string\n  password: string\n  testName: string\n  testNameRange: number\n  showPassword: boolean\n}\ninterface Props {\n  create(): void\n  cancel(): void\n}\nexport default function ExperimentsCreation(props: Props) {\n  const classes = useStyles()\n  const env = useRecoilValue(envProfileState)\n\n  const [values, setValues] = React.useState<State>({\n    amount: \"\",\n    password: \"\",\n    testName: \"\",\n    testNameRange: 0,\n    showPassword: false,\n  })\n  const handleChange = (prop: keyof State) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValues({ ...values, [prop]: event.target.value })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <Typography variant={\"h4\"}>A/B 테스트 생성 {env}</Typography>\n            <Grid container spacing={3}>\n              <Grid item xs={3}>\n                <Typography variant={\"h6\"}>A/B 테스트명</Typography>\n              </Grid>\n              <Grid item xs={9}>\n                <OutlinedInput\n                  fullWidth={true}\n                  id=\"outlined-adornment-test-name\"\n                  value={values.testName}\n                  onChange={handleChange(\"testName\")}\n                  aria-describedby=\"outlined-test-name-helper-text\"\n                  inputProps={{\n                    \"aria-label\": \"test-name\",\n                  }}\n                  labelWidth={0}\n                />\n                <FormHelperText id=\"outlined-test-name-helper-text\">{`${values.testName.length}/200`}</FormHelperText>\n              </Grid>\n            </Grid>\n            <div className={classes.buttonGroup}>\n              <Button variant=\"contained\" color=\"default\" className={classes.button} onClick={props.cancel}>\n                Cancel\n              </Button>\n              <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={props.create}>\n                Create\n              </Button>\n            </div>\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from \"react\"\nimport { Snackbar } from \"@material-ui/core\"\n\ninterface Props {\n  open: boolean\n  message: string\n  handleClose(): void\n}\nexport default function TopRightSnackbar({ open, message, handleClose }: Props) {\n  return (\n    <Snackbar\n      autoHideDuration={3000}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={open}\n      onClose={handleClose}\n      message={message}\n    />\n  )\n}\n","import React, { useState } from \"react\"\nimport {\n  Button,\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n} from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { Link, RouteComponentProps } from \"react-router-dom\"\nimport { Add as AddIcon } from \"@material-ui/icons\"\nimport ExperimentState from \"./ExperimentState\"\nimport { ExperimentStatusType } from \"../../model/ExperimentStatusType\"\nimport ExperimentsCreation from \"./ExperimentsCreation\"\nimport TopRightSnackbar from \"../../components/Snackbar/TopRightSnackbar\"\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  createButtonWrap: {\n    textAlign: \"right\",\n    marginBottom: \"16px\",\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  table: {\n    minWidth: 650,\n  },\n}))\n\nfunction createData(\n  name: string,\n  key: string,\n  trafficAllocation: number,\n  trafficGroup: string,\n  status: ExperimentStatusType,\n  createdAt: string\n) {\n  return { name, key, trafficAllocation, trafficGroup, status, createdAt }\n}\n\nconst rows = [\n  createData(\"Test Name Example\", \"5521\", 30, \"50/50\", \"READY\", \"2020-5-31\"),\n  createData(\"[2020.Q3] SRP 개편 2차 테스트\", \"1382\", 60, \"34/33/33\", \"RUNNING\", \"2020-5-31\"),\n  createData(\"[2020.Q3] SRP 개편 3차 테스트\", \"1382\", 60, \"34/33/33\", \"PAUSED\", \"2020-5-31\"),\n  createData(\"[2020.Q3] SRP 개편 4차 테스트\", \"1382\", 60, \"34/33/33\", \"STOPPED\", \"2020-5-31\"),\n]\ntype ViewType = \"CREATE_VIEW\" | \"LIST_VIEW\" | \"DETAIL_VIEW\"\nexport default function Experiment(props: RouteComponentProps) {\n  const classes = useStyles()\n  const [view, setView] = useState<ViewType>(\"LIST_VIEW\")\n  const [createdAlertOpen, setCreatedAlertOpen] = useState(false)\n  const createSuccess = () => {\n    setCreatedAlertOpen(true)\n    setView(\"LIST_VIEW\")\n  }\n  const handleAlertClose = () => setCreatedAlertOpen(false)\n  const changeView = (view: ViewType) => () => setView(view)\n  switch (view) {\n    case \"LIST_VIEW\":\n      return (\n        <div className={classes.root}>\n          <Grid container>\n            <Grid item xs={9}>\n              <Typography variant={\"h6\"}>Experiment</Typography>\n              <Typography variant={\"caption\"}>Create an experiment for a/b testing</Typography>\n            </Grid>\n            <Grid item xs={3}>\n              <div className={classes.createButtonWrap}>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.button}\n                  startIcon={<AddIcon />}\n                  onClick={changeView(\"CREATE_VIEW\")}\n                >\n                  New\n                </Button>\n              </div>\n            </Grid>\n          </Grid>\n          <TableContainer component={Paper}>\n            <Table className={classes.table} aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Name</TableCell>\n                  {/*<TableCell align=\"right\">*/}\n                  {/*  트래픽 할당*/}\n                  {/*  <br />*/}\n                  {/*  (그룹별 트래픽 배분)*/}\n                  {/*</TableCell>*/}\n                  <TableCell align=\"right\">Status</TableCell>\n                  <TableCell align=\"right\">Created</TableCell>\n                  <TableCell align=\"right\">Result</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rows.map((row) => (\n                  <TableRow key={row.name}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {row.name}\n                      <br />({`#${row.key}`})\n                    </TableCell>\n                    {/*<TableCell align=\"right\">*/}\n                    {/*  {row.trafficAllocation}*/}\n                    {/*  <br />({row.trafficGroup})*/}\n                    {/*</TableCell>*/}\n                    <TableCell align=\"right\">\n                      <ExperimentState type={row.status}>{row.status}</ExperimentState>\n                    </TableCell>\n                    <TableCell align=\"right\">{row.createdAt}</TableCell>\n                    <TableCell align=\"right\">\n                      <Button variant={\"outlined\"} to={`experiments/detail/${row.key}`} component={Link}>\n                        Detail\n                      </Button>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TopRightSnackbar open={createdAlertOpen} message={\"success\"} handleClose={handleAlertClose} />\n        </div>\n      )\n    case \"CREATE_VIEW\":\n      return <ExperimentsCreation create={createSuccess} cancel={changeView(\"LIST_VIEW\")} {...props} />\n    default:\n      return <div />\n  }\n}\n","import React from \"react\"\nimport {\n  Button,\n  createStyles,\n  Grid,\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n} from \"@material-ui/core\"\nimport { Link } from \"react-router-dom\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { Add as AddIcon, Edit } from \"@material-ui/icons\"\nimport { useRecoilValue } from \"recoil/dist\"\nimport { envProfileState } from \"../../states/EnvProfile\"\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    createButtonWrap: {\n      textAlign: \"right\",\n      marginBottom: \"16px\",\n    },\n    table: {\n      minWidth: 650,\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n  })\n)\n\nfunction createData(eventName: string, description: string, createdAt: string) {\n  return { eventName, description, createdAt }\n}\n\nconst rows = [\n  createData(\"Payment Complete\", \"Event when finishing payment procedure\", \"2020-5-31\"),\n  createData(\"Try CheckOut\", \"Event that clicking ‘CheckOut’ button\", \"2020-4-23\"),\n  createData(\"Cart PV\", \"Entering Cart Page\", \"2020-4-23\"),\n]\n\nexport default function Event() {\n  const classes = useStyles()\n  const env = useRecoilValue(envProfileState)\n  return (\n    <div className={classes.root}>\n      <Grid container>\n        <Grid item xs={9}>\n          <Typography variant={\"h6\"}>Event</Typography>\n          <Typography variant={\"caption\"}>Create a event for tracking path of customers</Typography>\n        </Grid>\n        <Grid item xs={3}>\n          <div className={classes.createButtonWrap}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.button}\n              startIcon={<AddIcon />}\n              component={Link}\n              to={`/events/creation`}\n            >\n              New\n            </Button>\n          </div>\n        </Grid>\n      </Grid>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Name</TableCell>\n              <TableCell align=\"right\">Created</TableCell>\n              <TableCell align=\"right\" />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row) => (\n              <TableRow key={row.eventName}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.eventName}\n                  <br />\n                  <span>{row.description}</span>\n                </TableCell>\n                <TableCell align=\"right\">{row.createdAt}</TableCell>\n                <TableCell align=\"right\">\n                  <IconButton aria-label=\"edit\" onClick={() => ({})}>\n                    <Edit />\n                  </IconButton>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  )\n}\n","import React, { useState } from \"react\"\nimport {\n  Button,\n  createStyles,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Grid,\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n} from \"@material-ui/core\"\nimport { Link, RouteComponentProps } from \"react-router-dom\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { Edit, Add as AddIcon } from \"@material-ui/icons\"\nimport { useRecoilValue } from \"recoil/dist\"\nimport { envProfileState } from \"../../states/EnvProfile\"\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    createButtonWrap: {\n      textAlign: \"right\",\n      marginBottom: \"16px\",\n    },\n    table: {\n      minWidth: 650,\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n  })\n)\n\nfunction createData(\n  name: string,\n  key: string,\n  description: string,\n  measurementTarget: string,\n  measurementStandard: string,\n  createdAt: string\n) {\n  return { name, key, description, measurementTarget, measurementStandard, createdAt }\n}\n\nconst rows = [\n  createData(\n    \"Overall Payment Conversion\",\n    \"5521\",\n    \"Total # of Payment Complete / Total # of CheckOut PageView\",\n    \"Count\",\n    \"이벤트 기준\",\n    \"2020-5-31\"\n  ),\n  createData(\n    \"Buyer Conversion\",\n    \"1382\",\n    \"(Unique) # of Payment Complete / # of exposed customers\",\n    \"횟수\",\n    \"순 사용자 기준\",\n    \"2020-4-23\"\n  ),\n  createData(\"Cart PV\", \"1381\", \"Total # of Cart PageView\", \"횟수\", \"이벤트 기준\", \"2020-4-23\"),\n  createData(\n    \"GMV per Customer\",\n    \"1380\",\n    \"(Unique) Total GMV / # of exposed customers\",\n    \"Value\",\n    \"순 사용자 기준\",\n    \"2020-4-23\"\n  ),\n  createData(\"Average Order Value\", \"1379\", \"Total GMV / # of Payment Complete\", \"횟수\", \"순 사용자 기준\", \"2020-4-23\"),\n]\n\nexport default function Metric() {\n  const classes = useStyles()\n  const env = useRecoilValue(envProfileState)\n  const [openEdit, setOpenEdit] = useState(false)\n  const [openDelete, setOpenDelete] = useState(false)\n\n  const handleClickOpenEdit = () => setOpenEdit(true)\n  const handleCloseEdit = () => setOpenEdit(false)\n\n  const handleClickOpenDelete = () => setOpenDelete(true)\n  const handleCloseDelete = () => setOpenDelete(false)\n\n  return (\n    <div className={classes.root}>\n      <Grid container>\n        <Grid item xs={9}>\n          <Typography variant={\"h6\"}>Metric</Typography>\n          <Typography variant={\"caption\"}>Create a metric for quantitative measurement</Typography>\n        </Grid>\n        <Grid item xs={3}>\n          <div className={classes.createButtonWrap}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.button}\n              startIcon={<AddIcon />}\n              component={Link}\n              to={`/metrics/creation`}\n            >\n              New\n            </Button>\n          </div>\n        </Grid>\n      </Grid>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Name</TableCell>\n              <TableCell align=\"right\">Type</TableCell>\n              <TableCell align=\"right\">Property</TableCell>\n              <TableCell align=\"right\">Created</TableCell>\n              <TableCell align=\"right\" />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row) => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                  <br />\n                  <span>{row.description}</span>\n                </TableCell>\n                <TableCell align=\"right\">{row.measurementTarget}</TableCell>\n                <TableCell align=\"right\">{row.measurementStandard}</TableCell>\n                <TableCell align=\"right\">{row.createdAt}</TableCell>\n                <TableCell align=\"right\">\n                  <IconButton aria-label=\"edit\" onClick={handleClickOpenEdit}>\n                    <Edit />\n                  </IconButton>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <Dialog\n        open={openEdit}\n        onClose={handleCloseEdit}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"수정하기\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">수정하기 본문</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseEdit} color=\"default\">\n            취소\n          </Button>\n          <Button onClick={handleCloseEdit} color=\"primary\" autoFocus>\n            수정\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Dialog\n        open={openDelete}\n        onClose={handleCloseDelete}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"삭제하기\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">정말 삭제 하시겠습니까?</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDelete} color=\"default\">\n            취소\n          </Button>\n          <Button onClick={handleCloseDelete} color=\"secondary\" autoFocus>\n            삭제\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n","import React from \"react\"\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\"\nimport { Button, Step, StepLabel, Stepper, Typography } from \"@material-ui/core\"\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n    },\n    backButton: {\n      marginRight: theme.spacing(1),\n    },\n    instructions: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n  })\n)\n\nfunction getSteps() {\n  return [\"테스트 목표 정의(event, metric)\", \"SDK 연동 설정\", \"A/B Test 생성\"]\n}\n\nfunction getStepContent(stepIndex: number) {\n  switch (stepIndex) {\n    case 0:\n      return \"이벤트를 정의해보세요\"\n    case 1:\n      return \"SDK 연동 해보세요\"\n    case 2:\n      return \"A/B테스트 생성해보세요\"\n    default:\n      return \"Unknown stepIndex\"\n  }\n}\n\nexport default function Tutorial() {\n  const classes = useStyles()\n  const [activeStep, setActiveStep] = React.useState(0)\n  const steps = getSteps()\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1)\n  }\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1)\n  }\n\n  const handleReset = () => {\n    setActiveStep(0)\n  }\n\n  return (\n    <div className={classes.root}>\n      <Stepper activeStep={activeStep} alternativeLabel>\n        {steps.map((label) => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n      <div>\n        {activeStep === steps.length ? (\n          <div>\n            <Typography className={classes.instructions}>생성완료</Typography>\n            <Button onClick={handleReset}>Reset</Button>\n          </div>\n        ) : (\n          <div>\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\n            <div>\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.backButton}>\n                Back\n              </Button>\n              <Button variant=\"contained\" color=\"primary\" onClick={handleNext}>\n                {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\n              </Button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React, { useState } from \"react\"\nimport { RouteComponentProps } from \"react-router-dom\"\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\"\nimport { Button, Grid, Menu, MenuItem, Paper, Typography } from \"@material-ui/core\"\nimport { PlayArrow, Settings, Stop } from \"@material-ui/icons\"\nimport { ExperimentStatusType } from \"../../model/ExperimentStatusType\"\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      color: theme.palette.text.secondary,\n    },\n    buttonGroup: {\n      textAlign: \"right\",\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    success: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.success.main,\n      \"&:hover\": {\n        backgroundColor: theme.palette.success.dark,\n      },\n    },\n  })\n)\n\ninterface Props {\n  key: string\n}\n\nexport default function ExperimentDetail({ match }: RouteComponentProps<Props>) {\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null)\n  const [status, setStatus] = useState<ExperimentStatusType>(\"READY\")\n  const isMenuOpen = Boolean(anchorEl)\n  const handleProfileMenuOpen = (e: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(e.currentTarget)\n  }\n  const handleMenuClose = () => {\n    setAnchorEl(null)\n  }\n  const start = () => setStatus(\"RUNNING\")\n  const pause = () => setStatus(\"READY\")\n\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={\"primary-search-account-menu\"}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Setting</MenuItem>\n      <MenuItem onClick={handleMenuClose}>Traffic Allocation</MenuItem>\n      <MenuItem onClick={handleMenuClose}>Whitelist</MenuItem>\n      <MenuItem onClick={handleMenuClose}>Complete (Select a winner)</MenuItem>\n    </Menu>\n  )\n  const classes = useStyles()\n  const { params } = match\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <Typography variant={\"h4\"}>Test Key: {`#${params.key}`}</Typography>\n            <div className={classes.buttonGroup}>\n              {status === \"READY\" ? (\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.success}\n                  startIcon={<PlayArrow />}\n                  onClick={start}\n                >\n                  Start\n                </Button>\n              ) : (\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  className={classes.button}\n                  startIcon={<Stop />}\n                  onClick={pause}\n                >\n                  Pause\n                </Button>\n              )}\n\n              <Button\n                variant=\"contained\"\n                color=\"default\"\n                className={classes.button}\n                startIcon={<Settings />}\n                onClick={handleProfileMenuOpen}\n              >\n                Edit\n              </Button>\n            </div>\n          </Paper>\n        </Grid>\n        <Grid item xs={6}>\n          <Paper className={classes.paper}>xs=6</Paper>\n        </Grid>\n        <Grid item xs={6}>\n          <Paper className={classes.paper}>xs=6</Paper>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>xs=3</Paper>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>xs=3</Paper>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>xs=3</Paper>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>xs=3</Paper>\n        </Grid>\n      </Grid>\n      {renderMenu}\n    </div>\n  )\n}\n","import React from \"react\"\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      display: \"flex\",\n    },\n  })\n)\ninterface Props {}\n\nexport default function Login(props: Props) {\n  const classes = useStyles()\n\n  return <div className={classes.root}>Login</div>\n}\n","import React from \"react\"\nimport {\n  LiveTv as LiveTvIcon,\n  Person as PersonIcon,\n  DeveloperMode as DeveloperModeIcon,\n  Assessment as AssessmentIcon,\n  Event as EventIcon,\n  Settings as SettingIcon,\n  Assignment as AssignmentIcon,\n} from \"@material-ui/icons\"\nimport Experiment from \"./Experiment/Experiment\"\nimport Account from \"./Account/Account\"\nimport Event from \"./Event/Event\"\nimport Metric from \"./Metric/Metric\"\nimport Setting from \"./Setting/Setting\"\nimport Tutorial from \"./Tutorial/Tutorial\"\nimport Developer from \"./Developer/Developer\"\nimport ExperimentDetail from \"./Experiment/ExperimentDetail\"\nimport Login from \"./Login/Login\"\nimport Home from \"./Home/Home\"\n\nexport class RoutingComponent<T> {\n  text: string\n  path: string\n  component: T\n  componentIcon: React.ComponentType\n  exact: boolean\n\n  constructor(text: string, path: string, component: T, componentIcon: React.ComponentType, exact = false) {\n    this.text = text\n    this.path = path\n    this.component = component\n    this.componentIcon = componentIcon\n    this.exact = exact\n  }\n}\n\nexport interface RoutingComponentMap<T> {\n  [key: string]: RoutingComponent<T>\n}\nconst routingComponent = {\n  home: new RoutingComponent(\"Experiment\", \"/\", Home, AssignmentIcon, true),\n  experiment: new RoutingComponent(\"Experiment\", \"/experiments\", Experiment, AssignmentIcon, true),\n  experimentDetail: new RoutingComponent(\n    \"ExperimentDetail\",\n    \"/experiments/detail/:key\",\n    ExperimentDetail,\n    AssignmentIcon\n  ),\n  metric: new RoutingComponent(\"Metric\", \"/metrics\", Metric, AssessmentIcon, true),\n  event: new RoutingComponent(\"Event\", \"/events\", Event, EventIcon, true),\n  setting: new RoutingComponent(\"Setting\", \"/settings\", Setting, SettingIcon),\n  account: new RoutingComponent(\"Account\", \"/accounts\", Account, PersonIcon),\n  tutorial: new RoutingComponent(\"Tutorial\", \"/tutorials\", Tutorial, LiveTvIcon),\n  developers: new RoutingComponent(\"Developers\", \"/developers\", Developer, DeveloperModeIcon),\n}\nexport const login = new RoutingComponent(\"Login\", \"/login\", Login, DeveloperModeIcon)\nexport default routingComponent\n","import React from \"react\"\nimport { RouteComponentProps } from \"react-router-dom\"\n\ninterface Props {}\n\nexport default function Home(props: RouteComponentProps) {\n  props.history.replace(\"/experiments\")\n  return <div />\n}\n","import React from \"react\"\nimport { Grid } from \"@material-ui/core\"\n\nexport default function Setting() {\n  return (\n    <div>\n      <Grid container>\n        <Grid item xs={9}></Grid>\n        <Grid item xs={3}></Grid>\n      </Grid>\n      Setting\n    </div>\n  )\n}\n","import React from \"react\"\n\nexport default function Account() {\n  return <div>Account</div>\n}\n","import React from \"react\"\n\nexport default function Developer() {\n  return <div>Developer</div>\n}\n","import React from \"react\"\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  createStyles,\n  Divider,\n  Drawer,\n  FormControlLabel,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Radio,\n  RadioGroup,\n  Typography,\n} from \"@material-ui/core\"\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\"\nimport pages, { RoutingComponent } from \"../pages\"\nimport { Link } from \"react-router-dom\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { useRecoilState } from \"recoil/dist\"\nimport { envProfileState, envType } from \"../states/EnvProfile\"\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerHeader: {\n      display: \"flex\",\n      alignItems: \"center\",\n      padding: theme.spacing(0, 1),\n      justifyContent: \"flex-end\",\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    drawerContainer: {\n      overflow: \"auto\",\n    },\n    sectionDesktop: {\n      [theme.breakpoints.up(\"md\")]: {\n        display: \"flex\",\n      },\n    },\n    accordionDevelopment: {\n      backgroundColor: theme.palette.background.default,\n    },\n    accordionProduction: {\n      backgroundColor: theme.palette.primary.dark,\n      color: theme.palette.common.white,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n  })\n)\n\nexport default function LeftSideBar() {\n  const classes = useStyles()\n  const [envProfile, setEnvProfile] = useRecoilState(envProfileState)\n\n  const isActive = (value: string): boolean => {\n    return window.location.pathname === value\n  }\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    localStorage.setItem(\"envProfile\", \"production\")\n    setEnvProfile(event.target.value as envType)\n  }\n\n  // @ts-ignore\n  return (\n    <Drawer\n      className={classes.drawer}\n      variant=\"permanent\"\n      classes={{\n        paper: classes.drawerPaper,\n      }}\n    >\n      <Accordion>\n        <AccordionSummary\n          className={`${envProfile === \"production\" ? classes.accordionProduction : classes.accordionDevelopment}`}\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography variant=\"body1\">\n            Default Workspace\n            <Typography variant=\"body2\">{envProfile}</Typography>\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <RadioGroup aria-label=\"profile\" name=\"profile\" value={envProfile} onChange={handleChange}>\n            <FormControlLabel value=\"production\" control={<Radio />} label=\"Production\" />\n            <FormControlLabel value=\"development\" control={<Radio />} label=\"Development\" />\n          </RadioGroup>\n        </AccordionDetails>\n      </Accordion>\n      <div className={classes.drawerContainer}>\n        <List>\n          <SideBarListItem\n            selected={isActive(pages.experiment.path)}\n            to={`/experiments`}\n            routingComponent={pages.experiment}\n          />\n          <SideBarListItem selected={isActive(pages.metric.path)} to={`/metrics`} routingComponent={pages.metric} />\n          <SideBarListItem selected={isActive(pages.event.path)} to={`/events`} routingComponent={pages.event} />\n          <SideBarListItem selected={isActive(pages.setting.path)} to={`/settings`} routingComponent={pages.setting} />\n          <SideBarListItem\n            selected={isActive(pages.account.path)}\n            to={`/accounts`}\n            routingComponent={pages.account}\n            disabled={true}\n          />\n          <Divider />\n          <SideBarListItem\n            selected={isActive(pages.tutorial.path)}\n            to={`/tutorials`}\n            routingComponent={pages.tutorial}\n          />\n          <SideBarListItem\n            selected={isActive(pages.developers.path)}\n            to={`/developers`}\n            routingComponent={pages.developers}\n          />\n        </List>\n      </div>\n    </Drawer>\n  )\n}\n\nfunction SideBarListItem({\n  routingComponent,\n  to,\n  disabled,\n  selected,\n}: {\n  routingComponent: RoutingComponent<any>\n  to: string\n  disabled?: boolean\n  selected?: boolean\n}) {\n  const classes = useStyles()\n  const Icon = routingComponent.componentIcon\n\n  return (\n    <ListItem selected={selected} disabled={disabled} button component={Link} to={to}>\n      <ListItemIcon>\n        <Icon />\n      </ListItemIcon>\n      <ListItemText primary={routingComponent.text} />\n    </ListItem>\n  )\n}\n","import React, { useState } from \"react\"\nimport { FormattedMessage } from \"react-intl\"\nimport { AppBar, createStyles, IconButton, Menu, MenuItem, Toolbar } from \"@material-ui/core\"\nimport { AccountCircle } from \"@material-ui/icons\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n    },\n    grow: {\n      flexGrow: 1,\n    },\n    sectionDesktop: {\n      [theme.breakpoints.up(\"md\")]: {\n        display: \"flex\",\n      },\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n  })\n)\n\nexport default function Header() {\n  const classes = useStyles()\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null)\n  const isMenuOpen = Boolean(anchorEl)\n  const handleProfileMenuOpen = (e: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(e.currentTarget)\n  }\n  const handleMenuClose = () => {\n    setAnchorEl(null)\n  }\n\n  return (\n    <AppBar color={\"inherit\"} position=\"fixed\">\n      <Toolbar>\n        <div className={classes.grow} />\n        <IconButton edge=\"end\" aria-label=\"account of current user\" color=\"inherit\" onClick={handleProfileMenuOpen}>\n          <AccountCircle />\n        </IconButton>\n      </Toolbar>\n      <Menu\n        anchorEl={anchorEl}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n        id={\"primary-search-account-menu\"}\n        keepMounted\n        transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n        open={isMenuOpen}\n        onClose={handleMenuClose}\n      >\n        {/*<MenuItem onClick={handleMenuClose} component={Link} to={\"/account\"}>*/}\n        {/*  <FormattedMessage id=\"account\" />*/}\n        {/*</MenuItem>*/}\n        <MenuItem onClick={handleMenuClose}>\n          <FormattedMessage id=\"logout\" />\n        </MenuItem>\n      </Menu>\n    </AppBar>\n  )\n}\n","import React, { PropsWithChildren } from \"react\"\nimport { createStyles, CssBaseline, Toolbar } from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport LeftSideBar from \"./LeftSideBar\"\nimport Header from \"./Header\"\nimport { RouteComponentProps } from \"react-router-dom\"\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n  })\n)\n\nexport default function MainFrame(props: PropsWithChildren<RouteComponentProps>) {\n  const classes = useStyles()\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Header />\n      <LeftSideBar />\n      <main className={classes.content}>\n        <Toolbar />\n        <>{props.children}</>\n      </main>\n    </div>\n  )\n}\n","import React from \"react\"\nimport \"./App.css\"\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\"\nimport { IntlProvider } from \"react-intl\"\nimport { en } from \"./locale\"\nimport pages, { login } from \"./pages\"\nimport MainFrame from \"./layouts/MainFrame\"\n\nconst defaultLang = \"en\"\nlet authenticated: boolean | null = true\n\nfunction App() {\n  return (\n    <IntlProvider locale={defaultLang} messages={en}>\n      <Router>\n        <Switch>\n          {authenticated === null ? (\n            <div>인증 확인중</div>\n          ) : authenticated ? (\n            <>\n              {Object.values(pages).map((page, i) => {\n                return (\n                  <Route\n                    path={page.path}\n                    exact={page.exact}\n                    render={(props) => {\n                      const Component = page.component\n                      return (\n                        <MainFrame {...props}>\n                          <Component {...props} />\n                        </MainFrame>\n                      )\n                    }}\n                    key={i}\n                  />\n                )\n              })}\n              <Route path={login.path} exact={login.exact} component={login.component} />\n            </>\n          ) : (\n            <>\n              <Route path={\"/login\"} render={login.component} />\n              <Redirect path=\"*\" to=\"/\" />\n            </>\n          )}\n        </Switch>\n      </Router>\n    </IntlProvider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\")\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\nimport { RecoilRoot } from \"recoil/dist\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <App />\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}