{"version":3,"sources":["locale/en.ts","pages/Experiment/ExperimentState.tsx","pages/Experiment/Experiment.tsx","pages/Event/Event.tsx","pages/Metric/Metric.tsx","pages/Tutorial/Tutorial.tsx","pages/Experiment/TestDetail.tsx","pages/Experiment/ExperimentsCreation.tsx","pages/Metric/MetricCreation.tsx","pages/Event/EventCreation.tsx","pages/index.ts","pages/Setting/Setting.tsx","pages/Account/Account.tsx","pages/Developer/Developer.tsx","pages/Login/Login.tsx","layouts/Root.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["name","account","logout","experiment_name","experiment_status","experiment_created","experiment_result","ExperimentState","type","ExperimentStateReady","ExperimentStateRunning","ExperimentStatePaused","ExperimentStateStopped","useStyles","makeStyles","theme","createStyles","ready","typography","button","backgroundColor","palette","grey","A100","padding","spacing","textAlign","color","common","white","running","success","light","paused","stopped","info","classes","className","root","flexGrow","createButtonWrap","marginBottom","margin","table","minWidth","createData","key","trafficAllocation","trafficGroup","status","createdAt","rows","eventName","description","measurementTarget","measurementStandard","width","backButton","marginRight","instructions","marginTop","paper","text","secondary","buttonGroup","main","dark","textField","RoutingComponent","path","component","componentIcon","exact","this","routingComponent","experiment","Typography","variant","Button","startIcon","Add","Link","to","pages","ExperimentsCreation","TableContainer","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","row","scope","AssignmentIcon","experimentDetail","match","useState","anchorEl","setAnchorEl","setStatus","isMenuOpen","Boolean","handleMenuClose","renderMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","params","Grid","container","item","xs","PlayArrow","Stop","Settings","e","currentTarget","props","prop","React","amount","password","testName","testNameRange","showPassword","values","setValues","OutlinedInput","fullWidth","value","onChange","event","target","aria-describedby","inputProps","labelWidth","FormHelperText","length","console","log","history","goBack","metric","openEdit","setOpenEdit","openDelete","setOpenDelete","handleClickOpenEdit","handleCloseEdit","handleCloseDelete","metricCreation","IconButton","Edit","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","AssessmentIcon","metricName","eventCreation","EventIcon","setting","SettingIcon","PersonIcon","tutorial","activeStep","setActiveStep","steps","Stepper","alternativeLabel","label","Step","StepLabel","stepIndex","getStepContent","disabled","prevActiveStep","LiveTvIcon","developers","DeveloperModeIcon","login","display","grow","appBar","zIndex","drawer","flexShrink","drawerPaper","drawerContainer","overflow","sectionDesktop","breakpoints","up","content","SideBarListItem","selected","Icon","ListItem","ListItemIcon","ListItemText","primary","Root","children","isActive","window","location","pathname","CssBaseline","AppBar","position","Toolbar","noWrap","edge","AccountCircle","Drawer","Divider","App","locale","messages","en","Object","page","i","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.55fc22d1.chunk.js","sourcesContent":["export default {\n  name: \"Hackle.io\",\n  account: \"Account\",\n  logout: \"logout\",\n  experiment_name: \"Name\",\n  experiment_status: \"Status\",\n  experiment_created: \"Created\",\n  experiment_result: \"Result\",\n}\n","import React, { PropsWithChildren } from \"react\"\nimport { createStyles } from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { ExperimentStatusType } from \"../../model/ExperimentStatusType\"\n\ninterface Props {\n  type: ExperimentStatusType\n}\n\nexport default function ExperimentState({ type }: PropsWithChildren<Props>) {\n  switch (type) {\n    case \"READY\":\n      return <ExperimentStateReady />\n    case \"RUNNING\":\n      return <ExperimentStateRunning />\n    case \"PAUSED\":\n      return <ExperimentStatePaused />\n    case \"STOPPED\":\n      return <ExperimentStateStopped />\n  }\n}\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    ready: {\n      ...theme.typography.button,\n      backgroundColor: theme.palette.grey.A100,\n      padding: theme.spacing(1),\n      textAlign: \"center\",\n      color: theme.palette.common.white,\n    },\n    running: {\n      ...theme.typography.button,\n      backgroundColor: theme.palette.success.light,\n      padding: theme.spacing(1),\n      textAlign: \"center\",\n      color: theme.palette.common.white,\n    },\n    paused: {\n      ...theme.typography.button,\n      backgroundColor: \"pink\",\n      padding: theme.spacing(1),\n      textAlign: \"center\",\n      color: theme.palette.common.white,\n    },\n    stopped: {\n      ...theme.typography.button,\n      backgroundColor: theme.palette.info.light,\n      padding: theme.spacing(1),\n      textAlign: \"center\",\n      color: theme.palette.common.white,\n    },\n  })\n)\nexport function ExperimentStateReady() {\n  const classes = useStyles()\n  return <div className={classes.ready}>Ready</div>\n}\nexport function ExperimentStateRunning() {\n  const classes = useStyles()\n  return <div className={classes.running}>Running</div>\n}\nexport function ExperimentStatePaused() {\n  const classes = useStyles()\n  return <div className={classes.paused}>Paused</div>\n}\n\nexport function ExperimentStateStopped() {\n  const classes = useStyles()\n  return <div className={classes.stopped}>Stopped</div>\n}\n","import React from \"react\"\nimport {\n  Button,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n} from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { Link } from \"react-router-dom\"\nimport pages from \"../\"\nimport { Add as AddIcon } from \"@material-ui/icons\"\nimport ExperimentState from \"./ExperimentState\"\nimport { ExperimentStatusType } from \"../../model/ExperimentStatusType\"\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  createButtonWrap: {\n    textAlign: \"right\",\n    marginBottom: \"10px\",\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  table: {\n    minWidth: 650,\n  },\n}))\n\nfunction createData(\n  name: string,\n  key: string,\n  trafficAllocation: number,\n  trafficGroup: string,\n  status: ExperimentStatusType,\n  createdAt: string\n) {\n  return { name, key, trafficAllocation, trafficGroup, status, createdAt }\n}\n\nconst rows = [\n  createData(\"Test Name Example\", \"5521\", 30, \"50/50\", \"READY\", \"2020-5-31\"),\n  createData(\"[2020.Q3] SRP 개편 2차 테스트\", \"1382\", 60, \"34/33/33\", \"RUNNING\", \"2020-5-31\"),\n  createData(\"[2020.Q3] SRP 개편 3차 테스트\", \"1382\", 60, \"34/33/33\", \"PAUSED\", \"2020-5-31\"),\n  createData(\"[2020.Q3] SRP 개편 4차 테스트\", \"1382\", 60, \"34/33/33\", \"STOPPED\", \"2020-5-31\"),\n]\n\nexport default function Experiment() {\n  const classes = useStyles()\n  return (\n    <div className={classes.root}>\n      <Typography variant={\"h6\"}>Experiment</Typography>\n      <Typography variant={\"caption\"}>Create an experiment for a/b testing</Typography>\n      <div className={classes.createButtonWrap}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n          startIcon={<AddIcon />}\n          component={Link}\n          to={pages.ExperimentsCreation.path}\n        >\n          New\n        </Button>\n      </div>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Name</TableCell>\n              {/*<TableCell align=\"right\">*/}\n              {/*  트래픽 할당*/}\n              {/*  <br />*/}\n              {/*  (그룹별 트래픽 배분)*/}\n              {/*</TableCell>*/}\n              <TableCell align=\"right\">Status</TableCell>\n              <TableCell align=\"right\">Created</TableCell>\n              <TableCell align=\"right\">Result</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row) => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                  <br />({`#${row.key}`})\n                </TableCell>\n                {/*<TableCell align=\"right\">*/}\n                {/*  {row.trafficAllocation}*/}\n                {/*  <br />({row.trafficGroup})*/}\n                {/*</TableCell>*/}\n                <TableCell align=\"right\">\n                  <ExperimentState type={row.status}>{row.status}</ExperimentState>\n                </TableCell>\n                <TableCell align=\"right\">{row.createdAt}</TableCell>\n                <TableCell align=\"right\">\n                  <Button variant={\"outlined\"} to={`/experiments/detail/${row.key}`} component={Link}>\n                    Detail\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  )\n}\n","import React from \"react\"\nimport {\n  Button,\n  createStyles,\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n} from \"@material-ui/core\"\nimport { Link } from \"react-router-dom\"\nimport pages from \"../index\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { Add as AddIcon, Edit } from \"@material-ui/icons\"\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    createButtonWrap: {\n      textAlign: \"right\",\n      marginBottom: \"10px\",\n    },\n    table: {\n      minWidth: 650,\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n  })\n)\n\nfunction createData(eventName: string, description: string, createdAt: string) {\n  return { eventName, description, createdAt }\n}\n\nconst rows = [\n  createData(\"Payment Complete\", \"Event when finishing payment procedure\", \"2020-5-31\"),\n  createData(\"Try CheckOut\", \"Event that clicking ‘CheckOut’ button\", \"2020-4-23\"),\n  createData(\"Cart PV\", \"Entering Cart Page\", \"2020-4-23\"),\n]\n\nexport default function Event() {\n  const classes = useStyles()\n  return (\n    <div className={classes.root}>\n      <Typography variant={\"h6\"}>Event</Typography>\n      <Typography variant={\"caption\"}>Create a event for tracking path of customers</Typography>\n      <div className={classes.createButtonWrap}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n          startIcon={<AddIcon />}\n          component={Link}\n          to={pages.eventCreation.path}\n        >\n          New\n        </Button>\n      </div>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Name</TableCell>\n              <TableCell align=\"right\">Created</TableCell>\n              <TableCell align=\"right\" />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row) => (\n              <TableRow key={row.eventName}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.eventName}\n                  <br />\n                  <span>{row.description}</span>\n                </TableCell>\n                <TableCell align=\"right\">{row.createdAt}</TableCell>\n                <TableCell align=\"right\">\n                  <IconButton aria-label=\"edit\" onClick={() => ({})}>\n                    <Edit />\n                  </IconButton>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  )\n}\n","import React, { useState } from \"react\"\nimport {\n  Button,\n  createStyles,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n} from \"@material-ui/core\"\nimport { Link } from \"react-router-dom\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { Edit, Delete, Add as AddIcon } from \"@material-ui/icons\"\nimport pages from \"../\"\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    createButtonWrap: {\n      textAlign: \"right\",\n      marginBottom: \"10px\",\n    },\n    table: {\n      minWidth: 650,\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n  })\n)\n\nfunction createData(\n  name: string,\n  key: string,\n  description: string,\n  measurementTarget: string,\n  measurementStandard: string,\n  createdAt: string\n) {\n  return { name, key, description, measurementTarget, measurementStandard, createdAt }\n}\n\nconst rows = [\n  createData(\n    \"Overall Payment Conversion\",\n    \"5521\",\n    \"Total # of Payment Complete / Total # of CheckOut PageView\",\n    \"Count\",\n    \"이벤트 기준\",\n    \"2020-5-31\"\n  ),\n  createData(\n    \"Buyer Conversion\",\n    \"1382\",\n    \"(Unique) # of Payment Complete / # of exposed customers\",\n    \"횟수\",\n    \"순 사용자 기준\",\n    \"2020-4-23\"\n  ),\n  createData(\"Cart PV\", \"1381\", \"Total # of Cart PageView\", \"횟수\", \"이벤트 기준\", \"2020-4-23\"),\n  createData(\n    \"GMV per Customer\",\n    \"1380\",\n    \"(Unique) Total GMV / # of exposed customers\",\n    \"Value\",\n    \"순 사용자 기준\",\n    \"2020-4-23\"\n  ),\n  createData(\"Average Order Value\", \"1379\", \"Total GMV / # of Payment Complete\", \"횟수\", \"순 사용자 기준\", \"2020-4-23\"),\n]\n\nexport default function Metric() {\n  const classes = useStyles()\n  const [openEdit, setOpenEdit] = useState(false)\n  const [openDelete, setOpenDelete] = useState(false)\n\n  const handleClickOpenEdit = () => setOpenEdit(true)\n  const handleCloseEdit = () => setOpenEdit(false)\n\n  const handleClickOpenDelete = () => setOpenDelete(true)\n  const handleCloseDelete = () => setOpenDelete(false)\n\n  return (\n    <div className={classes.root}>\n      <Typography variant={\"h6\"}>Metric</Typography>\n      <Typography variant={\"caption\"}>Create a metric for quantitative measurement</Typography>\n      <div className={classes.createButtonWrap}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n          startIcon={<AddIcon />}\n          component={Link}\n          to={pages.metricCreation.path}\n        >\n          New\n        </Button>\n      </div>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Name</TableCell>\n              <TableCell align=\"right\">Type</TableCell>\n              <TableCell align=\"right\">Property</TableCell>\n              <TableCell align=\"right\">Created</TableCell>\n              <TableCell align=\"right\" />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row) => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                  <br />\n                  <span>{row.description}</span>\n                </TableCell>\n                <TableCell align=\"right\">{row.measurementTarget}</TableCell>\n                <TableCell align=\"right\">{row.measurementStandard}</TableCell>\n                <TableCell align=\"right\">{row.createdAt}</TableCell>\n                <TableCell align=\"right\">\n                  <IconButton aria-label=\"edit\" onClick={handleClickOpenEdit}>\n                    <Edit />\n                  </IconButton>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <Dialog\n        open={openEdit}\n        onClose={handleCloseEdit}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"수정하기\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">수정하기 본문</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseEdit} color=\"default\">\n            취소\n          </Button>\n          <Button onClick={handleCloseEdit} color=\"primary\" autoFocus>\n            수정\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Dialog\n        open={openDelete}\n        onClose={handleCloseDelete}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"삭제하기\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">정말 삭제 하시겠습니까?</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDelete} color=\"default\">\n            취소\n          </Button>\n          <Button onClick={handleCloseDelete} color=\"secondary\" autoFocus>\n            삭제\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n","import React from \"react\"\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\"\nimport { Button, Step, StepLabel, Stepper, Typography } from \"@material-ui/core\"\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n    },\n    backButton: {\n      marginRight: theme.spacing(1),\n    },\n    instructions: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n  })\n)\n\nfunction getSteps() {\n  return [\"테스트 목표 정의(event, metric)\", \"SDK 연동 설정\", \"A/B Test 생성\"]\n}\n\nfunction getStepContent(stepIndex: number) {\n  switch (stepIndex) {\n    case 0:\n      return \"이벤트를 정의해보세요\"\n    case 1:\n      return \"SDK 연동 해보세요\"\n    case 2:\n      return \"A/B테스트 생성해보세요\"\n    default:\n      return \"Unknown stepIndex\"\n  }\n}\n\nexport default function Tutorial() {\n  const classes = useStyles()\n  const [activeStep, setActiveStep] = React.useState(0)\n  const steps = getSteps()\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1)\n  }\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1)\n  }\n\n  const handleReset = () => {\n    setActiveStep(0)\n  }\n\n  return (\n    <div className={classes.root}>\n      <Stepper activeStep={activeStep} alternativeLabel>\n        {steps.map((label) => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n      <div>\n        {activeStep === steps.length ? (\n          <div>\n            <Typography className={classes.instructions}>생성완료</Typography>\n            <Button onClick={handleReset}>Reset</Button>\n          </div>\n        ) : (\n          <div>\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\n            <div>\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.backButton}>\n                Back\n              </Button>\n              <Button variant=\"contained\" color=\"primary\" onClick={handleNext}>\n                {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\n              </Button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React, { useState } from \"react\"\nimport { RouteComponentProps } from \"react-router-dom\"\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\"\nimport { Button, Grid, Menu, MenuItem, Paper, Typography } from \"@material-ui/core\"\nimport { PlayArrow, Settings, Stop } from \"@material-ui/icons\"\nimport { ExperimentStatusType } from \"../../model/ExperimentStatusType\"\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      color: theme.palette.text.secondary,\n    },\n    buttonGroup: {\n      textAlign: \"right\",\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    success: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.success.main,\n      \"&:hover\": {\n        backgroundColor: theme.palette.success.dark,\n      },\n    },\n  })\n)\n\ninterface Props {\n  key: string\n}\n\nexport default function TestDetail({ match }: RouteComponentProps<Props>) {\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null)\n  const [status, setStatus] = useState<ExperimentStatusType>(\"READY\")\n  const isMenuOpen = Boolean(anchorEl)\n  const handleProfileMenuOpen = (e: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(e.currentTarget)\n  }\n  const handleMenuClose = () => {\n    setAnchorEl(null)\n  }\n  const start = () => setStatus(\"RUNNING\")\n  const pause = () => setStatus(\"READY\")\n\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={\"primary-search-account-menu\"}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Setting</MenuItem>\n      <MenuItem onClick={handleMenuClose}>Traffic Allocation</MenuItem>\n      <MenuItem onClick={handleMenuClose}>Whitelist</MenuItem>\n      <MenuItem onClick={handleMenuClose}>Complete (Select a winner)</MenuItem>\n    </Menu>\n  )\n  const classes = useStyles()\n  const { params } = match\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <Typography variant={\"h4\"}>Test Key: {`#${params.key}`}</Typography>\n            <div className={classes.buttonGroup}>\n              {status === \"READY\" ? (\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.success}\n                  startIcon={<PlayArrow />}\n                  onClick={start}\n                >\n                  Start\n                </Button>\n              ) : (\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  className={classes.button}\n                  startIcon={<Stop />}\n                  onClick={pause}\n                >\n                  Pause\n                </Button>\n              )}\n\n              <Button\n                variant=\"contained\"\n                color=\"default\"\n                className={classes.button}\n                startIcon={<Settings />}\n                onClick={handleProfileMenuOpen}\n              >\n                Edit\n              </Button>\n            </div>\n          </Paper>\n        </Grid>\n        <Grid item xs={6}>\n          <Paper className={classes.paper}>xs=6</Paper>\n        </Grid>\n        <Grid item xs={6}>\n          <Paper className={classes.paper}>xs=6</Paper>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>xs=3</Paper>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>xs=3</Paper>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>xs=3</Paper>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>xs=3</Paper>\n        </Grid>\n      </Grid>\n      {renderMenu}\n    </div>\n  )\n}\n","import React from \"react\"\nimport { Button, FormHelperText, Grid, OutlinedInput, Paper, Typography } from \"@material-ui/core\"\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\"\nimport { RouteComponentProps } from \"react-router-dom\"\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      color: theme.palette.text.secondary,\n    },\n    buttonGroup: {\n      textAlign: \"right\",\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    margin: {\n      margin: theme.spacing(1),\n    },\n    textField: {\n      width: \"25ch\",\n    },\n  })\n)\n\ninterface State {\n  amount: string\n  password: string\n  testName: string\n  testNameRange: number\n  showPassword: boolean\n}\n\nexport default function ExperimentsCreation(props: RouteComponentProps) {\n  const classes = useStyles()\n  const [values, setValues] = React.useState<State>({\n    amount: \"\",\n    password: \"\",\n    testName: \"\",\n    testNameRange: 0,\n    showPassword: false,\n  })\n  const handleChange = (prop: keyof State) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValues({ ...values, [prop]: event.target.value })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <Typography variant={\"h4\"}>A/B 테스트 생성</Typography>\n            <Grid container spacing={3}>\n              <Grid item xs={3}>\n                <Typography variant={\"h6\"}>A/B 테스트명</Typography>\n              </Grid>\n              <Grid item xs={9}>\n                <OutlinedInput\n                  fullWidth={true}\n                  id=\"outlined-adornment-test-name\"\n                  value={values.testName}\n                  onChange={handleChange(\"testName\")}\n                  aria-describedby=\"outlined-test-name-helper-text\"\n                  inputProps={{\n                    \"aria-label\": \"test-name\",\n                  }}\n                  labelWidth={0}\n                />\n                <FormHelperText id=\"outlined-test-name-helper-text\">{`${values.testName.length}/200`}</FormHelperText>\n              </Grid>\n            </Grid>\n            <div className={classes.buttonGroup}>\n              <Button\n                variant=\"contained\"\n                color=\"default\"\n                className={classes.button}\n                onClick={() => {\n                  console.log(props)\n                  // @ts-ignore\n                  props.history.goBack()\n                }}\n              >\n                Cancel\n              </Button>\n              <Button variant=\"contained\" color=\"primary\" className={classes.button}>\n                Create\n              </Button>\n            </div>\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from \"react\"\nimport { Button, FormHelperText, Grid, OutlinedInput, Paper, Typography } from \"@material-ui/core\"\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\"\nimport { RouteComponentProps } from \"react-router-dom\"\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      color: theme.palette.text.secondary,\n    },\n    buttonGroup: {\n      textAlign: \"right\",\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    margin: {\n      margin: theme.spacing(1),\n    },\n    textField: {\n      width: \"25ch\",\n    },\n  })\n)\n\ninterface State {\n  metricName: string\n}\n\nexport default function MetricCreation(props: RouteComponentProps) {\n  const classes = useStyles()\n  const [values, setValues] = React.useState<State>({\n    metricName: \"\",\n  })\n  const handleChange = (prop: keyof State) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValues({ ...values, [prop]: event.target.value })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <Typography variant={\"h4\"}>지표 생성하기</Typography>\n            <Grid container spacing={3}>\n              <Grid item xs={3}>\n                <Typography variant={\"h6\"}>지표명</Typography>\n              </Grid>\n              <Grid item xs={9}>\n                <OutlinedInput\n                  fullWidth={true}\n                  id=\"outlined-adornment-test-name\"\n                  value={values.metricName}\n                  onChange={handleChange(\"metricName\")}\n                  aria-describedby=\"outlined-test-name-helper-text\"\n                  inputProps={{\n                    \"aria-label\": \"test-name\",\n                  }}\n                  labelWidth={0}\n                />\n                <FormHelperText id=\"outlined-test-name-helper-text\">{`${values.metricName.length}/50`}</FormHelperText>\n              </Grid>\n            </Grid>\n            <div className={classes.buttonGroup}>\n              <Button\n                variant=\"contained\"\n                color=\"default\"\n                className={classes.button}\n                onClick={() => {\n                  // @ts-ignore\n                  props.history.goBack()\n                }}\n              >\n                Cancel\n              </Button>\n              <Button variant=\"contained\" color=\"primary\" className={classes.button}>\n                Create\n              </Button>\n            </div>\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from \"react\"\nimport { Button, FormHelperText, Grid, OutlinedInput, Paper, Typography } from \"@material-ui/core\"\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\"\nimport { RouteComponentProps } from \"react-router-dom\"\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      color: theme.palette.text.secondary,\n    },\n    buttonGroup: {\n      textAlign: \"right\",\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    margin: {\n      margin: theme.spacing(1),\n    },\n    textField: {\n      width: \"25ch\",\n    },\n  })\n)\n\ninterface State {\n  eventName: string\n}\n\nexport default function MetricCreation(props: RouteComponentProps) {\n  const classes = useStyles()\n  const [values, setValues] = React.useState<State>({\n    eventName: \"\",\n  })\n  const handleChange = (prop: keyof State) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValues({ ...values, [prop]: event.target.value })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <Typography variant={\"h4\"}>이벤트 생성하기</Typography>\n            <Grid container spacing={3}>\n              <Grid item xs={3}>\n                <Typography variant={\"h6\"}>이벤트명</Typography>\n              </Grid>\n              <Grid item xs={9}>\n                <OutlinedInput\n                  fullWidth={true}\n                  id=\"outlined-adornment-test-name\"\n                  value={values.eventName}\n                  onChange={handleChange(\"eventName\")}\n                  aria-describedby=\"outlined-test-name-helper-text\"\n                  inputProps={{\n                    \"aria-label\": \"test-name\",\n                  }}\n                  labelWidth={0}\n                />\n                <FormHelperText id=\"outlined-test-name-helper-text\">{`${values.eventName.length}/50`}</FormHelperText>\n              </Grid>\n            </Grid>\n            <div className={classes.buttonGroup}>\n              <Button\n                variant=\"contained\"\n                color=\"default\"\n                className={classes.button}\n                onClick={() => {\n                  // @ts-ignore\n                  props.history.goBack()\n                }}\n              >\n                Cancel\n              </Button>\n              <Button variant=\"contained\" color=\"primary\" className={classes.button}>\n                Create\n              </Button>\n            </div>\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React, { ComponentType } from \"react\"\nimport {\n  LiveTv as LiveTvIcon,\n  Person as PersonIcon,\n  DeveloperMode as DeveloperModeIcon,\n  Assessment as AssessmentIcon,\n  Event as EventIcon,\n  Settings as SettingIcon,\n  Assignment as AssignmentIcon,\n} from \"@material-ui/icons\"\nimport Experiment from \"./Experiment/Experiment\"\nimport Account from \"./Account/Account\"\nimport Event from \"./Event/Event\"\nimport Metric from \"./Metric/Metric\"\nimport Setting from \"./Setting/Setting\"\nimport Tutorial from \"./Tutorial/Tutorial\"\nimport Developer from \"./Developer/Developer\"\nimport ExperimentDetail from \"./Experiment/TestDetail\"\nimport ExperimentsCreation from \"./Experiment/ExperimentsCreation\"\nimport MetricCreation from \"./Metric/MetricCreation\"\nimport EventCreation from \"./Event/EventCreation\"\nimport Login from \"./Login/Login\"\n\nexport class RoutingComponent<T> {\n  text: string\n  path: string\n  component: T\n  componentIcon: React.ComponentType\n  exact: boolean\n\n  constructor(text: string, path: string, component: T, componentIcon: React.ComponentType, exact = false) {\n    this.text = text\n    this.path = path\n    this.component = component\n    this.componentIcon = componentIcon\n    this.exact = exact\n  }\n}\n\nexport interface RoutingComponentMap<T> {\n  [key: string]: RoutingComponent<T>\n}\nconst routingComponent = {\n  experiment: new RoutingComponent(\"Experiment\", \"/\", Experiment, AssignmentIcon, true),\n  experimentDetail: new RoutingComponent(\n    \"ExperimentDetail\",\n    \"/experiments/detail/:key\",\n    ExperimentDetail,\n    AssignmentIcon\n  ),\n  ExperimentsCreation: new RoutingComponent(\n    \"ExperimentsCreation\",\n    \"/experiments/creation\",\n    ExperimentsCreation,\n    AssignmentIcon\n  ),\n  metric: new RoutingComponent(\"Metric\", \"/metrics\", Metric, AssessmentIcon, true),\n  metricCreation: new RoutingComponent(\"MetricCreation\", \"/metrics/creation\", MetricCreation, AssessmentIcon),\n  event: new RoutingComponent(\"Event\", \"/events\", Event, EventIcon, true),\n  eventCreation: new RoutingComponent(\"Event\", \"/events/creation\", EventCreation, EventIcon),\n  setting: new RoutingComponent(\"Setting\", \"/settings\", Setting, SettingIcon),\n  account: new RoutingComponent(\"Account\", \"/accounts\", Account, PersonIcon),\n  tutorial: new RoutingComponent(\"Tutorial\", \"/tutorials\", Tutorial, LiveTvIcon),\n  developers: new RoutingComponent(\"Developers\", \"/developers\", Developer, DeveloperModeIcon),\n  login: new RoutingComponent(\"Login\", \"/login\", Login, DeveloperModeIcon),\n}\nexport default routingComponent\n","import React from \"react\"\n\nexport default function Setting() {\n  return <div>Setting</div>\n}\n","import React from \"react\"\n\nexport default function Account() {\n  return <div>Account</div>\n}\n","import React from \"react\"\n\nexport default function Developer() {\n  return <div>Developer</div>\n}\n","import React from \"react\"\n\ninterface Props {}\n\nexport default function Login(props: Props) {\n  return <div>Login</div>\n}\n","import React, { PropsWithChildren, useState } from \"react\"\nimport { FormattedMessage } from \"react-intl\"\nimport {\n  AppBar,\n  createStyles,\n  CssBaseline,\n  Divider,\n  Drawer,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Toolbar,\n  Typography,\n  IconButton,\n  Menu,\n  MenuItem,\n} from \"@material-ui/core\"\nimport pages, { RoutingComponent } from \"../pages\"\nimport { Link } from \"react-router-dom\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { AccountCircle } from \"@material-ui/icons\"\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n    },\n    grow: {\n      flexGrow: 1,\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    drawerContainer: {\n      overflow: \"auto\",\n    },\n    sectionDesktop: {\n      [theme.breakpoints.up(\"md\")]: {\n        display: \"flex\",\n      },\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n  })\n)\n\nfunction SideBarListItem({\n  routingComponent,\n  disabled,\n  selected,\n}: {\n  routingComponent: RoutingComponent<React.ComponentType>\n  disabled?: boolean\n  selected?: boolean\n}) {\n  const Icon = routingComponent.componentIcon\n  return (\n    <ListItem selected={selected} disabled={disabled} button component={Link} to={routingComponent.path}>\n      <ListItemIcon>\n        <Icon />\n      </ListItemIcon>\n      <ListItemText primary={routingComponent.text} />\n    </ListItem>\n  )\n}\n\nexport default function Root({ children }: PropsWithChildren<any>) {\n  const classes = useStyles()\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null)\n  const isMenuOpen = Boolean(anchorEl)\n  const handleProfileMenuOpen = (e: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(e.currentTarget)\n  }\n  const handleMenuClose = () => {\n    setAnchorEl(null)\n  }\n  const isActive = (value: string): boolean => {\n    return window.location.pathname === value\n  }\n\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={\"primary-search-account-menu\"}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      {/*<MenuItem onClick={handleMenuClose} component={Link} to={\"/account\"}>*/}\n      {/*  <FormattedMessage id=\"account\" />*/}\n      {/*</MenuItem>*/}\n      <MenuItem onClick={handleMenuClose}>\n        <FormattedMessage id=\"logout\" />\n      </MenuItem>\n    </Menu>\n  )\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" noWrap>\n            <ListItem button component={Link} to={pages.experiment.path}>\n              <FormattedMessage id={\"name\"} />\n            </ListItem>\n          </Typography>\n          <div className={classes.grow} />\n          <IconButton edge=\"end\" aria-label=\"account of current user\" color=\"inherit\" onClick={handleProfileMenuOpen}>\n            <AccountCircle />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      {renderMenu}\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <Toolbar />\n        <div className={classes.drawerContainer}>\n          <div>Default Project</div>\n\n          <SideBarListItem selected={isActive(pages.experiment.path)} routingComponent={pages.experiment} />\n          <SideBarListItem selected={isActive(pages.metric.path)} routingComponent={pages.metric} />\n          <SideBarListItem selected={isActive(pages.event.path)} routingComponent={pages.event} />\n          <SideBarListItem selected={isActive(pages.setting.path)} routingComponent={pages.setting} />\n          <SideBarListItem selected={isActive(pages.account.path)} routingComponent={pages.account} disabled={true} />\n          <Divider />\n          <SideBarListItem selected={isActive(pages.tutorial.path)} routingComponent={pages.tutorial} />\n          <SideBarListItem selected={isActive(pages.developers.path)} routingComponent={pages.developers} />\n        </div>\n      </Drawer>\n      <main className={classes.content}>\n        <Toolbar />\n        <>{children}</>\n      </main>\n    </div>\n  )\n}\n","import React from \"react\"\nimport \"./App.css\"\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport { IntlProvider } from \"react-intl\"\nimport { en } from \"./locale\"\nimport pages from \"./pages\"\nimport Root from \"./layouts/Root\"\n\nconst defaultLang = \"en\"\n\nfunction App() {\n  return (\n    <IntlProvider locale={defaultLang} messages={en}>\n      <Router>\n        <Switch>\n          <Root>\n            {Object.values(pages).map((page, i) => {\n              return <Route path={page.path} exact={page.exact} component={page.component} key={i} />\n            })}\n          </Root>\n        </Switch>\n      </Router>\n    </IntlProvider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\")\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}