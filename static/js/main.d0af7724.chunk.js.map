{"version":3,"sources":["locale/en.ts","pages/Experiment/ExperimentState.tsx","atoms/EnvProfile.ts","pages/Experiment/Experiment.tsx","pages/Event/Event.tsx","pages/Metric/Metric.tsx","pages/Tutorial/Tutorial.tsx","pages/Experiment/TestDetail.tsx","pages/Experiment/ExperimentsCreation.tsx","pages/Metric/MetricCreation.tsx","pages/Event/EventCreation.tsx","pages/Login/Login.tsx","pages/index.ts","pages/Home/Home.tsx","pages/Setting/Setting.tsx","pages/Account/Account.tsx","pages/Developer/Developer.tsx","layouts/LeftSideBar.tsx","layouts/Header.tsx","layouts/MainFrame.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["name","account","logout","experiment_name","experiment_status","experiment_created","experiment_result","ExperimentState","type","ExperimentStateReady","ExperimentStateRunning","ExperimentStatePaused","ExperimentStateStopped","useStyles","makeStyles","theme","createStyles","status","typography","button","width","padding","spacing","textAlign","color","palette","common","white","ready","backgroundColor","grey","A100","running","success","light","paused","stopped","info","classes","Chip","label","className","envProfileState","atom","key","default","test","window","location","pathname","root","flexGrow","createButtonWrap","marginBottom","margin","table","minWidth","createData","trafficAllocation","trafficGroup","createdAt","rows","eventName","description","measurementTarget","measurementStandard","backButton","marginRight","instructions","marginTop","paper","text","secondary","buttonGroup","main","dark","textField","display","RoutingComponent","path","component","componentIcon","exact","this","routingComponent","home","props","history","replace","AssignmentIcon","experiment","env","useRecoilValue","Typography","variant","Button","startIcon","Add","Link","to","TableContainer","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","row","scope","experimentDetail","match","useState","anchorEl","setAnchorEl","setStatus","isMenuOpen","Boolean","handleMenuClose","renderMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","params","Grid","container","item","xs","PlayArrow","Stop","Settings","e","currentTarget","ExperimentsCreation","prop","React","amount","password","testName","testNameRange","showPassword","values","setValues","OutlinedInput","fullWidth","value","onChange","event","target","aria-describedby","inputProps","labelWidth","FormHelperText","length","console","log","goBack","metric","openEdit","setOpenEdit","openDelete","setOpenDelete","handleClickOpenEdit","handleCloseEdit","handleCloseDelete","IconButton","Edit","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","AssessmentIcon","metricCreation","metricName","EventIcon","eventCreation","setting","SettingIcon","PersonIcon","tutorial","activeStep","setActiveStep","steps","Stepper","alternativeLabel","Step","StepLabel","stepIndex","getStepContent","disabled","prevActiveStep","LiveTvIcon","developers","DeveloperModeIcon","login","drawer","flexShrink","drawerPaper","drawerContainer","overflow","sectionDesktop","breakpoints","up","content","LeftSideBar","useRecoilState","envProfile","isActive","Drawer","Toolbar","href","SideBarListItem","selected","pages","Divider","Icon","ListItem","ListItemIcon","ListItemText","primary","grow","appBar","zIndex","Header","AppBar","position","noWrap","edge","AccountCircle","MainFrame","CssBaseline","children","App","locale","messages","en","Object","page","i","render","Component","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d0af7724.chunk.js","sourcesContent":["export default {\n  name: \"Hackle.io\",\n  account: \"Account\",\n  logout: \"logout\",\n  experiment_name: \"Name\",\n  experiment_status: \"Status\",\n  experiment_created: \"Created\",\n  experiment_result: \"Result\",\n}\n","import React, { PropsWithChildren } from \"react\"\nimport { Chip, createStyles } from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { ExperimentStatusType } from \"../../model/ExperimentStatusType\"\n\ninterface Props {\n  type: ExperimentStatusType\n}\n\nexport default function ExperimentState({ type }: PropsWithChildren<Props>) {\n  switch (type) {\n    case \"READY\":\n      return <ExperimentStateReady />\n    case \"RUNNING\":\n      return <ExperimentStateRunning />\n    case \"PAUSED\":\n      return <ExperimentStatePaused />\n    case \"STOPPED\":\n      return <ExperimentStateStopped />\n  }\n}\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    status: {\n      ...theme.typography.button,\n      width: \"110px\",\n      padding: theme.spacing(1),\n      textAlign: \"center\",\n      color: theme.palette.common.white,\n    },\n    ready: {\n      backgroundColor: theme.palette.grey.A100,\n    },\n    running: {\n      backgroundColor: theme.palette.success.light,\n    },\n    paused: {\n      backgroundColor: \"pink\",\n    },\n    stopped: {\n      backgroundColor: theme.palette.info.light,\n    },\n  })\n)\nexport function ExperimentStateReady() {\n  const classes = useStyles()\n  return <Chip label=\"Ready\" className={`${classes.status} ${classes.ready}`} />\n}\nexport function ExperimentStateRunning() {\n  const classes = useStyles()\n  return <Chip label=\"Running\" className={`${classes.status} ${classes.running}`} />\n}\nexport function ExperimentStatePaused() {\n  const classes = useStyles()\n  return <Chip label=\"Paused\" className={`${classes.status} ${classes.paused}`} />\n}\nexport function ExperimentStateStopped() {\n  const classes = useStyles()\n  return <Chip label=\"STOPPED\" className={`${classes.status} ${classes.stopped}`} />\n}\n","import { atom } from \"recoil\"\n\nexport const envProfileState = atom<\"production\" | \"development\">({\n  key: \"envProfile\",\n  default: /development/.test(window.location.pathname) ? \"development\" : \"production\",\n})\n","import React from \"react\"\nimport {\n  Button,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n} from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { Link } from \"react-router-dom\"\nimport pages from \"../\"\nimport { Add as AddIcon } from \"@material-ui/icons\"\nimport ExperimentState from \"./ExperimentState\"\nimport { ExperimentStatusType } from \"../../model/ExperimentStatusType\"\nimport MainFrame from \"../../layouts/MainFrame\"\nimport { useRecoilValue } from \"recoil/dist\"\nimport { envProfileState } from \"../../atoms/EnvProfile\"\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  createButtonWrap: {\n    textAlign: \"right\",\n    marginBottom: \"10px\",\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  table: {\n    minWidth: 650,\n  },\n}))\n\nfunction createData(\n  name: string,\n  key: string,\n  trafficAllocation: number,\n  trafficGroup: string,\n  status: ExperimentStatusType,\n  createdAt: string\n) {\n  return { name, key, trafficAllocation, trafficGroup, status, createdAt }\n}\n\nconst rows = [\n  createData(\"Test Name Example\", \"5521\", 30, \"50/50\", \"READY\", \"2020-5-31\"),\n  createData(\"[2020.Q3] SRP 개편 2차 테스트\", \"1382\", 60, \"34/33/33\", \"RUNNING\", \"2020-5-31\"),\n  createData(\"[2020.Q3] SRP 개편 3차 테스트\", \"1382\", 60, \"34/33/33\", \"PAUSED\", \"2020-5-31\"),\n  createData(\"[2020.Q3] SRP 개편 4차 테스트\", \"1382\", 60, \"34/33/33\", \"STOPPED\", \"2020-5-31\"),\n]\n\nexport default function Experiment() {\n  const classes = useStyles()\n  const env = useRecoilValue(envProfileState)\n  return (\n    <div className={classes.root}>\n      <Typography variant={\"h6\"}>Experiment</Typography>\n      <Typography variant={\"caption\"}>Create an experiment for a/b testing</Typography>\n      <div className={classes.createButtonWrap}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n          startIcon={<AddIcon />}\n          component={Link}\n          to={`/default/${env}/experiments/creation`}\n        >\n          New\n        </Button>\n      </div>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Name</TableCell>\n              {/*<TableCell align=\"right\">*/}\n              {/*  트래픽 할당*/}\n              {/*  <br />*/}\n              {/*  (그룹별 트래픽 배분)*/}\n              {/*</TableCell>*/}\n              <TableCell align=\"right\">Status</TableCell>\n              <TableCell align=\"right\">Created</TableCell>\n              <TableCell align=\"right\">Result</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row) => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                  <br />({`#${row.key}`})\n                </TableCell>\n                {/*<TableCell align=\"right\">*/}\n                {/*  {row.trafficAllocation}*/}\n                {/*  <br />({row.trafficGroup})*/}\n                {/*</TableCell>*/}\n                <TableCell align=\"right\">\n                  <ExperimentState type={row.status}>{row.status}</ExperimentState>\n                </TableCell>\n                <TableCell align=\"right\">{row.createdAt}</TableCell>\n                <TableCell align=\"right\">\n                  <Button variant={\"outlined\"} to={`experiments/detail/${row.key}`} component={Link}>\n                    Detail\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  )\n}\n","import React from \"react\"\nimport {\n  Button,\n  createStyles,\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n} from \"@material-ui/core\"\nimport { Link } from \"react-router-dom\"\nimport pages from \"../index\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { Add as AddIcon, Edit } from \"@material-ui/icons\"\nimport { useRecoilValue } from \"recoil/dist\"\nimport { envProfileState } from \"../../atoms/EnvProfile\"\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    createButtonWrap: {\n      textAlign: \"right\",\n      marginBottom: \"10px\",\n    },\n    table: {\n      minWidth: 650,\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n  })\n)\n\nfunction createData(eventName: string, description: string, createdAt: string) {\n  return { eventName, description, createdAt }\n}\n\nconst rows = [\n  createData(\"Payment Complete\", \"Event when finishing payment procedure\", \"2020-5-31\"),\n  createData(\"Try CheckOut\", \"Event that clicking ‘CheckOut’ button\", \"2020-4-23\"),\n  createData(\"Cart PV\", \"Entering Cart Page\", \"2020-4-23\"),\n]\n\nexport default function Event() {\n  const classes = useStyles()\n  const env = useRecoilValue(envProfileState)\n  return (\n    <div className={classes.root}>\n      <Typography variant={\"h6\"}>Event</Typography>\n      <Typography variant={\"caption\"}>Create a event for tracking path of customers</Typography>\n      <div className={classes.createButtonWrap}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n          startIcon={<AddIcon />}\n          component={Link}\n          to={`/default/${env}/events/creation`}\n        >\n          New\n        </Button>\n      </div>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Name</TableCell>\n              <TableCell align=\"right\">Created</TableCell>\n              <TableCell align=\"right\" />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row) => (\n              <TableRow key={row.eventName}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.eventName}\n                  <br />\n                  <span>{row.description}</span>\n                </TableCell>\n                <TableCell align=\"right\">{row.createdAt}</TableCell>\n                <TableCell align=\"right\">\n                  <IconButton aria-label=\"edit\" onClick={() => ({})}>\n                    <Edit />\n                  </IconButton>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  )\n}\n","import React, { useState } from \"react\"\nimport {\n  Button,\n  createStyles,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n} from \"@material-ui/core\"\nimport { Link } from \"react-router-dom\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { Edit, Add as AddIcon } from \"@material-ui/icons\"\nimport pages from \"../\"\nimport MainFrame from \"../../layouts/MainFrame\"\nimport { useRecoilValue } from \"recoil/dist\"\nimport { envProfileState } from \"../../atoms/EnvProfile\"\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    createButtonWrap: {\n      textAlign: \"right\",\n      marginBottom: \"10px\",\n    },\n    table: {\n      minWidth: 650,\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n  })\n)\n\nfunction createData(\n  name: string,\n  key: string,\n  description: string,\n  measurementTarget: string,\n  measurementStandard: string,\n  createdAt: string\n) {\n  return { name, key, description, measurementTarget, measurementStandard, createdAt }\n}\n\nconst rows = [\n  createData(\n    \"Overall Payment Conversion\",\n    \"5521\",\n    \"Total # of Payment Complete / Total # of CheckOut PageView\",\n    \"Count\",\n    \"이벤트 기준\",\n    \"2020-5-31\"\n  ),\n  createData(\n    \"Buyer Conversion\",\n    \"1382\",\n    \"(Unique) # of Payment Complete / # of exposed customers\",\n    \"횟수\",\n    \"순 사용자 기준\",\n    \"2020-4-23\"\n  ),\n  createData(\"Cart PV\", \"1381\", \"Total # of Cart PageView\", \"횟수\", \"이벤트 기준\", \"2020-4-23\"),\n  createData(\n    \"GMV per Customer\",\n    \"1380\",\n    \"(Unique) Total GMV / # of exposed customers\",\n    \"Value\",\n    \"순 사용자 기준\",\n    \"2020-4-23\"\n  ),\n  createData(\"Average Order Value\", \"1379\", \"Total GMV / # of Payment Complete\", \"횟수\", \"순 사용자 기준\", \"2020-4-23\"),\n]\n\nexport default function Metric() {\n  const classes = useStyles()\n  const env = useRecoilValue(envProfileState)\n  const [openEdit, setOpenEdit] = useState(false)\n  const [openDelete, setOpenDelete] = useState(false)\n\n  const handleClickOpenEdit = () => setOpenEdit(true)\n  const handleCloseEdit = () => setOpenEdit(false)\n\n  const handleClickOpenDelete = () => setOpenDelete(true)\n  const handleCloseDelete = () => setOpenDelete(false)\n\n  return (\n    <div className={classes.root}>\n      <Typography variant={\"h6\"}>Metric</Typography>\n      <Typography variant={\"caption\"}>Create a metric for quantitative measurement</Typography>\n      <div className={classes.createButtonWrap}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n          startIcon={<AddIcon />}\n          component={Link}\n          to={`/default/${env}/metrics/creation`}\n        >\n          New\n        </Button>\n      </div>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Name</TableCell>\n              <TableCell align=\"right\">Type</TableCell>\n              <TableCell align=\"right\">Property</TableCell>\n              <TableCell align=\"right\">Created</TableCell>\n              <TableCell align=\"right\" />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row) => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                  <br />\n                  <span>{row.description}</span>\n                </TableCell>\n                <TableCell align=\"right\">{row.measurementTarget}</TableCell>\n                <TableCell align=\"right\">{row.measurementStandard}</TableCell>\n                <TableCell align=\"right\">{row.createdAt}</TableCell>\n                <TableCell align=\"right\">\n                  <IconButton aria-label=\"edit\" onClick={handleClickOpenEdit}>\n                    <Edit />\n                  </IconButton>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <Dialog\n        open={openEdit}\n        onClose={handleCloseEdit}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"수정하기\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">수정하기 본문</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseEdit} color=\"default\">\n            취소\n          </Button>\n          <Button onClick={handleCloseEdit} color=\"primary\" autoFocus>\n            수정\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Dialog\n        open={openDelete}\n        onClose={handleCloseDelete}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"삭제하기\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">정말 삭제 하시겠습니까?</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDelete} color=\"default\">\n            취소\n          </Button>\n          <Button onClick={handleCloseDelete} color=\"secondary\" autoFocus>\n            삭제\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n","import React from \"react\"\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\"\nimport { Button, Step, StepLabel, Stepper, Typography } from \"@material-ui/core\"\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n    },\n    backButton: {\n      marginRight: theme.spacing(1),\n    },\n    instructions: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n  })\n)\n\nfunction getSteps() {\n  return [\"테스트 목표 정의(event, metric)\", \"SDK 연동 설정\", \"A/B Test 생성\"]\n}\n\nfunction getStepContent(stepIndex: number) {\n  switch (stepIndex) {\n    case 0:\n      return \"이벤트를 정의해보세요\"\n    case 1:\n      return \"SDK 연동 해보세요\"\n    case 2:\n      return \"A/B테스트 생성해보세요\"\n    default:\n      return \"Unknown stepIndex\"\n  }\n}\n\nexport default function Tutorial() {\n  const classes = useStyles()\n  const [activeStep, setActiveStep] = React.useState(0)\n  const steps = getSteps()\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1)\n  }\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1)\n  }\n\n  const handleReset = () => {\n    setActiveStep(0)\n  }\n\n  return (\n    <div className={classes.root}>\n      <Stepper activeStep={activeStep} alternativeLabel>\n        {steps.map((label) => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n      <div>\n        {activeStep === steps.length ? (\n          <div>\n            <Typography className={classes.instructions}>생성완료</Typography>\n            <Button onClick={handleReset}>Reset</Button>\n          </div>\n        ) : (\n          <div>\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\n            <div>\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.backButton}>\n                Back\n              </Button>\n              <Button variant=\"contained\" color=\"primary\" onClick={handleNext}>\n                {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\n              </Button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React, { useState } from \"react\"\nimport { RouteComponentProps } from \"react-router-dom\"\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\"\nimport { Button, Grid, Menu, MenuItem, Paper, Typography } from \"@material-ui/core\"\nimport { PlayArrow, Settings, Stop } from \"@material-ui/icons\"\nimport { ExperimentStatusType } from \"../../model/ExperimentStatusType\"\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      color: theme.palette.text.secondary,\n    },\n    buttonGroup: {\n      textAlign: \"right\",\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    success: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.success.main,\n      \"&:hover\": {\n        backgroundColor: theme.palette.success.dark,\n      },\n    },\n  })\n)\n\ninterface Props {\n  key: string\n}\n\nexport default function TestDetail({ match }: RouteComponentProps<Props>) {\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null)\n  const [status, setStatus] = useState<ExperimentStatusType>(\"READY\")\n  const isMenuOpen = Boolean(anchorEl)\n  const handleProfileMenuOpen = (e: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(e.currentTarget)\n  }\n  const handleMenuClose = () => {\n    setAnchorEl(null)\n  }\n  const start = () => setStatus(\"RUNNING\")\n  const pause = () => setStatus(\"READY\")\n\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={\"primary-search-account-menu\"}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Setting</MenuItem>\n      <MenuItem onClick={handleMenuClose}>Traffic Allocation</MenuItem>\n      <MenuItem onClick={handleMenuClose}>Whitelist</MenuItem>\n      <MenuItem onClick={handleMenuClose}>Complete (Select a winner)</MenuItem>\n    </Menu>\n  )\n  const classes = useStyles()\n  const { params } = match\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <Typography variant={\"h4\"}>Test Key: {`#${params.key}`}</Typography>\n            <div className={classes.buttonGroup}>\n              {status === \"READY\" ? (\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.success}\n                  startIcon={<PlayArrow />}\n                  onClick={start}\n                >\n                  Start\n                </Button>\n              ) : (\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  className={classes.button}\n                  startIcon={<Stop />}\n                  onClick={pause}\n                >\n                  Pause\n                </Button>\n              )}\n\n              <Button\n                variant=\"contained\"\n                color=\"default\"\n                className={classes.button}\n                startIcon={<Settings />}\n                onClick={handleProfileMenuOpen}\n              >\n                Edit\n              </Button>\n            </div>\n          </Paper>\n        </Grid>\n        <Grid item xs={6}>\n          <Paper className={classes.paper}>xs=6</Paper>\n        </Grid>\n        <Grid item xs={6}>\n          <Paper className={classes.paper}>xs=6</Paper>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>xs=3</Paper>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>xs=3</Paper>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>xs=3</Paper>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>xs=3</Paper>\n        </Grid>\n      </Grid>\n      {renderMenu}\n    </div>\n  )\n}\n","import React from \"react\"\nimport { Button, FormHelperText, Grid, OutlinedInput, Paper, Typography } from \"@material-ui/core\"\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\"\nimport { RouteComponentProps } from \"react-router-dom\"\nimport { useRecoilValue } from \"recoil/dist\"\nimport { envProfileState } from \"../../atoms/EnvProfile\"\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      color: theme.palette.text.secondary,\n    },\n    buttonGroup: {\n      textAlign: \"right\",\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    margin: {\n      margin: theme.spacing(1),\n    },\n    textField: {\n      width: \"25ch\",\n    },\n  })\n)\n\ninterface State {\n  amount: string\n  password: string\n  testName: string\n  testNameRange: number\n  showPassword: boolean\n}\n\nexport default function ExperimentsCreation(props: RouteComponentProps) {\n  const classes = useStyles()\n  const env = useRecoilValue(envProfileState)\n  const [values, setValues] = React.useState<State>({\n    amount: \"\",\n    password: \"\",\n    testName: \"\",\n    testNameRange: 0,\n    showPassword: false,\n  })\n  const handleChange = (prop: keyof State) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValues({ ...values, [prop]: event.target.value })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <Typography variant={\"h4\"}>A/B 테스트 생성 {env}</Typography>\n            <Grid container spacing={3}>\n              <Grid item xs={3}>\n                <Typography variant={\"h6\"}>A/B 테스트명</Typography>\n              </Grid>\n              <Grid item xs={9}>\n                <OutlinedInput\n                  fullWidth={true}\n                  id=\"outlined-adornment-test-name\"\n                  value={values.testName}\n                  onChange={handleChange(\"testName\")}\n                  aria-describedby=\"outlined-test-name-helper-text\"\n                  inputProps={{\n                    \"aria-label\": \"test-name\",\n                  }}\n                  labelWidth={0}\n                />\n                <FormHelperText id=\"outlined-test-name-helper-text\">{`${values.testName.length}/200`}</FormHelperText>\n              </Grid>\n            </Grid>\n            <div className={classes.buttonGroup}>\n              <Button\n                variant=\"contained\"\n                color=\"default\"\n                className={classes.button}\n                onClick={() => {\n                  console.log(props)\n                  // @ts-ignore\n                  props.history.goBack()\n                }}\n              >\n                Cancel\n              </Button>\n              <Button variant=\"contained\" color=\"primary\" className={classes.button}>\n                Create\n              </Button>\n            </div>\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from \"react\"\nimport { Button, FormHelperText, Grid, OutlinedInput, Paper, Typography } from \"@material-ui/core\"\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\"\nimport { RouteComponentProps } from \"react-router-dom\"\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      color: theme.palette.text.secondary,\n    },\n    buttonGroup: {\n      textAlign: \"right\",\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    margin: {\n      margin: theme.spacing(1),\n    },\n    textField: {\n      width: \"25ch\",\n    },\n  })\n)\n\ninterface State {\n  metricName: string\n}\n\nexport default function MetricCreation(props: RouteComponentProps) {\n  const classes = useStyles()\n  const [values, setValues] = React.useState<State>({\n    metricName: \"\",\n  })\n  const handleChange = (prop: keyof State) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValues({ ...values, [prop]: event.target.value })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <Typography variant={\"h4\"}>지표 생성하기</Typography>\n            <Grid container spacing={3}>\n              <Grid item xs={3}>\n                <Typography variant={\"h6\"}>지표명</Typography>\n              </Grid>\n              <Grid item xs={9}>\n                <OutlinedInput\n                  fullWidth={true}\n                  id=\"outlined-adornment-test-name\"\n                  value={values.metricName}\n                  onChange={handleChange(\"metricName\")}\n                  aria-describedby=\"outlined-test-name-helper-text\"\n                  inputProps={{\n                    \"aria-label\": \"test-name\",\n                  }}\n                  labelWidth={0}\n                />\n                <FormHelperText id=\"outlined-test-name-helper-text\">{`${values.metricName.length}/50`}</FormHelperText>\n              </Grid>\n            </Grid>\n            <div className={classes.buttonGroup}>\n              <Button\n                variant=\"contained\"\n                color=\"default\"\n                className={classes.button}\n                onClick={() => {\n                  // @ts-ignore\n                  props.history.goBack()\n                }}\n              >\n                Cancel\n              </Button>\n              <Button variant=\"contained\" color=\"primary\" className={classes.button}>\n                Create\n              </Button>\n            </div>\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from \"react\"\nimport { Button, FormHelperText, Grid, OutlinedInput, Paper, Typography } from \"@material-ui/core\"\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\"\nimport { RouteComponentProps } from \"react-router-dom\"\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      color: theme.palette.text.secondary,\n    },\n    buttonGroup: {\n      textAlign: \"right\",\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    margin: {\n      margin: theme.spacing(1),\n    },\n    textField: {\n      width: \"25ch\",\n    },\n  })\n)\n\ninterface State {\n  eventName: string\n}\n\nexport default function MetricCreation(props: RouteComponentProps) {\n  const classes = useStyles()\n  const [values, setValues] = React.useState<State>({\n    eventName: \"\",\n  })\n  const handleChange = (prop: keyof State) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValues({ ...values, [prop]: event.target.value })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <Typography variant={\"h4\"}>이벤트 생성하기</Typography>\n            <Grid container spacing={3}>\n              <Grid item xs={3}>\n                <Typography variant={\"h6\"}>이벤트명</Typography>\n              </Grid>\n              <Grid item xs={9}>\n                <OutlinedInput\n                  fullWidth={true}\n                  id=\"outlined-adornment-test-name\"\n                  value={values.eventName}\n                  onChange={handleChange(\"eventName\")}\n                  aria-describedby=\"outlined-test-name-helper-text\"\n                  inputProps={{\n                    \"aria-label\": \"test-name\",\n                  }}\n                  labelWidth={0}\n                />\n                <FormHelperText id=\"outlined-test-name-helper-text\">{`${values.eventName.length}/50`}</FormHelperText>\n              </Grid>\n            </Grid>\n            <div className={classes.buttonGroup}>\n              <Button\n                variant=\"contained\"\n                color=\"default\"\n                className={classes.button}\n                onClick={() => {\n                  // @ts-ignore\n                  props.history.goBack()\n                }}\n              >\n                Cancel\n              </Button>\n              <Button variant=\"contained\" color=\"primary\" className={classes.button}>\n                Create\n              </Button>\n            </div>\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from \"react\"\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      display: \"flex\",\n    },\n  })\n)\ninterface Props {}\n\nexport default function Login(props: Props) {\n  const classes = useStyles()\n\n  return <div className={classes.root}>Login</div>\n}\n","import React, { ComponentType } from \"react\"\nimport {\n  LiveTv as LiveTvIcon,\n  Person as PersonIcon,\n  DeveloperMode as DeveloperModeIcon,\n  Assessment as AssessmentIcon,\n  Event as EventIcon,\n  Settings as SettingIcon,\n  Assignment as AssignmentIcon,\n} from \"@material-ui/icons\"\nimport Experiment from \"./Experiment/Experiment\"\nimport Account from \"./Account/Account\"\nimport Event from \"./Event/Event\"\nimport Metric from \"./Metric/Metric\"\nimport Setting from \"./Setting/Setting\"\nimport Tutorial from \"./Tutorial/Tutorial\"\nimport Developer from \"./Developer/Developer\"\nimport ExperimentDetail from \"./Experiment/TestDetail\"\nimport ExperimentsCreation from \"./Experiment/ExperimentsCreation\"\nimport MetricCreation from \"./Metric/MetricCreation\"\nimport EventCreation from \"./Event/EventCreation\"\nimport Login from \"./Login/Login\"\nimport Home from \"./Home/Home\"\n\nexport class RoutingComponent<T> {\n  text: string\n  path: string\n  component: T\n  componentIcon: React.ComponentType\n  exact: boolean\n\n  constructor(text: string, path: string, component: T, componentIcon: React.ComponentType, exact = false) {\n    this.text = text\n    this.path = path\n    this.component = component\n    this.componentIcon = componentIcon\n    this.exact = exact\n  }\n}\n\nexport interface RoutingComponentMap<T> {\n  [key: string]: RoutingComponent<T>\n}\nconst routingComponent = {\n  home: new RoutingComponent(\"Experiment\", \"/\", Home, AssignmentIcon, true),\n  experiment: new RoutingComponent(\"Experiment\", \"/:projectKey/:env/experiments\", Experiment, AssignmentIcon, true),\n  experimentDetail: new RoutingComponent(\n    \"ExperimentDetail\",\n    \"/:projectKey/:env/experiments/detail/:key\",\n    ExperimentDetail,\n    AssignmentIcon\n  ),\n  ExperimentsCreation: new RoutingComponent(\n    \"ExperimentsCreation\",\n    \"/:projectKey/:env/experiments/creation\",\n    ExperimentsCreation,\n    AssignmentIcon\n  ),\n  metric: new RoutingComponent(\"Metric\", \"/:projectKey/:env/metrics\", Metric, AssessmentIcon, true),\n  metricCreation: new RoutingComponent(\n    \"MetricCreation\",\n    \"/:projectKey/:env/metrics/creation\",\n    MetricCreation,\n    AssessmentIcon\n  ),\n  event: new RoutingComponent(\"Event\", \"/:projectKey/:env/events\", Event, EventIcon, true),\n  eventCreation: new RoutingComponent(\"Event\", \"/:projectKey/:env/events/creation\", EventCreation, EventIcon),\n  setting: new RoutingComponent(\"Setting\", \"/:projectKey/:env/settings\", Setting, SettingIcon),\n  account: new RoutingComponent(\"Account\", \"/:projectKey/:env/accounts\", Account, PersonIcon),\n  tutorial: new RoutingComponent(\"Tutorial\", \"/tutorials\", Tutorial, LiveTvIcon),\n  developers: new RoutingComponent(\"Developers\", \"/developers\", Developer, DeveloperModeIcon),\n}\nexport const login = new RoutingComponent(\"Login\", \"/login\", Login, DeveloperModeIcon)\nexport default routingComponent\n","import React from \"react\"\nimport { RouteComponentProps } from \"react-router-dom\"\n\ninterface Props {}\n\nexport default function Home(props: RouteComponentProps) {\n  props.history.replace(\"/default/production/experiments\")\n  return <div></div>\n}\n","import React from \"react\"\n\nexport default function Setting() {\n  return <div>Setting</div>\n}\n","import React from \"react\"\nimport MainFrame from \"../../layouts/MainFrame\"\n\nexport default function Account() {\n  return <div>Account</div>\n}\n","import React from \"react\"\nimport MainFrame from \"../../layouts/MainFrame\"\n\nexport default function Developer() {\n  return <div>Developer</div>\n}\n","import React from \"react\"\nimport { createStyles, Divider, Drawer, ListItem, ListItemIcon, ListItemText, Toolbar } from \"@material-ui/core\"\nimport pages, { RoutingComponent } from \"../pages\"\nimport { BrowserRouterProps, Link, RouteComponentProps } from \"react-router-dom\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { useRecoilState, useRecoilValue } from \"recoil/dist\"\nimport { envProfileState } from \"../atoms/EnvProfile\"\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    drawerContainer: {\n      overflow: \"auto\",\n    },\n    sectionDesktop: {\n      [theme.breakpoints.up(\"md\")]: {\n        display: \"flex\",\n      },\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n  })\n)\n\ninterface Props {}\n\nexport default function LeftSideBar() {\n  const [envProfile, setEnvProfile] = useRecoilState(envProfileState)\n  const classes = useStyles()\n  const isActive = (value: string): boolean => {\n    return window.location.pathname === value\n  }\n  const setProduction = () => {\n    window.location.href = window.location.pathname.replace(\"development\", \"production\")\n  }\n  const setDevelopment = () => {\n    window.location.href = window.location.pathname.replace(\"production\", \"development\")\n  }\n\n  return (\n    <Drawer\n      className={classes.drawer}\n      variant=\"permanent\"\n      classes={{\n        paper: classes.drawerPaper,\n      }}\n    >\n      <Toolbar />\n      <div className={classes.drawerContainer}>\n        <div>Default Project</div>\n        <div>\n          <ul>\n            <li>Production {envProfile === \"production\" && `(current)`}</li>\n            <li>Development {envProfile === \"development\" && `(current)`}</li>\n          </ul>\n        </div>\n        <div>\n          <div></div>\n          <button onClick={setDevelopment}>development</button>\n          <button onClick={setProduction}>production</button>\n        </div>\n        <SideBarListItem\n          selected={isActive(pages.experiment.path)}\n          to={`/default/${envProfile}/experiments`}\n          routingComponent={pages.experiment}\n        />\n        <SideBarListItem\n          selected={isActive(pages.metric.path)}\n          to={`/default/${envProfile}/metrics`}\n          routingComponent={pages.metric}\n        />\n        <SideBarListItem\n          selected={isActive(pages.event.path)}\n          to={`/default/${envProfile}/events`}\n          routingComponent={pages.event}\n        />\n        <SideBarListItem\n          selected={isActive(pages.setting.path)}\n          to={`/default/${envProfile}/settings`}\n          routingComponent={pages.setting}\n        />\n        <SideBarListItem\n          selected={isActive(pages.account.path)}\n          to={`/accounts`}\n          routingComponent={pages.account}\n          disabled={true}\n        />\n        <Divider />\n        <SideBarListItem selected={isActive(pages.tutorial.path)} to={`/tutorials`} routingComponent={pages.tutorial} />\n        <SideBarListItem\n          selected={isActive(pages.developers.path)}\n          to={`/developers`}\n          routingComponent={pages.developers}\n        />\n      </div>\n    </Drawer>\n  )\n}\n\nfunction SideBarListItem({\n  routingComponent,\n  to,\n  disabled,\n  selected,\n}: {\n  routingComponent: RoutingComponent<React.ComponentType>\n  to: string\n  disabled?: boolean\n  selected?: boolean\n}) {\n  const Icon = routingComponent.componentIcon\n  return (\n    <ListItem selected={selected} disabled={disabled} button component={Link} to={to}>\n      <ListItemIcon>\n        <Icon />\n      </ListItemIcon>\n      <ListItemText primary={routingComponent.text} />\n    </ListItem>\n  )\n}\n","import React, { useState } from \"react\"\nimport { FormattedMessage } from \"react-intl\"\nimport { AppBar, createStyles, IconButton, ListItem, Menu, MenuItem, Toolbar, Typography } from \"@material-ui/core\"\nimport { Link } from \"react-router-dom\"\nimport pages from \"../pages\"\nimport { AccountCircle } from \"@material-ui/icons\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { useRecoilValue } from \"recoil/dist\"\nimport { envProfileState } from \"../atoms/EnvProfile\"\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n    },\n    grow: {\n      flexGrow: 1,\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n    },\n    sectionDesktop: {\n      [theme.breakpoints.up(\"md\")]: {\n        display: \"flex\",\n      },\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n  })\n)\n\nexport default function Header() {\n  const classes = useStyles()\n  const envProfile = useRecoilValue(envProfileState)\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null)\n  const isMenuOpen = Boolean(anchorEl)\n  const handleProfileMenuOpen = (e: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(e.currentTarget)\n  }\n  const handleMenuClose = () => {\n    setAnchorEl(null)\n  }\n\n  return (\n    <AppBar position=\"fixed\" className={classes.appBar}>\n      <Toolbar>\n        <Typography variant=\"h6\" noWrap>\n          <ListItem button component={Link} to={`/default/${envProfile}/experiments`}>\n            <FormattedMessage id={\"name\"} />\n          </ListItem>\n        </Typography>\n        <div className={classes.grow} />\n        <IconButton edge=\"end\" aria-label=\"account of current user\" color=\"inherit\" onClick={handleProfileMenuOpen}>\n          <AccountCircle />\n        </IconButton>\n      </Toolbar>\n      <Menu\n        anchorEl={anchorEl}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n        id={\"primary-search-account-menu\"}\n        keepMounted\n        transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n        open={isMenuOpen}\n        onClose={handleMenuClose}\n      >\n        {/*<MenuItem onClick={handleMenuClose} component={Link} to={\"/account\"}>*/}\n        {/*  <FormattedMessage id=\"account\" />*/}\n        {/*</MenuItem>*/}\n        <MenuItem onClick={handleMenuClose}>\n          <FormattedMessage id=\"logout\" />\n        </MenuItem>\n      </Menu>\n    </AppBar>\n  )\n}\n","import React, { PropsWithChildren } from \"react\"\nimport { createStyles, CssBaseline, Toolbar } from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport LeftSideBar from \"./LeftSideBar\"\nimport Header from \"./Header\"\nimport { BrowserRouterProps, RouteComponentProps } from \"react-router-dom\"\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n  })\n)\n\nexport default function MainFrame(props: PropsWithChildren<RouteComponentProps>) {\n  const classes = useStyles()\n  console.log(props)\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Header />\n      <LeftSideBar />\n      <main className={classes.content}>\n        <Toolbar />\n        <>{props.children}</>\n      </main>\n    </div>\n  )\n}\n","import React from \"react\"\nimport \"./App.css\"\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\"\nimport { IntlProvider } from \"react-intl\"\nimport { en } from \"./locale\"\nimport pages, { login } from \"./pages\"\nimport MainFrame from \"./layouts/MainFrame\"\n\nconst defaultLang = \"en\"\nlet authenticated: boolean | null = true\n\nfunction App() {\n  return (\n    <IntlProvider locale={defaultLang} messages={en}>\n      <Router>\n        <Switch>\n          {authenticated === null ? (\n            <div>인증 확인중</div>\n          ) : authenticated ? (\n            <>\n              {Object.values(pages).map((page, i) => {\n                return (\n                  <Route\n                    path={page.path}\n                    exact={page.exact}\n                    render={(props) => {\n                      const Component = page.component\n                      return (\n                        <MainFrame {...props}>\n                          <Component {...props} />\n                        </MainFrame>\n                      )\n                    }}\n                    key={i}\n                  />\n                )\n              })}\n              <Route path={login.path} exact={login.exact} component={login.component} />\n            </>\n          ) : (\n            <>\n              <Route path={\"/login\"} render={login.component} />\n              <Redirect path=\"*\" to=\"/\" />\n            </>\n          )}\n        </Switch>\n      </Router>\n    </IntlProvider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\")\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\nimport { RecoilRoot } from \"recoil/dist\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <App />\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}