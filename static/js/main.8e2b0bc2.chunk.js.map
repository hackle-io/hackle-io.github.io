{"version":3,"sources":["locale/en.ts","pages/Test/Test.tsx","pages/Event/Event.tsx","pages/Metric/Metric.tsx","pages/Tutorial/Tutorial.tsx","pages/Test/TestDetail.tsx","pages/Test/TestCreation.tsx","pages/Metric/MetricCreation.tsx","pages/Event/EventCreation.tsx","pages/index.ts","pages/Setting/Setting.tsx","pages/Account/Account.tsx","pages/Developer/Developer.tsx","layouts/Root.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["name","account","logout","useStyles","makeStyles","root","flexGrow","createButtonWrap","textAlign","marginBottom","table","minWidth","createData","key","trafficAllocation","trafficGroup","status","createdAt","rows","eventName","description","measurementTarget","measurementStandard","theme","createStyles","width","backButton","marginRight","spacing","instructions","marginTop","paper","padding","color","palette","text","secondary","buttonGroup","button","margin","textField","RoutingComponent","path","component","componentIcon","exact","this","routingComponent","test","classes","className","Button","variant","Link","to","pages","testCreation","TableContainer","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","row","scope","AssignmentIcon","testDetail","match","useState","anchorEl","setAnchorEl","isMenuOpen","Boolean","handleMenuClose","renderMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","params","Grid","container","item","xs","Typography","startIcon","PlayArrow","Settings","e","currentTarget","props","prop","React","amount","password","testName","testNameRange","showPassword","values","setValues","OutlinedInput","fullWidth","value","onChange","event","target","aria-describedby","inputProps","labelWidth","FormHelperText","length","console","log","history","goBack","metric","openEdit","setOpenEdit","openDelete","setOpenDelete","handleClickOpenEdit","handleCloseEdit","handleClickOpenDelete","handleCloseDelete","metricCreation","IconButton","Edit","Delete","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","AssessmentIcon","metricName","eventCreation","EventIcon","setting","SettingIcon","PersonIcon","tutorial","activeStep","setActiveStep","steps","Stepper","alternativeLabel","label","Step","StepLabel","stepIndex","getStepContent","disabled","prevActiveStep","LiveTvIcon","developers","DeveloperModeIcon","display","grow","appBar","zIndex","drawer","flexShrink","drawerPaper","drawerContainer","overflow","sectionDesktop","breakpoints","up","content","SideBarListItem","Icon","ListItem","ListItemIcon","ListItemText","primary","Root","children","CssBaseline","AppBar","position","Toolbar","noWrap","edge","AccountCircle","Drawer","Divider","App","locale","messages","en","Object","page","i","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8e2b0bc2.chunk.js","sourcesContent":["export default {\n  name: \"Hackle.io\",\n  account: \"Account\",\n  logout: \"logout\",\n}\n","import React from \"react\"\nimport {\n  Button,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { Link } from \"react-router-dom\"\nimport pages from \"../\"\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n  },\n  createButtonWrap: {\n    textAlign: \"right\",\n    marginBottom: \"10px\",\n  },\n  table: {\n    minWidth: 650,\n  },\n})\n\nfunction createData(\n  name: string,\n  key: string,\n  trafficAllocation: number,\n  trafficGroup: string,\n  status: string,\n  createdAt: string\n) {\n  return { name, key, trafficAllocation, trafficGroup, status, createdAt }\n}\n\nconst rows = [\n  createData(\"Test Name Example\", \"5521\", 30, \"50/50\", \"Running\", \"2020-5-31\"),\n  createData(\"[2020.Q3] SRP 개편 2차 테스트\", \"1382\", 60, \"34/33/33\", \"Paused\", \"2020-5-31\"),\n]\n\nexport default function Test() {\n  const classes = useStyles()\n  return (\n    <div className={classes.root}>\n      <div className={classes.createButtonWrap}>\n        <Button color={\"primary\"} variant={\"contained\"} component={Link} to={pages.testCreation.path}>\n          테스트 생성하기\n        </Button>\n      </div>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>테스트</TableCell>\n              <TableCell align=\"right\">\n                트래픽 할당\n                <br />\n                (그룹별 트래픽 배분)\n              </TableCell>\n              <TableCell align=\"right\">테스트 상태</TableCell>\n              <TableCell align=\"right\">테스트 생성일</TableCell>\n              <TableCell align=\"right\">테스트 결과</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row) => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                  <br />({`#${row.key}`})\n                </TableCell>\n                <TableCell align=\"right\">\n                  {row.trafficAllocation}\n                  <br />({row.trafficGroup})\n                </TableCell>\n                <TableCell align=\"right\">{row.status}</TableCell>\n                <TableCell align=\"right\">{row.createdAt}</TableCell>\n                <TableCell align=\"right\">\n                  <Button variant={\"outlined\"} to={`/tests/detail/${row.key}`} component={Link}>\n                    자세히보기\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  )\n}\n","import React from \"react\"\nimport {Button, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow} from \"@material-ui/core\";\nimport {Link} from \"react-router-dom\";\nimport pages from \"../index\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n  },\n  createButtonWrap: {\n    textAlign: \"right\",\n    marginBottom: \"10px\",\n  },\n  table: {\n    minWidth: 650,\n  },\n})\n\nfunction createData(\n  eventName: string,\n  description: string,\n  createdAt: string\n) {\n  return { eventName, description, createdAt }\n}\n\nconst rows = [\n  createData(\"Payment Complete\", \"Event when finishing payment procedure\", \"2020-5-31\"),\n  createData(\"Try CheckOut\", \"Event that clicking ‘CheckOut’ button\", \"2020-4-23\"),\n  createData(\"Cart PV\", \"Entering Cart Page\", \"2020-4-23\"),\n]\n\nexport default function Event() {\n  const classes = useStyles()\n  return (\n    <div className={classes.root}>\n      <div className={classes.createButtonWrap}>\n        <Button color={\"primary\"} variant={\"contained\"} component={Link} to={pages.eventCreation.path}>\n          이벤트 생성하기\n        </Button>\n      </div>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>이벤트</TableCell>\n              <TableCell align=\"right\">생성일</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row) => (\n              <TableRow key={row.eventName}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.eventName}\n                  <br />\n                  <span>{row.description}</span>\n                </TableCell>\n                <TableCell align=\"right\">{row.createdAt}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  )\n}\n","import React, {useState} from \"react\"\nimport {\n  Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle,\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow\n} from \"@material-ui/core\";\nimport {Link} from \"react-router-dom\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Edit, Delete} from \"@material-ui/icons\";\nimport pages from \"../\"\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n  },\n  createButtonWrap: {\n    textAlign: \"right\",\n    marginBottom: \"10px\",\n  },\n  table: {\n    minWidth: 650,\n  },\n})\n\nfunction createData(\n  name: string,\n  key: string,\n  description: string,\n  measurementTarget: string,\n  measurementStandard: string,\n  createdAt: string\n) {\n  return { name, key, description, measurementTarget, measurementStandard, createdAt }\n}\n\nconst rows = [\n  createData(\"Overall Payment Conversion\", \"5521\", \"Total # of Payment Complete / Total # of CheckOut PageView\", \"Count\", \"이벤트 기준\", \"2020-5-31\"),\n  createData(\"Buyer Conversion\", \"1382\", \"(Unique) # of Payment Complete / # of exposed customers\", \"횟수\", \"순 사용자 기준\", \"2020-4-23\"),\n  createData(\"Cart PV\", \"1381\", \"Total # of Cart PageView\", \"횟수\", \"이벤트 기준\", \"2020-4-23\"),\n  createData(\"GMV per Customer\", \"1380\", \"(Unique) Total GMV / # of exposed customers\", \"Value\", \"순 사용자 기준\", \"2020-4-23\"),\n  createData(\"Average Order Value\", \"1379\", \"Total GMV / # of Payment Complete\", \"횟수\", \"순 사용자 기준\", \"2020-4-23\"),\n]\n\nexport default function Metric() {\n  const classes = useStyles()\n  const [openEdit, setOpenEdit] = useState(false);\n  const [openDelete, setOpenDelete] = useState(false);\n\n  const handleClickOpenEdit = () => setOpenEdit(true);\n  const handleCloseEdit = () => setOpenEdit(false);\n\n  const handleClickOpenDelete = () => setOpenDelete(true);\n  const handleCloseDelete = () => setOpenDelete(false);\n\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.createButtonWrap}>\n        <Button color={\"primary\"} variant={\"contained\"} component={Link} to={pages.metricCreation.path}>\n          지표 생성하기\n        </Button>\n      </div>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>지표명</TableCell>\n              <TableCell align=\"right\">\n                측정대상\n              </TableCell>\n              <TableCell align=\"right\">측정기준</TableCell>\n              <TableCell align=\"right\">테스트 생성일</TableCell>\n              <TableCell align=\"right\" />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row) => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                  <br />\n                  <span>{row.description}</span>\n                </TableCell>\n                <TableCell align=\"right\">\n                  {row.measurementTarget}\n                </TableCell>\n                <TableCell align=\"right\">{row.measurementStandard}</TableCell>\n                <TableCell align=\"right\">{row.createdAt}</TableCell>\n                <TableCell align=\"right\">\n                  <IconButton aria-label=\"edit\"\n                              onClick={handleClickOpenEdit}>\n                    <Edit />\n                  </IconButton>\n                  <IconButton aria-label=\"delete\"\n                              onClick={handleClickOpenDelete}>\n                    <Delete />\n                  </IconButton>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <Dialog\n        open={openEdit}\n        onClose={handleCloseEdit}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"수정하기\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            수정하기 본문\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseEdit} color=\"default\">\n            취소\n          </Button>\n          <Button onClick={handleCloseEdit} color=\"primary\" autoFocus>\n            수정\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Dialog\n        open={openDelete}\n        onClose={handleCloseDelete}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"삭제하기\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            정말 삭제 하시겠습니까?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDelete} color=\"default\">\n            취소\n          </Button>\n          <Button onClick={handleCloseDelete} color=\"secondary\" autoFocus>\n            삭제\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n","import React from \"react\"\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\"\nimport { Button, Step, StepLabel, Stepper, Typography } from \"@material-ui/core\"\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n    },\n    backButton: {\n      marginRight: theme.spacing(1),\n    },\n    instructions: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n  })\n)\n\nfunction getSteps() {\n  return [\"테스트 목표 정의(event, metric)\", \"SDK 연동 설정\", \"A/B Test 생성\"]\n}\n\nfunction getStepContent(stepIndex: number) {\n  switch (stepIndex) {\n    case 0:\n      return \"이벤트를 정의해보세요\"\n    case 1:\n      return \"SDK 연동 해보세요\"\n    case 2:\n      return \"A/B테스트 생성해보세요\"\n    default:\n      return \"Unknown stepIndex\"\n  }\n}\n\nexport default function Tutorial() {\n  const classes = useStyles()\n  const [activeStep, setActiveStep] = React.useState(0)\n  const steps = getSteps()\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1)\n  }\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1)\n  }\n\n  const handleReset = () => {\n    setActiveStep(0)\n  }\n\n  return (\n    <div className={classes.root}>\n      <Stepper activeStep={activeStep} alternativeLabel>\n        {steps.map((label) => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n      <div>\n        {activeStep === steps.length ? (\n          <div>\n            <Typography className={classes.instructions}>생성완료</Typography>\n            <Button onClick={handleReset}>Reset</Button>\n          </div>\n        ) : (\n          <div>\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\n            <div>\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.backButton}>\n                Back\n              </Button>\n              <Button variant=\"contained\" color=\"primary\" onClick={handleNext}>\n                {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\n              </Button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React, { useState } from \"react\"\nimport { RouteComponentProps } from \"react-router-dom\"\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\"\nimport { Button, Grid, Menu, MenuItem, Paper, Typography } from \"@material-ui/core\"\nimport { PlayArrow, Settings } from \"@material-ui/icons\"\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      color: theme.palette.text.secondary,\n    },\n    buttonGroup: {\n      textAlign: \"right\",\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n  })\n)\n\ninterface Props {\n  key: string\n}\n\nexport default function TestDetail({ match }: RouteComponentProps<Props>) {\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null)\n  const isMenuOpen = Boolean(anchorEl)\n  const handleProfileMenuOpen = (e: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(e.currentTarget)\n  }\n  const handleMenuClose = () => {\n    setAnchorEl(null)\n  }\n\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={\"primary-search-account-menu\"}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>트래픽 및 테스트 설정</MenuItem>\n      <MenuItem onClick={handleMenuClose}>Whitelist 설정</MenuItem>\n      <MenuItem onClick={handleMenuClose}>테스트 Winner 설정</MenuItem>\n    </Menu>\n  )\n  const classes = useStyles()\n  const { params } = match\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <Typography variant={\"h4\"}>Test Key: {`#${params.key}`}</Typography>\n            <div className={classes.buttonGroup}>\n              <Button variant=\"contained\" color=\"primary\" className={classes.button} startIcon={<PlayArrow />}>\n                시작\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"default\"\n                className={classes.button}\n                startIcon={<Settings />}\n                onClick={handleProfileMenuOpen}\n              >\n                설정\n              </Button>\n            </div>\n          </Paper>\n        </Grid>\n        <Grid item xs={6}>\n          <Paper className={classes.paper}>xs=6</Paper>\n        </Grid>\n        <Grid item xs={6}>\n          <Paper className={classes.paper}>xs=6</Paper>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>xs=3</Paper>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>xs=3</Paper>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>xs=3</Paper>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>xs=3</Paper>\n        </Grid>\n      </Grid>\n      {renderMenu}\n    </div>\n  )\n}\n","import React from \"react\"\nimport { Button, FormHelperText, Grid, OutlinedInput, Paper, Typography } from \"@material-ui/core\"\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\"\nimport { RouteComponentProps } from \"react-router-dom\"\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      color: theme.palette.text.secondary,\n    },\n    buttonGroup: {\n      textAlign: \"right\",\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    margin: {\n      margin: theme.spacing(1),\n    },\n    textField: {\n      width: \"25ch\",\n    },\n  })\n)\n\ninterface State {\n  amount: string\n  password: string\n  testName: string\n  testNameRange: number\n  showPassword: boolean\n}\n\nexport default function TestCreation(props: RouteComponentProps) {\n  const classes = useStyles()\n  const [values, setValues] = React.useState<State>({\n    amount: \"\",\n    password: \"\",\n    testName: \"\",\n    testNameRange: 0,\n    showPassword: false,\n  })\n  const handleChange = (prop: keyof State) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValues({ ...values, [prop]: event.target.value })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <Typography variant={\"h4\"}>A/B 테스트 생성</Typography>\n            <Grid container spacing={3}>\n              <Grid item xs={3}>\n                <Typography variant={\"h6\"}>A/B 테스트명</Typography>\n              </Grid>\n              <Grid item xs={9}>\n                <OutlinedInput\n                  fullWidth={true}\n                  id=\"outlined-adornment-test-name\"\n                  value={values.testName}\n                  onChange={handleChange(\"testName\")}\n                  aria-describedby=\"outlined-test-name-helper-text\"\n                  inputProps={{\n                    \"aria-label\": \"test-name\",\n                  }}\n                  labelWidth={0}\n                />\n                <FormHelperText id=\"outlined-test-name-helper-text\">{`${values.testName.length}/200`}</FormHelperText>\n              </Grid>\n            </Grid>\n            <div className={classes.buttonGroup}>\n              <Button\n                variant=\"contained\"\n                color=\"default\"\n                className={classes.button}\n                onClick={() => {\n                  console.log(props)\n                  // @ts-ignore\n                  props.history.goBack()\n                }}\n              >\n                취소\n              </Button>\n              <Button variant=\"contained\" color=\"primary\" className={classes.button}>\n                테스트 생성\n              </Button>\n            </div>\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from \"react\";\nimport {Button, FormHelperText, Grid, OutlinedInput, Paper, Typography} from \"@material-ui/core\";\nimport {createStyles, makeStyles} from \"@material-ui/core/styles\";\nimport {RouteComponentProps} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      color: theme.palette.text.secondary,\n    },\n    buttonGroup: {\n      textAlign: \"right\",\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    margin: {\n      margin: theme.spacing(1),\n    },\n    textField: {\n      width: \"25ch\",\n    },\n  })\n)\n\ninterface State {\n  metricName: string\n}\n\nexport default function MetricCreation(props: RouteComponentProps) {\n  const classes = useStyles()\n  const [values, setValues] = React.useState<State>({\n    metricName: \"\",\n  })\n  const handleChange = (prop: keyof State) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValues({ ...values, [prop]: event.target.value })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <Typography variant={\"h4\"}>지표 생성하기</Typography>\n            <Grid container spacing={3}>\n              <Grid item xs={3}>\n                <Typography variant={\"h6\"}>지표명</Typography>\n              </Grid>\n              <Grid item xs={9}>\n                <OutlinedInput\n                  fullWidth={true}\n                  id=\"outlined-adornment-test-name\"\n                  value={values.metricName}\n                 onChange={handleChange(\"metricName\")}\n                  aria-describedby=\"outlined-test-name-helper-text\"\n                  inputProps={{\n                    \"aria-label\": \"test-name\",\n                  }}\n                  labelWidth={0}\n                />\n                <FormHelperText id=\"outlined-test-name-helper-text\">{`${values.metricName.length}/50`}</FormHelperText>\n              </Grid>\n            </Grid>\n            <div className={classes.buttonGroup}>\n              <Button\n                variant=\"contained\"\n                color=\"default\"\n                className={classes.button}\n                onClick={() => {\n                  // @ts-ignore\n                  props.history.goBack()\n                }}\n              >\n                취소\n              </Button>\n              <Button variant=\"contained\" color=\"primary\" className={classes.button}>\n                지표 생성\n              </Button>\n            </div>\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}","import React from \"react\";\nimport {Button, FormHelperText, Grid, OutlinedInput, Paper, Typography} from \"@material-ui/core\";\nimport {createStyles, makeStyles} from \"@material-ui/core/styles\";\nimport {RouteComponentProps} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      color: theme.palette.text.secondary,\n    },\n    buttonGroup: {\n      textAlign: \"right\",\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    margin: {\n      margin: theme.spacing(1),\n    },\n    textField: {\n      width: \"25ch\",\n    },\n  })\n)\n\ninterface State {\n  eventName: string\n}\n\nexport default function MetricCreation(props: RouteComponentProps) {\n  const classes = useStyles()\n  const [values, setValues] = React.useState<State>({\n    eventName: \"\",\n  })\n  const handleChange = (prop: keyof State) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValues({ ...values, [prop]: event.target.value })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <Typography variant={\"h4\"}>이벤트 생성하기</Typography>\n            <Grid container spacing={3}>\n              <Grid item xs={3}>\n                <Typography variant={\"h6\"}>이벤트명</Typography>\n              </Grid>\n              <Grid item xs={9}>\n                <OutlinedInput\n                  fullWidth={true}\n                  id=\"outlined-adornment-test-name\"\n                  value={values.eventName}\n                 onChange={handleChange(\"eventName\")}\n                  aria-describedby=\"outlined-test-name-helper-text\"\n                  inputProps={{\n                    \"aria-label\": \"test-name\",\n                  }}\n                  labelWidth={0}\n                />\n                <FormHelperText id=\"outlined-test-name-helper-text\">{`${values.eventName.length}/50`}</FormHelperText>\n              </Grid>\n            </Grid>\n            <div className={classes.buttonGroup}>\n              <Button\n                variant=\"contained\"\n                color=\"default\"\n                className={classes.button}\n                onClick={() => {\n                  // @ts-ignore\n                  props.history.goBack()\n                }}\n              >\n                취소\n              </Button>\n              <Button variant=\"contained\" color=\"primary\" className={classes.button}>\n                이벤트 생성\n              </Button>\n            </div>\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}","import React, { ComponentType } from \"react\"\nimport {\n  LiveTv as LiveTvIcon,\n  Person as PersonIcon,\n  DeveloperMode as DeveloperModeIcon,\n  Assessment as AssessmentIcon,\n  Event as EventIcon,\n  Settings as SettingIcon,\n  Assignment as AssignmentIcon,\n} from \"@material-ui/icons\"\nimport Test from \"./Test/Test\"\nimport Account from \"./Account/Account\"\nimport Event from \"./Event/Event\"\nimport Metric from \"./Metric/Metric\"\nimport Setting from \"./Setting/Setting\"\nimport Tutorial from \"./Tutorial/Tutorial\"\nimport Developer from \"./Developer/Developer\"\nimport TestDetail from \"./Test/TestDetail\"\nimport TestCreation from \"./Test/TestCreation\"\nimport MetricCreation from \"./Metric/MetricCreation\";\nimport EventCreation from \"./Event/EventCreation\";\n\nexport class RoutingComponent<T> {\n  text: string\n  path: string\n  component: T\n  componentIcon: React.ComponentType\n  exact: boolean\n\n  constructor(text: string, path: string, component: T, componentIcon: React.ComponentType, exact = false) {\n    this.text = text\n    this.path = path\n    this.component = component\n    this.componentIcon = componentIcon\n    this.exact = exact\n  }\n}\n\nexport interface RoutingComponentMap<T> {\n  [key: string]: RoutingComponent<T>\n}\nconst routingComponent = {\n  test: new RoutingComponent(\"Test\", \"/\", Test, AssignmentIcon, true),\n  testDetail: new RoutingComponent(\"TestDetail\", \"/tests/detail/:key\", TestDetail, AssignmentIcon),\n  testCreation: new RoutingComponent(\"TestCreation\", \"/tests/creation\", TestCreation, AssignmentIcon),\n  metric: new RoutingComponent(\"Metric\", \"/metrics\", Metric, AssessmentIcon, true),\n  metricCreation: new RoutingComponent(\"MetricCreation\", \"/metrics/creation\", MetricCreation, AssessmentIcon),\n  event: new RoutingComponent(\"Event\", \"/events\", Event, EventIcon, true),\n  eventCreation: new RoutingComponent(\"Event\", \"/events/creation\", EventCreation, EventIcon),\n  setting: new RoutingComponent(\"Setting\", \"/settings\", Setting, SettingIcon),\n  account: new RoutingComponent(\"Account\", \"/accounts\", Account, PersonIcon),\n  tutorial: new RoutingComponent(\"Tutorial\", \"/tutorials\", Tutorial, LiveTvIcon),\n  developers: new RoutingComponent(\"Developers\", \"/developers\", Developer, DeveloperModeIcon),\n}\nexport default routingComponent\n","import React from \"react\"\n\nexport default function Setting() {\n  return <div>Setting</div>\n}\n","import React from \"react\"\n\nexport default function Account() {\n  return <div>Account</div>\n}\n","import React from \"react\"\n\nexport default function Developer() {\n  return <div>Developer</div>\n}\n","import React, { PropsWithChildren, useState } from \"react\"\nimport { FormattedMessage } from \"react-intl\"\nimport {\n  AppBar,\n  createStyles,\n  CssBaseline,\n  Divider,\n  Drawer,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Toolbar,\n  Typography,\n  IconButton,\n  Menu,\n  MenuItem,\n} from \"@material-ui/core\"\nimport pages, { RoutingComponent } from \"../pages\"\nimport { Link } from \"react-router-dom\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { AccountCircle } from \"@material-ui/icons\"\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n    },\n    grow: {\n      flexGrow: 1,\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    drawerContainer: {\n      overflow: \"auto\",\n    },\n    sectionDesktop: {\n      [theme.breakpoints.up(\"md\")]: {\n        display: \"flex\",\n      },\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n  })\n)\n\nfunction SideBarListItem({\n  routingComponent,\n  disabled,\n}: {\n  routingComponent: RoutingComponent<React.ComponentType>\n  disabled?: boolean\n}) {\n  const Icon = routingComponent.componentIcon\n  return (\n    <ListItem disabled={disabled} button component={Link} to={routingComponent.path}>\n      <ListItemIcon>\n        <Icon />\n      </ListItemIcon>\n      <ListItemText primary={routingComponent.text} />\n    </ListItem>\n  )\n}\n\nexport default function Root({ children }: PropsWithChildren<any>) {\n  const classes = useStyles()\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null)\n  const isMenuOpen = Boolean(anchorEl)\n  const handleProfileMenuOpen = (e: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(e.currentTarget)\n  }\n  const handleMenuClose = () => {\n    setAnchorEl(null)\n  }\n\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={\"primary-search-account-menu\"}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      {/*<MenuItem onClick={handleMenuClose} component={Link} to={\"/account\"}>*/}\n      {/*  <FormattedMessage id=\"account\" />*/}\n      {/*</MenuItem>*/}\n      <MenuItem onClick={handleMenuClose}>\n        <FormattedMessage id=\"logout\" />\n      </MenuItem>\n    </Menu>\n  )\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" noWrap>\n            <ListItem button component={Link} to={pages.test.path}>\n              <FormattedMessage id={\"name\"} />\n            </ListItem>\n          </Typography>\n          <div className={classes.grow} />\n          <IconButton edge=\"end\" aria-label=\"account of current user\" color=\"inherit\" onClick={handleProfileMenuOpen}>\n            <AccountCircle />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      {renderMenu}\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <Toolbar />\n        <div className={classes.drawerContainer}>\n          <SideBarListItem routingComponent={pages.test} />\n          <SideBarListItem routingComponent={pages.metric} />\n          <SideBarListItem routingComponent={pages.event} />\n          <SideBarListItem routingComponent={pages.setting} />\n          <SideBarListItem routingComponent={pages.account} disabled={true} />\n          <Divider />\n          <SideBarListItem routingComponent={pages.tutorial} />\n          <SideBarListItem routingComponent={pages.developers} />\n        </div>\n      </Drawer>\n      <main className={classes.content}>\n        <Toolbar />\n        <>{children}</>\n      </main>\n    </div>\n  )\n}\n","import React from \"react\"\nimport \"./App.css\"\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport { IntlProvider } from \"react-intl\"\nimport { en } from \"./locale\"\nimport pages from \"./pages\"\nimport Root from \"./layouts/Root\"\n\nconst defaultLang = \"en\"\n\nfunction App() {\n  return (\n    <IntlProvider locale={defaultLang} messages={en}>\n      <Router>\n        <Switch>\n          <Root>\n            {Object.values(pages).map((page, i) => {\n              return <Route path={page.path} exact={page.exact} component={page.component} key={i} />\n            })}\n          </Root>\n        </Switch>\n      </Router>\n    </IntlProvider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\")\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}